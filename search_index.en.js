window.searchIndex = {"fields":["title","body"],"pipeline":["trimmer","stopWordFilter","stemmer"],"ref":"id","version":"0.9.5","index":{"body":{"root":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"0":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1},"5":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}},"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"1":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":5.0990195135927845},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":3,")":{"docs":{},"df":0,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},".":{"docs":{},"df":0,".":{"docs":{},"df":0,"8":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"7":{"docs":{},"df":0,"5":{"docs":{},"df":0,"6":{"docs":{},"df":0,"5":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"9":{"docs":{},"df":0,"2":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"8":{"docs":{},"df":0,"2":{"docs":{},"df":0,"9":{"docs":{},"df":0,"5":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"0":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":2,".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"9":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"6":{"docs":{},"df":0,"1":{"docs":{},"df":0,"9":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"7":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"1":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1},"9":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}},"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1,"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"5":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"8":{"docs":{},"df":0,".":{"docs":{},"df":0,"6":{"docs":{},"df":0,"7":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"3":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"6":{"docs":{},"df":0,"6":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"5":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"7":{"docs":{},"df":0,"4":{"docs":{},"df":0,"9":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"4":{"docs":{},"df":0,"9":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"8":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"7":{"docs":{},"df":0,"1":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"9":{"docs":{},"df":0,"4":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"2":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":7.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3,".":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"2":{"docs":{},"df":0,"7":{"docs":{},"df":0,"8":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"6":{"docs":{},"df":0,"5":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"5":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"7":{"docs":{},"df":0,"7":{"docs":{},"df":0,"6":{"docs":{},"df":0,"8":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"0":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"9":{"docs":{},"df":0,"7":{"docs":{},"df":0,"7":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"2":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1,".":{"docs":{},"df":0,"3":{"docs":{},"df":0,"5":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"6":{"docs":{},"df":0,"6":{"docs":{},"df":0,"7":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1},"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"8":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"3":{"docs":{},"df":0,"4":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"5":{"docs":{},"df":0,"7":{"docs":{},"df":0,"5":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"5":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"6":{"docs":{},"df":0,"6":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"6":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"7":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1,".":{"docs":{},"df":0,"3":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"4":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"8":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,".":{"docs":{},"df":0,"7":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"^":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"3":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.324555320336759},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"4":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"9":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"9":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"8":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"6":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"8":{"docs":{},"df":0,"9":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"3":{"docs":{},"df":0,"4":{"docs":{},"df":0,"8":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"8":{"docs":{},"df":0,".":{"docs":{},"df":0,"8":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"4":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.795831523312719},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3,")":{"docs":{},"df":0,",":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},".":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"5":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"8":{"docs":{},"df":0,"4":{"docs":{},"df":0,"9":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"3":{"docs":{},"df":0,"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"8":{"docs":{},"df":0,"7":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"5":{"docs":{},"df":0,"9":{"docs":{},"df":0,"6":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"4":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"5":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"6":{"docs":{},"df":0,"9":{"docs":{},"df":0,".":{"docs":{},"df":0,"5":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"8":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"^":{"docs":{},"df":0,"8":{"docs":{},"df":0,"^":{"docs":{},"df":0,"9":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"5":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"5":{"docs":{},"df":0,"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"5":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"8":{"docs":{},"df":0,".":{"docs":{},"df":0,"4":{"docs":{},"df":0,"6":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"5":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"6":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"5":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"9":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"4":{"docs":{},"df":0,"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"9":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"7":{"docs":{},"df":0,"6":{"docs":{},"df":0,"5":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"5":{"docs":{},"df":0,"2":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"8":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"9":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"6":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3,".":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"8":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"9":{"docs":{},"df":0,".":{"docs":{},"df":0,"4":{"docs":{},"df":0,"9":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"1":{"docs":{},"df":0,"8":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"5":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"6":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"7":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"9":{"docs":{},"df":0,"6":{"docs":{},"df":0,"5":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"9":{"docs":{},"df":0,"8":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"5":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"6":{"docs":{},"df":0,"5":{"docs":{},"df":0,"7":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"3":{"docs":{},"df":0,"5":{"docs":{},"df":0,"3":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"7":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1},"8":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1},"9":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"8":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"0":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"4":{"docs":{},"df":0,"9":{"docs":{},"df":0,"3":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"3":{"docs":{},"df":0,"0":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"8":{"docs":{},"df":0,"5":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"2":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"4":{"docs":{},"df":0,"4":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"9":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"9":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1,".":{"docs":{},"df":0,"5":{"docs":{},"df":0,"8":{"docs":{},"df":0,"7":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"6":{"docs":{},"df":0,"8":{"docs":{},"df":0,"2":{"docs":{},"df":0,"9":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"7":{"docs":{},"df":0,"9":{"docs":{},"df":0,"2":{"docs":{},"df":0,"7":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"8":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"7":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"7":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"3":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"5":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"6":{"docs":{},"df":0,"3":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"_":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"|":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}},".":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.872983346207417}},"df":1}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.0}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"_":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,";":{"docs":{},"df":0,"`":{"docs":{},"df":0,"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"`":{"docs":{},"df":0,"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"b":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":3}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}},"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.242640687119285}},"df":3}}}}},"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}},"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":3,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}},"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}},"k":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"'":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}},"i":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2},"w":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":3}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.7416573867739413},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":3}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2}},"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}}},"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1,";":{"docs":{},"df":0,"=":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"=":{"docs":{},"df":0,"_":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}},"'":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":1}}}}},"*":{"docs":{},"df":0,"*":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}},"[":{"docs":{},"df":0,"u":{"docs":{},"df":0,"8":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}},"_":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"y":{"docs":{},"df":0,"[":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1},"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"[":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"[":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"[":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544}},"df":1}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"[":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"[":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"[":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"[":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1},"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":5.0990195135927845},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}},"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"[":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"[":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"9":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"z":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"_":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}},"g":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0}},"df":1},"u":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"y":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"=":{"docs":{},"df":0,"u":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":2}}}},"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":8.94427190999916}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}},"1":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"2":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}},"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"a":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":2}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}},"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.872983346207417}},"df":1,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.3166247903554}},"df":2}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"y":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":4}}}}},"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}},"k":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.7416573867739413}},"df":1,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903}},"df":1}}}}}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"!":{"docs":{},"df":0,"[":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"=":{"docs":{},"df":0,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"+":{"docs":{},"df":0,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1}}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"s":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903}},"df":1}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544}},"df":2,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.123105625617661}},"df":2}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":4.242640687119285},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554}},"df":2,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"\"":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"\"":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"x":{"docs":{},"df":0,"\"":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"7":{"docs":{},"df":0,"7":{"docs":{},"df":0,"6":{"docs":{},"df":0,"8":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"4":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}}}},"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554}},"df":1}}}}},"f":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":1}}}},"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":2,"(":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"'":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"y":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"x":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.123105625617661}},"df":1,"'":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}},"b":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":3,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}},".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.1622776601683795}},"df":3,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"g":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}},"r":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":5.196152422706632}},"df":3,"\"":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}},"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}},"(":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},".":{"docs":{},"df":0,"z":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2},"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"df":0,"\"":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.7416573867739413},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":3}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"w":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}}}}},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903}},"df":1}}},"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.58257569495584},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}}}}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.0}},"df":2}},"g":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/":{"tf":1.0},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":5}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.872983346207417},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":2},"y":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}},"o":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":2}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.123105625617661}},"df":2,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}},"x":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"d":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":1}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"1":{"docs":{},"df":0,"3":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}},"l":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}},"r":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"b":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"y":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}}},"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":4.358898943540674},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.0}},"df":2,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"3":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554}},"df":1,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"i":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}},"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":5.477225575051661},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.242640687119285}},"df":3,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979}},"df":1}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}},"g":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":2,"#":{"docs":{},"df":0,"4":{"docs":{},"df":0,"6":{"docs":{},"df":0,"6":{"docs":{},"df":0,"3":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"i":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772}},"df":1}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2},"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}},"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.0}},"df":1}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"c":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}},"o":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3}},"s":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":1}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.872983346207417}},"df":3,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}},"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":3},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":4.795831523312719},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989}},"df":2,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"u":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":5.5677643628300215}},"df":3}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2},"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2}},"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":2}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2,"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}},"i":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903}},"df":2}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":2,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.0}},"df":4,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":3}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"x":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}},"r":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.7416573867739413}},"df":2}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.4641016151377544}},"df":2}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.0}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"w":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":3,"'":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"m":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"q":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"q":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"q":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544}},"df":1,"'":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"{":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":3}}}},"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,"+":{"docs":{},"df":0,")":{"docs":{},"df":0,"?":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"#":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":5.291502622129181}},"df":3,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"y":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}},"e":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.242640687119285}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":3,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.123105625617661},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":3,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}}},"e":{"docs":{},"df":0,"q":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2},"p":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":5.196152422706632}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"0":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"1":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.4641016151377544}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}},"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1,"'":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":4}}}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}},"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}},"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.4641016151377544}},"df":2,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2}}}}}}},"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2,"'":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"o":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.3166247903554}},"df":3}}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.242640687119285},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":3}},"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3,".":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1},"w":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3},"m":{"docs":{},"df":0,"b":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}},"y":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":1,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.872983346207417}},"df":2,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},".":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3}},"0":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"7":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2}},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}}},"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":2}},"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}},"b":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"u":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554}},"df":1}}}}}}}},"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.898979485566356},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":3,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.0}},"df":3}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}},"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":2}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554}},"df":1}},"q":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1,"q":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}},"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":5.0}},"df":3,"[":{"docs":{},"df":0,"e":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"3":{"docs":{},"df":0,"8":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,"9":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"7":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"2":{"docs":{},"df":0,"3":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"3":{"docs":{},"df":0,"0":{"docs":{},"df":0,"8":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"4":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"5":{"docs":{},"df":0,"9":{"docs":{},"df":0,"7":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1,"u":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.3166247903554},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.3166247903554},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":3,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}},"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.7416573867739413},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.69041575982343}},"df":3,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}},"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,"8":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0}},"df":1}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.358898943540674},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}},"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":2,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}},"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}}}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.708203932499369}},"df":1,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":8.246211251235321}},"df":2,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":2},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":1}}}}}}},"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.872983346207417}},"df":2,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":2},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":2}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.0}},"df":3}}}},"e":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"w":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":3}}},"l":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}},"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}},"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}},"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.7416573867739413},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":3}}},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3},"x":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979}},"df":1}}},"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}},"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989}},"df":1,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"w":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"_":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}}}}}}}}},"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":10.198039027185569},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":5.0}},"df":3,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"h":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}},"[":{"docs":{},"df":0,"u":{"docs":{},"df":0,"8":{"docs":{},"df":0,"]":{"docs":{},"df":0,",":{"docs":{},"df":0,")":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"[":{"docs":{},"df":0,"u":{"docs":{},"df":0,"8":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"a":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"_":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"2":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":4}}}},"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2,"\"":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}}}}},".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":1}}}}}}},"t":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":1}}}}}}}}}}},"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}}}}}},"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"v":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"k":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":2,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":1}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}},"n":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":1}}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":2}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}},"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"h":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":2,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.855654600401044},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":5.916079783099616}},"df":3,"'":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.0}},"df":1,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772}},"df":1}},"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":7.937253933193772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":5.291502622129181}},"df":3,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"q":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":2,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":3}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"o":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.7416573867739413},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":4,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2},"n":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.0}},"df":1},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"y":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.242640687119285}},"df":1,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"7":{"docs":{},"df":0,"5":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"w":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":18.083141320025124},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":7.745966692414834}},"df":2,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"=":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"y":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"h":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":5.477225575051661}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}}}}}}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2},"l":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.358898943540674}},"df":2,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.605551275463989}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":9.848857801796104}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}},"l":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,";":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"p":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}},"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}},"'":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}}}}}}},".":{"docs":{},"df":0,"0":{"docs":{},"df":0,")":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.0}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,";":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":3}},"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}},"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772}},"df":1,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":1}}}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"p":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"o":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}},"p":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.0}},"df":3}},"n":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.605551275463989}},"df":3,"'":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}}},"y":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"e":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,"o":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":2}}}}}}},"g":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}},"m":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772}},"df":1},"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.1622776601683795}},"df":1,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1}}},"'":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3}},"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3},"v":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}},".":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2,"e":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":4},"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903}},"df":1,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":5.477225575051661},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.242640687119285}},"df":2,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,";":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"'":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}}},"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"b":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"f":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.898979485566356},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":7.681145747868608}},"df":3}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3},"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1},"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}},"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":1}},"i":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":10.723805294763608},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.7416573867739413}},"df":3,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":3},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772}},"df":1}}},"i":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.605551275463989}},"df":3}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772}},"df":1}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":2,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":2}}},"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}}}},"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"k":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1},"l":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3}}}}},"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2}}},"s":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":2}}},"t":{"docs":{},"df":0,"'":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.0}},"df":3},".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.58257569495584}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}},"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.123105625617661}},"df":2,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":3}}}}}},"j":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":4.242640687119285}},"df":1,"'":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"v":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"b":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2},"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}},"k":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}},"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}}}},"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"p":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}},"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554}},"df":1,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":8.660254037844387},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}},":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"a":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2},"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}},"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.4641016151377544}},"df":3,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"f":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"i":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"#":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"j":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0}},"df":1}}},"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":5.385164807134504},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.164414002968976}},"df":3}}}}},"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3,",":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"y":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"z":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}},"v":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3}},"f":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.872983346207417}},"df":1,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}},"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.872983346207417}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}},"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}}},"q":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1},"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"'":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.4641016151377544}},"df":3},"_":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3}}},"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795}},"df":1,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"(":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":9.695359714832659}},"df":2,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903}},"df":1}}}}}}}}}}}}},".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}},"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795}},"df":1,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}},"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.47213595499958}},"df":1},"i":{"docs":{},"df":0,"b":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":3}}}}},"f":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":7.0}},"df":3}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}},"n":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"k":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":3}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.242640687119285}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.7416573867739413}},"df":2,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795}},"df":1,"[":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"t":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2}}},"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"(":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979}},"df":1}}},"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,"2":{"docs":{},"df":0,"*":{"docs":{},"df":0,"z":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":1}},"o":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795}},"df":2,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"o":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.69041575982343},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.4641016151377544}},"df":3},"p":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.123105625617661},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":3}},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.123105625617661},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3},"v":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"w":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}},"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,"(":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}},"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.6332495807108}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"?":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1,";":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}},"w":{"docs":{},"df":0,"s":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"m":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":5.477225575051661},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.872983346207417}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}}},"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}},"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"|":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.7416573867739413}},"df":1}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":9.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2,"_":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}}}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"[":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903}},"df":1}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"k":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}}}},"x":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772}},"df":1,"(":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"y":{"docs":{},"df":0,"b":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.0}},"df":3,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"'":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}}},"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544}},"df":1,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.449489742783178}},"df":1}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":2}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.872983346207417}},"df":2,"e":{"docs":{},"df":0,"'":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},".":{"docs":{},"df":0,"7":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"a":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.8284271247461903}},"df":1},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":2,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.242640687119285}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}},"s":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1},"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.6457513110645907}},"df":1}}},"u":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.1622776601683795},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.164414002968976},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.47213595499958}},"df":3,"o":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":4}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":3}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":2,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"3":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"4":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.082762530298219},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":2}},"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":7.745966692414834},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.795831523312719}},"df":3,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}},"ï":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":5.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.242640687119285}},"df":3}},"q":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}},"w":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.4641016151377544}},"df":3,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"v":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"x":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":5.0990195135927845},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}}}},".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}},".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":2,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":2}},"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.47213595499958}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}},"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.0}},"df":3},"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}},"w":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":5.477225575051661},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.605551275463989}},"df":4,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}},"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.872983346207417},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.3166247903554}},"df":2}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}},"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.3166247903554},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":5.477225575051661},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":5.0990195135927845}},"df":3,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3},"t":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}},"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.782329983125268}},"df":1,"'":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2},"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":8.06225774829855}},"df":1,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"'":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1},"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"8":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}},"u":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":2}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.47213595499958},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.123105625617661}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.1622776601683795}},"df":3,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}},"w":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":1}}},"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"m":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.7416573867739413},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.69041575982343}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903}},"df":1,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}},"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.1622776601683795},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":9.1104335791443}},"df":2,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.0}},"df":1}}}}},"r":{"docs":{},"df":0,"#":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.605551275463989},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":9.433981132056603}},"df":2,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}}}}}}}},"'":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}}}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795}},"df":1}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}},"{":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"q":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.0}},"df":1}}}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0}},"df":1}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.0}},"df":3},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"i":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":2,"e":{"docs":{},"df":0,"'":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":2}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"d":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":3}},"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}},"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"y":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}},"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.872983346207417}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979}},"df":1}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}}},"t":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/":{"tf":1.0},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.7416573867739413},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.4641016151377544}},"df":5,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}},"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}},"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":2}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"i":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772}},"df":1}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.449489742783178}},"df":1,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":3}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":6.324555320336759},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554}},"df":2,"'":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.4641016151377544}},"df":1}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":1}}}}},"u":{"docs":{},"df":0,"b":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":7.14142842854285},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":5.830951894845301}},"df":2,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":2}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":2}},"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":2}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":2}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}},"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544}},"df":1,"#":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"4":{"docs":{},"df":0,"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"7":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"4":{"docs":{},"df":0,"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"7":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}}}}}}},"(":{"docs":{},"df":0,"3":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}},"k":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"w":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}},"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":2,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":2}},"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}},"v":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"f":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":2,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.7416573867739413}},"df":3,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989}},"df":1,"(":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"#":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"d":{"docs":{},"df":0,"+":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\\":{"docs":{},"df":0,".":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"d":{"docs":{},"df":0,"+":{"docs":{},"df":0,")":{"docs":{},"df":0,"?":{"docs":{},"df":0,")":{"docs":{},"df":0,"|":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\\":{"docs":{},"df":0,".":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"d":{"docs":{},"df":0,"+":{"docs":{},"df":0,")":{"docs":{},"df":0,")":{"docs":{},"df":0,"(":{"docs":{},"df":0,"[":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"[":{"docs":{},"df":0,"^":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"n":{"docs":{},"df":0,"]":{"docs":{},"df":0,"*":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}},"[":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"\\":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"#":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"^":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"|":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"\\":{"docs":{},"df":0,")":{"docs":{},"df":0,"|":{"docs":{},"df":0,"[":{"docs":{},"df":0,"^":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"]":{"docs":{},"df":0,")":{"docs":{},"df":0,"*":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"#":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"d":{"docs":{},"df":0,"+":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\\":{"docs":{},"df":0,".":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"d":{"docs":{},"df":0,"+":{"docs":{},"df":0,")":{"docs":{},"df":0,"?":{"docs":{},"df":0,")":{"docs":{},"df":0,"|":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\\":{"docs":{},"df":0,".":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"d":{"docs":{},"df":0,"+":{"docs":{},"df":0,")":{"docs":{},"df":0,")":{"docs":{},"df":0,"(":{"docs":{},"df":0,"[":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"[":{"docs":{},"df":0,"^":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"n":{"docs":{},"df":0,"]":{"docs":{},"df":0,"*":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"n":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"#":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"#":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"^":{"docs":{},"df":0,"(":{"docs":{},"df":0,"[":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":2,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}},"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}}},"o":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}},"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":5.477225575051661}},"df":1}},"o":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":3,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"q":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":1,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}},"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":11.224972160321824}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":1}}}}}},"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1},"b":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":1}}}}},"`":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":3}}}},"s":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.4641016151377544}},"df":1},"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":5.291502622129181}},"df":2,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":2,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":1}}}}},"a":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"u":{"docs":{},"df":0,"8":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.58257569495584},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.47213595499958}},"df":3}}}},"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554}},"df":1},"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.47213595499958},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}},"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}},"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.242640687119285}},"df":1,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"b":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}},"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.4641016151377544}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}},"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":7.874007874011811},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.4641016151377544},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.3166247903554}},"df":3,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.872983346207417},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.605551275463989}},"df":4,"'":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"f":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":3,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.4641016151377544}},"df":3}},"v":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}},"y":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.7416573867739413}},"df":1}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"_":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}},"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":5.0990195135927845},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":3},"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}},"g":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":7.0710678118654755},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.69041575982343}},"df":2,"(":{"docs":{},"df":0,"$":{"docs":{},"df":0,"(":{"docs":{},"df":0,"$":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.0}},"df":1,"!":{"docs":{},"df":0,"[":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":5.656854249492381}},"df":1,"!":{"docs":{},"df":0,"[":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}},"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}}}}}}},"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,"?":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795}},"df":1}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"[":{"docs":{},"df":0,"*":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"]":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}},"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.47213595499958}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1}}}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":1,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}}}}},"_":{"docs":{},"df":0,"j":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}},"x":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.242640687119285}},"df":1}}},"v":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.4641016151377544}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}},"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}},"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":5.916079783099616}},"df":1,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"b":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"'":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3,"u":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"'":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.872983346207417},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":2}},"g":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":2,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2,"f":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}}},"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"2":{"docs":{},"df":0,"*":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1},"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.242640687119285},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":2,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"z":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"5":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"p":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}},"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,")":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3},"i":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}}}}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}},"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":2}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.164414002968976}},"df":1,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"f":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.3166247903554}},"df":3,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":2}}}},"e":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"9":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,"7":{"docs":{},"df":0,":":{"docs":{},"df":0,"4":{"docs":{},"df":0,"9":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}},"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"7":{"docs":{},"df":0,"7":{"docs":{},"df":0,":":{"docs":{},"df":0,"3":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"8":{"docs":{},"df":0,"2":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}},"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,"7":{"docs":{},"df":0,":":{"docs":{},"df":0,"4":{"docs":{},"df":0,"5":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}},"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,"7":{"docs":{},"df":0,":":{"docs":{},"df":0,"4":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"7":{"docs":{},"df":0,"8":{"docs":{},"df":0,":":{"docs":{},"df":0,"5":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"6":{"docs":{},"df":0,"0":{"docs":{},"df":0,":":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}},"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":7.0710678118654755},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3}},"t":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":2,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.358898943540674}},"df":2,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.605551275463989}},"df":2}}},"y":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"u":{"docs":{},"df":0,"8":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}},"e":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":2}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}},"l":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.1622776601683795}},"df":2}}},"m":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.47213595499958}},"df":2,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1},"r":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":3},"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.872983346207417}},"df":2,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}}}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.324555320336759},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.242640687119285}},"df":3,"!":{"docs":{},"df":0,"\"":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.855654600401044},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.58257569495584}},"df":2,"'":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"_":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2}},"f":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}},"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772}},"df":1,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":2}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}}}}}}},"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.605551275463989}},"df":1}}}}}},"v":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}}},"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"n":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.1622776601683795},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":13.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":2,"!":{"docs":{},"df":0,"[":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}}}}}},"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544}},"df":1}},"l":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.0}},"df":1}}},"'":{"docs":{},"df":0,"(":{"docs":{},"df":0,"'":{"docs":{},"df":0,"]":{"docs":{},"df":0,",":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"_":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}},"o":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.0}},"df":1}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795}},"df":1}}}},"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.0}},"df":1}}}},"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":1},"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989}},"df":1}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554}},"df":1}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}}}},"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795}},"df":1,"s":{"docs":{},"df":0,"]":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"\"":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}}},"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}},".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}},"\\":{"docs":{},"df":0,"r":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"n":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.0}},"df":3,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}},"l":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979}},"df":1}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":3}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":7.745966692414834}},"df":2,"(":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.872983346207417}},"df":1}}}}}}}},"x":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":2,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}},"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"'":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":3}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.1622776601683795}},"df":1},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"'":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}},"y":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1},"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"g":{"docs":{"https://domenicquirl.github.io/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.872983346207417},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.7416573867739413},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.1622776601683795}},"df":4},"k":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":3}},"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":3}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.449489742783178}},"df":3,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":3,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989}},"df":1}}},"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}},"i":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"m":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":5.477225575051661},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":3}},"n":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,",":{"docs":{},"df":0,"6":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}},"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"o":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}},"g":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":12.806248474865697}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}},"'":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"l":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"_":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}},".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"!":{"docs":{},"df":0,"[":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.123105625617661}},"df":1}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"[":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1},"3":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"6":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"p":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":2}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2},"k":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}},"d":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":6.855654600401044}},"df":2}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.123105625617661}},"df":2}},"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.872983346207417}},"df":3,"c":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":2},"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.0}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"o":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3}},"y":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":6.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":11.575836902790225}},"df":3,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"(":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},")":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"?":{"docs":{},"df":0,"8":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"_":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}}}}},"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"\"":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}}},"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"3":{"docs":{},"df":0,"2":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.7416573867739413},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"6":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}},"8":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2,")":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"]":{"docs":{},"df":0,",":{"docs":{},"df":0,")":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}}}}}}},"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544}},"df":1}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2}},"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}},"i":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.69041575982343}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":2}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}},"p":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.1622776601683795}},"df":4,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"_":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":1,";":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1,"o":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.605551275463989},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":7.3484692283495345},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":5.5677643628300215}},"df":3,"a":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"z":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":1}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"v":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"u":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.7416573867739413},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.1622776601683795},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":3}},"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"2":{"docs":{},"df":0,"_":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}},"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.3166247903554}},"df":1}}}},"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":2,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544}},"df":2,"e":{"docs":{},"df":0,"'":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}},"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"e":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.872983346207417},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3,"!":{"docs":{},"df":0,"[":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}},"_":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"8":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.605551275463989},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3,"f":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3}}}}}},"i":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":2,"b":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"v":{"docs":{},"df":0,"v":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1,"v":{"docs":{},"df":0,"v":{"docs":{},"df":0,"v":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":1}},"l":{"docs":{},"df":0,"k":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2},"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}},"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.7416573867739413},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.872983346207417},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":4.795831523312719}},"df":3}},"r":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"y":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.123105625617661},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":3}},"e":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":5.830951894845301},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.3166247903554}},"df":2}},"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.23606797749979}},"df":2},"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":2}},"b":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":1,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.449489742783178},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.7416573867739413},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.872983346207417}},"df":3,":":{"docs":{},"df":0,"4":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"'":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3},"e":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.7320508075688772}},"df":3}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.0},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":1}}},"y":{"docs":{},"df":0,"'":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}}}}},"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979}},"df":2,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":2}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":3}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2},"k":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":4.242640687119285},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.58257569495584},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":3.872983346207417}},"df":3,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":1}}}}}},"w":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1,"(":{"docs":{},"df":0,"x":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.0}},"df":2,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/":{"tf":1.0},"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.3166247903554},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":4.123105625617661},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.8284271247461903}},"df":4,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":3.4641016151377544}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.6457513110645907},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.8284271247461903},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.4142135623730951}},"df":3}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}}}},"s":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772}},"df":1}},"x":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":3.1622776601683795},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":7.54983443527075},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.449489742783178}},"df":1}}}}}}}},"y":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.6457513110645907}},"df":2,"'":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":2}}}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1}}}}}}},"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951}},"df":1},"l":{"docs":{},"df":0,"l":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.7320508075688772},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3}},"r":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":2.0},"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.23606797749979},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":3},"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.4142135623730951},"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.7320508075688772}},"df":1},"v":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}},"z":{"docs":{},"df":0,"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"[":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}},"|":{"docs":{},"df":0,"_":{"docs":{},"df":0,")":{"docs":{},"df":0,"(":{"docs":{},"df":0,"[":{"docs":{},"df":0,"a":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"|":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,")":{"docs":{},"df":0,"*":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"#":{"docs":{},"df":0,"#":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"a":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":2.0}},"df":1,"g":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":2.6457513110645907}},"df":1,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"1":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"2":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"3":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"4":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}},"o":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"title":{"root":{"docs":{},"df":0,"4":{"docs":{},"df":0,"8":{"docs":{},"df":0,"h":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://domenicquirl.github.io/blog/langjam2021/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://domenicquirl.github.io/blog/parsing-basics/":{"tf":1.0}},"df":1}}}}},"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://domenicquirl.github.io/blog/serde-handler/":{"tf":1.0}},"df":1}}}}}}},"documentStore":{"save":true,"docs":{"https://domenicquirl.github.io/":{"body":"About Rusty Things\nThis is intended to be a place where I write up mostly educational articles on whatever I get ideas about.\nOther things may follow, but, for now, this will mostly be topics related to language development in Rust.\nBlog\nThere is a list of all my posts to get you going.\nA search bar and categories are under construction.\n","id":"https://domenicquirl.github.io/","title":""},"https://domenicquirl.github.io/blog/":{"body":"","id":"https://domenicquirl.github.io/blog/","title":"All Blog Posts"},"https://domenicquirl.github.io/blog/langjam2021/":{"body":"Last weekend, I built a new programming language completely from scratch in 2 days.\nIn fact, quite a lot of people did, all as part of the first ever langjam.\nIf you're familiar with game jams, the langjam was the exact same principle applied to programming language development:\nOn Friday evening (my time), the jam started with the annoucement of a theme.\nFrom then on, participants had 48 hours to invent a programming language around that theme, build some compiler, interpreter, or other means to run programs in their language and put together some usage instructions and examples.\nIn this post, I want to present the language I built, reflect on the jam, and try to work out some things to learn from my experience that generalize to language development outside of two-day programming marathons.\n🔗This Post is\n\nA recap of my experience participating in langjam 2021.\nA presentation of the language I created during the jam.\nAbout some things that worked well, and some things that didn't.\nFull of compromises.\nHopefully, motivating for all you folks who are working on their own (or any other) language. \n\n🔗This Post is not\n\nAbout writing production language implementations. When I said I made a lot of compromises that was not a joke - no matter the 48 hour language, it's probably not Rust.\nA collection of examples for good code. Same reason as above, really.\nAn overview on the languages people created during the jam. They are many and I haven't even tried half of them, but among the ones I've seen several were very cool. You can check 'em out in the jam repository.\nWritten to get votes. I was in it for the fun and not to win, and I god damn had fun. You can of course vote on the Team: issues here, but please only do so if you also look at and rate other people's entries!\n\n\n🔗Note\nSince this post is about something I did during an event and not for this blog, there is no code for this post in the blog repository.\nYou can find the full implementation of my jam entry in my fork of the jam repo here, but I'll also link that again below where relevant.\n\n🔗The Jam\nSince the langjam was the first of its kind, I didn't really know what to expect going into it.\nGiven that it was organized by Jonathan Turner, who was very involved with TypeScript, has a YouTube channel discussing programming languages including Rust (and more), and is behind Nushell, my hopes were up.\nThe question before the jam was which theme they would choose.\nA jam theme needs to be general enough to allow a wide range of interpretations from participants.\nGame jams often go somewhat abstract with this, having themes like 'Joined Together', 'Out of Control', or 'GENTRE, but you can't MECHANIC'1.\nArguably, finding a theme is harder if you're specific to programming languages (but feel free to disagree).\nWhen the jam came around, it's theme was First-Class Comments.\nAs soon as the theme was announced, we got together and brainstormed where we wanted to go with this.\nBoth the concept of first-class citizens and, well, comments, have pre-existing meaning in the programming language world, so having comments be values in our language was one of the earlier things that came up (and did get into the language, but not as its main focus).\nMany participants from our and other teams also thought along the lines of literate programming, where you describe what you want your program to do in natural language in addition to partial source code, and a corresponding program is created that does what you told it to.\nSome other ideas that I've collected from our Discord chat retroactively were (in no particular order and with no judgement on quality):\n\nThe compiler can read your code and react to it, making comments.\nHave some rather basic instructions that are written like sentences. E.g., I've heard about x. x is kinda 4. would be one instruction that declares x and one that sets it to 4.\nAny comment you write must only be snobby, posh sentences. Slang or emojis in comments are compiler errors, so are grammatical errors.\nUse comments to represent/initialize data: /* \n  class: User\n  name:  Max\n\n  Max has been disappointing today.\n */\n\nwould represent an object of class User where the name field has the value Max. The bottom line would be a per-object actual comment.\nHave // TODO comments be a warning and // FIXME comments be an error.\nDoc tests, like Rust has too.\n\n🔗My Language\nFirst off, it's time that I explain the 'I' vs. 'we' confusion that is going on in this post currently.\nWe started out brainstorming as a team of 4 good-hearted #lang-devvers from the Rust community Discord's language development channel.\nOver the course of the weekend, some stuff came up for everyone but me, so in the end we ended up with a very me-centric language and commit history.\nIf you guys be reading this: I love y'all. Life happens. \nSo, what kind of language did I make with all of this randomly newfound authority (and in about ¼ of the original scope)?\nFor me, the thing that immediately came to mind when I read 'first-class comments' was meta-programming.\nI don't know why, it was just the context in which I could see comments-as-values being the most useful.\nCause sure, sticking a comment in a variable like let x = /* bar */; is fun and all, but what does that let you do?\nIf you have access to a program's syntax tree however, and you have a parser that preserves comments, and then you can inspect and manipulate the syntax tree... well, then it's not the compiler that decides what effects comments in your program will have - it's You who decides2!\nEnter Suslang.\n(Yes, the language is called Suslang and our team name was ඞ. \nIf you're in the community Discord and you know Borger, you can go tell him if you like it. \nIf you aren't, this is absolutely a great and important reason to join and you should definitely do it!)\nOne of the main concepts in Suslang is that you don't run your program, but you run a build script that then runs (or maybe doesn't run) your program.\nThe build script is itself a Suslang program and has access to a parse function which runs our parser on some given input and returns an AST, as well as an eval function which takes an AST and executes the program represented by it.\nIn the simplest case, a build script just parses some program file and then runs it using eval, maybe checking for errors in between (example).\nBut you can do more, a lot more!\nYou can have a build script that ignores your program, counts to 10 to pretend it's doing work, and then just prints Hello World.\nOr you can have a build script that makes up its own input and parses and runs that instead.\n(Annoyingly, this means that the lang name does kinda fit, since you can never be quite sure what version of your program will be running when executing through a build script.\nNever trust a program that you haven't meddled with yourself.)\nAnd you can do meta-programming.\nYou can look at the syntax tree of a program and modify it in any way you like.\nHere is a build script that replaces the value in every let var = value; statement with the expression value + 1 in the AST before running the modified program.\nAlternatively, you can just build your own program entirely from AST nodes and evaluate that.\n🔗First-Class Comments\nLet's bring this back to the jam's theme, 'first-class comments'.\nI said before that Suslang does support comments-as-values, which are of course preserved in the AST.\nIn fact, both let x = /* Hello, world! */; and let y = // Hello, @todo!; are supported, at the minor expense of banning ;s from line comments.\nBut even 'regular' comments that just appear in the source file are parsed and preserved in the syntax tree, such that they can be inspected in the build script.\nWhat you do with them is up to your imagination.\nConsider a Suslang program which contains the following function\n// @trace\nfn has_comments(x, b) {\n    let v = 0;\n    if b {\n        v = 1;\n    }\n    let y = x + v; // @todo: add more code\n    return y;\n}\n\nthat is later called somewhere else like so (this example is from our comments.sus example)\nlet sum = 0;\nfor x in range(3) {\n    // @fixme: maybe this should be `false`?\n    sum = sum + has_comments(x, true);\n}\nprint(sum);\n\nI have written a build script that acts on the @tags present in the comments in the above program.\nAfter one of our early ideas, it will print out warnings for @todos and @fixmes.\nIt will also instrument functions with the @trace annotation with print statements that tell you when and with which values the annotated function is called.\nIf you run this build script on the above example, you will get the output\nParsing Build File\nExecuting Build File\nParsing Source File '.\\examples\\comments.sus'\nChecking comments of '.\\examples\\comments.sus'\nWarning: unresolved `@todo:`: ' @todo: add more code'\nWarning: unresolved `@fixme:`: \n    ' @fixme: maybe this should be `false`?'\nExecuting Source File '.\\examples\\comments.sus'\nCalling fn `has_comments` with (x = 0) (b = true)\nCalling fn `has_comments` with (x = 1) (b = true)\nCalling fn `has_comments` with (x = 2) (b = true)\n6\n\nThe required print statements are inserted directly into the program AST by the build script.\nIt remembers when it has seen a @trace annotation, and when it reaches the annotated function it constructs a call to print by inspecting the function's name and parameters.\nI know it was my own idea, but I think that's pretty neat, and a great way to have comments become even more 'first-class' inside the build script: they are AST nodes just like all the other program components.\nIf you want to try it out for yourself, here's the link again.\nIn case you find any remaining bugs, I'm not taking any responsibility, even though I probably caused them.\nHave fun!\n🔗Things That Worked\nI spent the entire first day without a parser, and therefore also without any syntax.\n\nI knew I wanted to do meta-programming, and the most important thing I needed to do to get that to work was encoding the syntax tree in Suslang itself and exposing it to the user.\nSo I started with the AST evaluator and went backwards from there.\nStarting with the later parts of the implementation I feel like did a lot to get me towards a working version of what I wanted to achieve.\nIt kept me focused on the things that needed to work, leaving more flexible aspects like syntax aside which have a tendency to get me stuck bikeshedding.\nIt helped me get to my first meta-program - the one modifying your let statements - quite quickly, within the first day (even though I had to manually define it in the test, because there was no syntax to describe it).\nThis in turn was a great boost to my motivation as a sign that I was on the right track.\nTree-Walking.\n\nBecause I had enough to do with the whole meta-programming thing (and time was of the essence after my team size reduced by 75%), I didn't even consider more fancy evaluation schemes.\nSure, Suslang is probably not the most performant language in the world (printing the 25th Fibonacci number with a naïve, recursive definition takes roughly 3.9 seconds for me, compared to less than 10ms for the equivalent Rust code), but it is a working language, which was arguably more important.\nAlso, as the meta-program creates and works on ASTs, working with trees seemed like a natural choice for the jam either way.\nI hand-wrote my parser.\n\nAnd I don't think that this made me significantly slower than if I had used any parser generator or combinator library.\nI did use the logos crate for my lexer, but the parser is all hand-written recursive-descent.\nNow, I do have a good bit of experience with hand-written parsers.\nThe only other article on this blog to date is on parsing, I've been writing a moderately sophisticated parser in my main time and recently practiced by speedrunning a small lexer + parser implementation for the experimental Polonius borrow checker during one of their sprints.\nMeanwhile, I have comparatively little experiences with generators like lalrpop or pest, so your mileage may very well vary.\nBut at least for me, I didn't feel like it slowed me down hand-writing everything.\nI was able to get the entire parser done in the evening/night of the first day, including a first translation of the Rust AST to Suslang AST objects.\nI also just like the amount of control I have in making the parser do exactly what I want if I hand-write it.\nFor example, I'm sure it would have taken me ages to figure out how to disallow Class { field: value} object literals in specifically if condition and for loop target positions with a generator (it's probably easy, I just don't know).\nThese little buggers kept trying to mess with if b { and for stmt in ast.body { statements, because of the opening { of the following block.\nI just slapped some state onto my parser to fix that, but I'm not sure I would have been able to return to my main TODO-list as soon trying to re-structure my expression hierarchy in a non-precedence parser (I used Pratt Parsing, which I also discuss in my post on parsing basics).\n🔗Things That Didn't Worked\nWhat's a Pointer?\n\nWhen I started writing the evaluator, I knew I was on limited time.\nThinking myself smart, I didn't spend any time on engineering clever data structures or trying to be efficient, and instead focused on getting my tests working.\nIn Rust, one of the things this often means is ignoring references and lifetimes and all that and instead slap lots of .clone() anywhere you get a compiler error without it.\nThis had one major issue:\nI wanted the meta-program to be able to not only read an AST, but also modify it - that's half the fun after all (the better half)!\nNow, if the evaluator clones the AST nodes wherever it needs to pass a value, the chance that the AST object you are modifying in the build script is actually part of the original AST that is later evaluated is pretty low.\nAnd you'll get a whole lot of 'hey, why's the original program running?'\nIn hindsight, this problem is so obvious to me that I wonder how I have ever not seen it.\nOf course, in hindsight, I have also spent several hours fixing it, getting it stuck in my head.\nTo allow working on the original AST, some notion of access by reference or pointer was required.\nShoehorning those into the already working evaluator gave me more than a few grey hairs, as I scrambled to find (and understand) the correct combination of when to reference what, how to iterate over fields that are pointers, and what to do with awesome types like *ref **ASTFnDef.\nMemory Issues\n\nI have a confession to make.\nThe Suslang implementation uses unsafe, and I'm not sorry about it.\nEven before dealing with language-level references/pointers (see above), I already didn't want to deal with all of my Ints and Strings and Objects having to carry around a lifetime only because sometimes I want to access a.b.c and then assign to it, which needs to modify the original field (see how all my problems involve modifying things that would be way easier to just .clone()? Where have I gone wrong...).\nTo avoid that, I used raw pointers.\nSurprisingly, carelessly using raw pointers is not actually what caused me issues.\nI even managed to implement all of the evaluator with them without majorly screwing up (as far as I know).\nThe problem came on the final day, as I thought I was already done with the implementation and was writing documentation and examples.\nSuddenly, my programs started to segfault.\nBecause I wanted to save time (ominous foreshadowing: that maybe didn't work out), I had used the quickscope crate and its ScopeMap to handle nested scopes and their variables.\nThis will not be a dig on quickscope.\nI am sure their implementation does a great job in many programs, such as it did in my evaluator until things started to not work.\nJust in my head, because in Suslang you cannot drop variables or otherwise end their lifetime, the memory for a variable's value was a fixed location until the variable goes out of scope and you can't access it anymore anyways.\nYou can of course overwrite variable values, but that only changes the value stored at the corresponding location, not the location itself.\nReality had other plans with me.\nI skimmed through quickscope and they use SmallVecs internally, which, in addition to already re-allocating and moving their memory when they need to grow like a regular Vec, also switch from stack memory to heap memory if their length exceeds some threshold.\nOf course, when either of these events happened, all of my values would move to a new memory location.\nAnd when the program processed by a build script was too big, the location of AST elements could change while you start iterating over them because you create a new variable for the loop element.\nThe issue was easily fixed by replacing the uses of quickscope with my own ScopeMap implementation which guarantees to not move variables within the same scope (I wrote a hilariously inefficient version using linked lists. Now that I'm writing this, I probably should've replaced the Vec for nesting scopes with such a list too... oh well...).\nUnfortunately, I only had time to fix this one after submission (so the fix for it is not yet in the jam repo, be aware if you're trying Suslang from there instead of through my links).\n🔗Wise Words\nA jam is the perfect environment to force you to restrict yourself, to be creative despite and because of your limitations, and to just get something done.\nYour code doesn't have to be perfect.\nIf I were trying to make Suslang a real language, I would refactor the evaluator immediately.\nLike, right now, even though it is getting late and I'm already a bit tired.\nBut who could think of sleeping while there exists this monstrosity in my production language???\nThe thing is, I only know this because I have already written the evaluator once and have built enough remaining language around it to see my meta-programming goals come closer.\nIn fact, I have already re-written several parts of it during the jam (mostly because they weren't working, but hey).\nSometimes, you just need to write some code to do the thing you think you want to do, to see if it's actually how you want your lang to be.\nSometimes it is due time for a re-write, but maybe sometimes you can build another feature on top of even the most cursed part of your compiler and get a better feel for where you want to go and what you need to do.\nEmbrace the re-writes, but also embrace the cursed.\n\n1\nAll of these themes are taken from recent GMTK game jams. ↩︎\n\n2\nI'm assuming you know what a syntax tree is. If you don't, and if the abbreviation AST confuses you, maybe read the introduction to my post on parsing basics or the Wikipedia article on abstract syntax trees before you go on. ↩︎\n\n","id":"https://domenicquirl.github.io/blog/langjam2021/","title":"Making a Programming Language in 48h"},"https://domenicquirl.github.io/blog/parsing-basics/":{"body":"I'm in the Rust community Discord server.\nParticularly, I hang around in their language development channel (regularly called #lang-dev, but its name is ever changing).\nThe folks in the server come with varying experience in Rust, and #lang-dev is frequented by Rustaceans of vastly different skill levels and knowledge backgrounds when it comes to actually working on a programming language.\nIn my experience, the Rust community is incredibly kind and usually glad to help out with questions.\nSome questions however, especially beginner ones, keep coming up again and again.\nRegarding parsing, there are a number of great resources already.\nTo mention a few, together with some guesses on why they might leave some of #lang-dev's visitors' questions open (if you are a beginner and some of these words don't mean anything to you yet, don't worry. We'll get there.):\n\n\nCrafting Interpreters is an absolutely fantastic read. Code examples are in Java and C however (also, the C compiler they develop is of very explicitly single-pass, which often makes it difficult for people to use it as guidance for their languages if the language design does not fit that model well. But that's less related to parsing). \n\n\nWriting a Simple Parser in Rust is very beginner-friendly, as it describes the author's own experience coming up with their parser. The parsing result is a homogenous syntax tree, which I personally like a lot, but, based on Rust Discord conversations, a strongly typed AST seems to be easier to conceptualize for many beginners because it gives you concrete things from your language to talk about (like a Function or a Variable). More generally, the post is focused on parsing arithmetic expressions. \nThere is more to most languages than those, though, and dealing with precedence and associativity is often the source of a lot of confusion. The lexer implementation also vastly simplifies in this context, and is done by matching individual characters. That is by all means sufficient for the use case, but does not help beginners with lexing identifiers, escaped string literals, or even just floating point numbers (optionally with scientific notation), even less with handling conflicts between different classes of tokens (such as keywords which look like identifiers).\n\n\nMake a Language is very detailed, but skips from lexer-less string-based parsing directly to using the logos crate.\n\n\nWhile I'm on the topic of other resources, the rust-langdev repository is a collection of language development-related crates organized by category, also featuring a \"Resources\" section with further links on a bunch of topics. Go check it out!\n🔗This Post is\n\nAn introduction to programming language parsing in which we hand-write a parser and run it on some real input.\nA starting point, leaving lots of room for own experiments and further reading.\nIntended as a collection of partial answers I have given in the Discord over time, to have a more comprehensive example and explanation to refer people to.\nAccompanied by a public repository containing the full implementation.\n\n🔗This Post is not\n\nConclusive. Several problems we are tackling here can be solved in multiple ways and I present only one place to start. \nA tutorial on writing production parsers, or an in-depth tutorial on any of the areas it covers really.\nAbout parser generators. We will do all of the parsing by hand.\n\n\n🔗Blog Repository\nThe parser built in this article is publicly available at https://github.com/domenicquirl/blog/tree/master/parsing-basics.\nThe repository contains the final result of our parser implementation, including tests and benches.\n\n🔗A High-Level View\nBy \"parsing\", we mean the process of transforming some input text, for example a source file of code in your language, into a syntax tree.\nWhy transform the text? Because working with individual characters gets really tedious very quickly, and also introducing additional structure to, e.g., the input to a compiler for your language, is very useful to said compiler (or language server, or whatever you want to build) because it can operate on a higher level of abstraction.\nWhy a tree? Programs in most languages are already organized hierarchically.\nThink about Rust: You have crates (libraries or binaries), which can house multiple modules.\nEach module can define an arbitrary number of items such as structs, traits, functions or constants.\nA function is a sequence of multiple statements like variable assignments, loops, conditionals (if), etc1.\nStatements are subdivided further into their components, until at some point we reach some kind of \"basic building blocks\" of our language and can go no further.\nFor example, a variable assignment in Rust consists of the keyword let, a variable name, an equals sign =, an expression that represents the new value of the variable, and a closing semicolon ;.\nThe expression could be a function call, a combined expression like an addition of two numbers, or just a literal (a literal is when you write an explicit value of some data type, like 3, \"Hello World!\" or Foo { bar: 2 }).\nInside of a struct are its fields, but there is even more hierarchy that can be hidden in a struct definition.\nConsider a generic struct Foo&lt;T, U&gt;.\nThe type definition of this struct includes the struct's name (Foo), as well as a list of generic parameters.\nIf you place some restrictions on T or U with a where bound, that bound becomes part of the struct definition too!\nTrees are exactly the structure to represent how a program in your language is built up from its basic blocks layer by layer.\nYou need somewhere to start, like a crate in Rust, but we will just start out with a single file which can contain multiple functions.\nThis starting point becomes the root of the syntax tree.\nWhen parsing a program, it's all about piecing together more and more parts of the tree, branching out every time a part of the program is made up of multiple smaller parts (so, always).\nBelow is an illustration of a syntax tree for a file that contains a function with a variable assignment:\n\n\n    \n🔗\"Excuse me, there's a Lexer in your Parser\"\nThe first point of confusion that commonly arises is that what is colloquially referred to as \"parsing\" quite often includes not one, but two components: a lexer and a parser.\n\n\n    \n\nA lexer looks at the input string character by character and tries to group those characters together into something that at least has a meaning in your language.\nWe'll call such a group of characters a token.\nSometimes, a token will just be a single character.\nA semicolon or an equals sign already mean something to you when you program, while the individual letters \"l\", \"e\" and \"t\" probably don't in most contexts.\nThe lexer will recognize that sequence of characters as the let keyword and will put them in a group together as a single token.\nSimilarly, the lexer will produce a single \"floating point number\" token for the input 27.423e-12.\nThe parser's job is then to take the meaningful tokens kindly created by the lexer and figure out their hierarchical structure to turn them into a syntax tree.\nI've described most of the general idea above already, so let's finally make one!\nEdit:\nIt was pointed out to me that I should probably at least mention that you don't have to explicitly make a separate lexer and parser.\nLexing and parsing actions or phases are conceptually part of the majority of parsers, but there are systems that don't split them as rigorously or even actively try to integrate them as closely as possible.\nScannerless parsers are a broad category of examples of this, which also contains several parser generators.\nIf you do this, this makes it much easier for example to parse multiple languages combined.\nWe are not doing that in this post, and since this is intended to be an introduction to lexing and parsing I'll keep the two separate in our implementation.\n🔗Implementing our Lexer and Parser\nWe'll set up a new crate for our parsing experiments:\n&gt; cargo new --lib parsing-basics\nSince we need tokens for the parser, we start with the lexer and make a lexer module, which in turn has a token module.\nIn there, we make an enum of the kinds of tokens we will have:\n// In token.rs\n\n#[derive(Debug, PartialEq, Eq, Hash, Copy, Clone)]\npub enum TokenKind {\n    // Single characters\n    Plus,\n    Minus,\n    Times,\n    Slash,\n    Pow,\n    Eq,\n    Dot,\n    Comma,\n    Underscore,\n    Bang,\n    Ampersand,\n    Bar,\n    Colon,\n    SemiColon,\n    // Brackets\n    LAngle,\n    RAngle,\n    LSquare,\n    RSquare,\n    LBrace,\n    RBrace,\n    LParen,\n    RParen,\n    // Multiple characters\n    String,\n    Comment,\n    Int,\n    Float,\n    Identifier,\n    KeywordLet,\n    KeywordFn,\n    KeywordStruct,\n    KeywordIf,\n    KeywordElse,\n    // Operators\n    And,\n    Or,\n    Eqq,\n    Neq,\n    Geq,\n    Leq,\n    // Misc,\n    Error,\n    Whitespace,\n    Eof,\n}\n\nYou can see we have a lot of single-character tokens in there (including left and right brackets of all types), and then the groupings of strings and comments, numbers, and identifiers and keywords, as well as kinds to group things like &amp;&amp; or != together.\nWe also have the Error kind in case we see a character we don't understand, and the Eof kind, which stands for \"end of file\" and will be the last token produced by the lexer.\nNext, we will do something that will come in handy a lot during our implementation: we will define a macro for referencing token kinds:\n#[macro_export]\nmacro_rules! T {\n    [+] =&gt; {\n        $crate::lexer::TokenKind::Plus\n    };\n    [-] =&gt; {\n        $crate::lexer::TokenKind::Minus\n    };\n    [*] =&gt; {\n        $crate::lexer::TokenKind::Times\n    };\n    [/] =&gt; {\n        $crate::lexer::TokenKind::Slash\n    };\n    [^] =&gt; {\n        $crate::lexer::TokenKind::Pow\n    };\n    [=] =&gt; {\n        $crate::lexer::TokenKind::Eq\n    };\n    [.] =&gt; {\n        $crate::lexer::TokenKind::Dot\n    };\n    [,] =&gt; {\n        $crate::lexer::TokenKind::Comma\n    };\n    [_] =&gt; {\n        $crate::lexer::TokenKind::Underscore\n    };\n    [!] =&gt; {\n        $crate::lexer::TokenKind::Bang\n    };\n    [&amp;] =&gt; {\n        $crate::lexer::TokenKind::Ampersand\n    };\n    [|] =&gt; {\n        $crate::lexer::TokenKind::Bar\n    };\n    [:] =&gt; {\n        $crate::lexer::TokenKind::Colon\n    };\n    [;] =&gt; {\n        $crate::lexer::TokenKind::SemiColon\n    };\n    [&lt;] =&gt; {\n        $crate::lexer::TokenKind::LAngle\n    };\n    [&gt;] =&gt; {\n        $crate::lexer::TokenKind::RAngle\n    };\n    ['['] =&gt; {\n        $crate::lexer::TokenKind::LSquare\n    };\n    [']'] =&gt; {\n        $crate::lexer::TokenKind::RSquare\n    };\n    ['{'] =&gt; {\n        $crate::lexer::TokenKind::LBrace\n    };\n    ['}'] =&gt; {\n        $crate::lexer::TokenKind::RBrace\n    };\n    ['('] =&gt; {\n        $crate::lexer::TokenKind::LParen\n    };\n    [')'] =&gt; {\n        $crate::lexer::TokenKind::RParen\n    };\n    [string] =&gt; {\n        $crate::lexer::TokenKind::String\n    };\n    [comment] =&gt; {\n        $crate::lexer::TokenKind::Comment\n    };\n    [int] =&gt; {\n        $crate::lexer::TokenKind::Int\n    };\n    [float] =&gt; {\n        $crate::lexer::TokenKind::Float\n    };\n    [ident] =&gt; {\n        $crate::lexer::TokenKind::Identifier\n    };\n    [let] =&gt; {\n        $crate::lexer::TokenKind::KeywordLet\n    };\n    [fn] =&gt; {\n        $crate::lexer::TokenKind::KeywordFn\n    };\n    [struct] =&gt; {\n        $crate::lexer::TokenKind::KeywordStruct\n    };\n    [if] =&gt; {\n        $crate::lexer::TokenKind::KeywordIf\n    };\n    [else] =&gt; {\n        $crate::lexer::TokenKind::KeywordElse\n    };\n    [&amp;&amp;] =&gt; {\n        $crate::lexer::TokenKind::And\n    };\n    [||] =&gt; {\n        $crate::lexer::TokenKind::Or\n    };\n    [==] =&gt; {\n        $crate::lexer::TokenKind::Eqq\n    };\n    [!=] =&gt; {\n        $crate::lexer::TokenKind::Neq\n    };\n    [&gt;=] =&gt; {\n        $crate::lexer::TokenKind::Geq\n    };\n    [&lt;=] =&gt; {\n        $crate::lexer::TokenKind::Leq\n    };\n    [error] =&gt; {\n        $crate::lexer::TokenKind::Error\n    };\n    [ws] =&gt; {\n        $crate::lexer::TokenKind::Whitespace\n    };\n    [EOF] =&gt; {\n        $crate::lexer::TokenKind::Eof\n    };\n}\n\nThis is a long list, but from now on we can for example refer to the \"less or equal comparison\" token kind as T![&lt;=].\nNot only does that save a lot of typing, in my opinion it is also a lot more fluent to read.\nThe first use of our new macro will be implementing a nice Display representation for TokenKind:\nimpl fmt::Display for TokenKind {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter&lt;'_&gt;) -&gt; fmt::Result {\n        write!(\n            f,\n            \"{}\",\n            match self {\n                // Single characters\n                T![+] =&gt; \"+\",\n                T![-] =&gt; \"-\",\n                T![*] =&gt; \"*\",\n                T![/] =&gt; \"/\",\n                T![^] =&gt; \"^\",\n                T![=] =&gt; \"=\",\n                T![.] =&gt; \".\",\n                T![,] =&gt; \",\",\n                T![_] =&gt; \"_\",\n                T![!] =&gt; \"!\",\n                T![&amp;] =&gt; \"&amp;\",\n                T![|] =&gt; \"|\",\n                T![:] =&gt; \":\",\n                T![;] =&gt; \";\",\n                // Brackets\n                T![&lt;] =&gt; \"&lt;\",\n                T![&gt;] =&gt; \"&gt;\",\n                T!['['] =&gt; \"[\",\n                T![']'] =&gt; \"]\",\n                T!['{'] =&gt; \"{\",\n                T!['}'] =&gt; \"}\",\n                T!['('] =&gt; \"(\",\n                T![')'] =&gt; \")\",\n                // Multiple characters\n                T![string] =&gt; \"String\",\n                T![comment] =&gt; \"// Comment\",\n                T![int] =&gt; \"Int\",\n                T![float] =&gt; \"Float\",\n                T![ident] =&gt; \"Identifier\",\n                T![let] =&gt; \"let\",\n                T![fn] =&gt; \"fn\",\n                T![struct] =&gt; \"struct\",\n                T![if] =&gt; \"if\",\n                T![else] =&gt; \"else\",\n                // Operators\n                T![&amp;&amp;] =&gt; \"&amp;&amp;\",\n                T![||] =&gt; \"||\",\n                T![==] =&gt; \"==\",\n                T![!=] =&gt; \"!=\",\n                T![&gt;=] =&gt; \"&gt;=\",\n                T![&lt;=] =&gt; \"&lt;=\",\n                // Misc \n                T![error] =&gt; \"&lt;?&gt;\",\n                T![ws] =&gt; \"&lt;WS&gt;\",\n                T![EOF] =&gt; \"&lt;EOF&gt;\",\n            }\n        )\n    }\n}\n\nAgain we've got ourselves a small wall of text, but we can now add a small test to check everything works as it should so far:\n#[cfg(test)]\nmod tests {\n    #[test]\n    fn token_kind_display() {\n        assert_eq!(T![+].to_string(), \"+\");\n        assert_eq!(T![&lt;=].to_string(), \"&lt;=\");\n        assert_eq!(T![let].to_string(), \"let\");\n        assert_eq!(T![error].to_string(), \"&lt;?&gt;\");\n        assert_eq!(T![comment].to_string(), \"// Comment\");\n    }\n}\n\n🔗Tokens\nWe can now go to define our tokens.\nThey will store the kind of token, of course, as one of the TokenKinds we just defined.\nThe other thing we'll want to know from our tokens is, well, what they are.\nFor example, if in the parser we see a token that we did not expect, we want to produce an error, which benefits a lot from including in the error message what the user actually typed.\nOne option would be to use Rust's amazing enums and include things like the name of an identifier or numbers in their respective variants.\nI personally don't like this approach as much, because it makes tokens be all over the place - some have just their kind, some have an additional string, some have a number, ...\nWhat about just including the the string of a token in all of the tokens?\nThis would make the tokens equal again, but also we'd have to take all of these tiny strings out of the string we already have - the input string.\nStrings mean allocations, and with strings our tokens will not be Copy.\nInstead, we will make use of spans.\nA span is simply two positions representing the start and the end of the token in the input string.\nRust has a type like this in its standard library: Range.\nHowever, Range has some quirks that make it less nice to work with than I would like (in particular, for reasons that have no place in this post, it is also not Copy even if you make only a Range&lt;usize&gt;).\nLet's thus make our own small Span type that can be converted to and from Range&lt;usize&gt;:\n// In token.rs\n\n#[derive(Eq, PartialEq, Clone, Copy, Hash, Default, Debug)]\npub struct Span {\n    /// inclusive\n    pub start: u32,\n    /// exclusive\n    pub end:   u32,\n}\n\nimpl From&lt;Span&gt; for Range&lt;usize&gt; {\n    fn from(span: Span) -&gt; Self {\n        span.start as usize..span.end as usize\n    }\n}\n\nimpl From&lt;Range&lt;usize&gt;&gt; for Span {\n    fn from(range: Range&lt;usize&gt;) -&gt; Self {\n        Self {\n            start: range.start as u32,\n            end:   range.end as u32,\n        }\n    }\n}\n\nWe can also add the ability to directly index strings with our spans:\nimpl Index&lt;Span&gt; for str {\n    type Output = str;\n\n    fn index(&amp;self, index: Span) -&gt; &amp;Self::Output {\n        &amp;self[Range::&lt;usize&gt;::from(index)]\n    }\n}\n\nOur tokens will then have a TokenKind and a Span and, given the input string, will be able to return the text they represent via the span:\n#[derive(Eq, PartialEq, Copy, Clone, Hash)]\npub struct Token {\n    pub kind: TokenKind,\n    pub span: Span,\n}\n\nimpl Token {\n    pub fn len(&amp;self) -&gt; usize {\n        (self.span.end - self.span.start) as usize\n    }\n\n    pub fn text&lt;'input&gt;(&amp;self, input: &amp;'input str) -&gt; &amp;'input str {\n        &amp;input[self.span]\n    }\n}\n\nWe'll make Token's Display forward to its kind, but let its Debug also show the span:\nimpl fmt::Debug for Token {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter&lt;'_&gt;) -&gt; fmt::Result {\n        write!(\n            f, \n            \"{:?} - &lt;{}, {}&gt;\", \n            self.kind, \n            self.span.start, \n            self.span.end\n        )\n    }\n}\n\nimpl fmt::Display for Token {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter&lt;'_&gt;) -&gt; fmt::Result {\n        write!(f, \"{}\", self.kind)\n    }\n}\n\n🔗Lexer Rules\nNow, let's talk about how to compute the next token for some input.\nFor the single-character tokens, that seems quite easy - we see a +, we make a plus token.\nBut what about longer and more complicated tokens, like floating point numbers?\nAnd what the next few characters could be multiple kinds of token?\nSeeing a = character, we would classify that as an \"equals sign\" token except there might be another = following it, in which case maybe it's a comparison operator (T![==])?\nOr maybe it's just two equals signs next to each other? \nWhen we see let, how do we know it's a keyword and not the name of a variable?\nIf we look at some common lexer and parser generators to see how they have you write down parsing rules (look, just because we're not using one, doesn't mean we can't take a peek, eh?), we find a large variety of regular expressions.\nNow, I may be fine with using regular expressions for the more complex tokens, but for something as simple as + they do seem a bit overkill.\nAlso, these generators have the advantage that they can optimize the regular expressions of all tokens together, which I will not do by hand in this blog post (or probably ever).\nLet start with the simple cases and work our way up.\nIn our lexer mod, we create a (for now fairly uninteresting) Lexer struct and give it a method to lex a single token:\n// In lexer/mod.rs\n\npub struct Lexer;\n\nimpl Lexer {\n    pub fn new() -&gt; Self {\n        Self {}\n    }\n\n    /// Returns `None` if the lexer cannot find a token at the start of `input`.\n    fn valid_token(&amp;self, input: &amp;str) -&gt; Option&lt;Token&gt; {\n        let next = input.chars().next().unwrap();\n        let (len, kind) = \n            if let Some(kind) = unambiguous_single_char(next) {\n                (1, kind)\n            } else {\n                return None;\n            };\n\n        Some(Token {\n            kind,\n            // We will fix this later\n            span: Span { start: 0, end: len },\n        })\n    }\n}\n\nWe will put all the lexer rules in a separate file, so we'll implement unambiguous_single_char in a new lexer module rules:\n// In lexer/rules.rs\n\n/// If the given character is a character that _only_ \n/// represents a token of length 1,\n/// this method returns the corresponding `TokenKind`.\n/// Note that this method will return `None` for characters \n/// like `=` that may also occur at the first position \n/// of longer tokens (here `==`).\npub(crate) const fn unambiguous_single_char(c: char) -&gt; Option&lt;TokenKind&gt; {\n    Some(match c {\n        '+' =&gt; T![+],\n        '-' =&gt; T![-],\n        '*' =&gt; T![*],\n        '^' =&gt; T![^],\n        '.' =&gt; T![.],\n        ',' =&gt; T![,],\n        '[' =&gt; T!['['],\n        ']' =&gt; T![']'],\n        '{' =&gt; T!['{'],\n        '}' =&gt; T!['}'],\n        '(' =&gt; T!['('],\n        ')' =&gt; T![')'],\n        ':' =&gt; T![:],\n        ';' =&gt; T![;],\n        _ =&gt; return None,\n    })\n}\n\nThe method is essentially the reverse of the Display implementation, but only for tokens that are one character long and cannot be the start of anything else.\nSo it includes + and most of the brackets, but, for example, it does not include =, because of the possible ==, and /, because that can also be the start of a comment.\nAngle brackets are absent because they can also be the start of &lt;= and &gt;=2.\nWe can also start thinking about what to do when the user inputs something we don't know (yet).\nIf we can't make a token at the start of the input, we'll look ahead until we can and emit an Error token for the characters we've had to skip over:\npub fn next_token(&amp;self, input: &amp;str) -&gt; Token {\n    self.valid_token(input)\n        .unwrap_or_else(|| self.invalid_token(input))\n}\n\n/// Always \"succeeds\", because it creates an error `Token`.\nfn invalid_token(&amp;self, input: &amp;str) -&gt; Token {\n    let len = input\n        .char_indices()\n        .find(|(pos, _)| self.valid_token(&amp;input[*pos..]).is_some())\n        .map(|(pos, _)| pos)\n        .unwrap_or_else(|| input.len());\n    debug_assert!(len &lt;= input.len());\n    Token {\n        kind: T![error],\n        span: Span {\n            start: 0,\n            end:   len as u32,\n        },\n    }\n}\n\nAt long last, we can write a function that works through an entire input string and converts it into tokens:\npub fn tokenize(&amp;self, input: &amp;str) -&gt; Vec&lt;Token&gt; {\n    let mut ret = Vec::new();\n    let mut suffix = input;\n    while !suffix.is_empty() {\n        let token = self.next_token(suffix);\n        ret.push(token);\n        suffix = &amp;suffix[token.len()..];\n    }\n    ret.push(Token {\n        kind: T![EOF],\n        span: Span {\n            start: input.len() as u32,\n            end:   input.len() as u32,\n        },\n    });\n    ret\n}\n\nLet's create a small integration test for the tokens that should work already:\n// In tests/it.rs\n\nuse parsing_basics::{lexer::*, T};\n\n/// walks `$tokens` and compares them to the given kinds.\nmacro_rules! assert_tokens {\n    ($tokens:ident, [$($kind:expr,)*]) =&gt; {\n        {\n            let mut it = $tokens.iter();\n            $(\n                let token = it.next().expect(\"not enough tokens\");\n                assert_eq!(token.kind, $kind);\n            )*\n        }\n    };\n}\n\n#[test]\nfn single_char_tokens() {\n    let lexer = Lexer::new();\n    let input = \"+-(.):\";\n    let tokens = lexer.tokenize(input);\n    assert_tokens!(tokens, [T![+], T![-], \n        T!['('], T![.], T![')'], T![:], T![EOF],]);\n}\n\n#[test]\nfn unknown_input() {\n    let lexer = Lexer::new();\n    let input = \"{$$$$$$$+\";\n    let tokens = lexer.tokenize(input);\n    assert_tokens!(tokens, [T!['{'], T![error], T![+], T![EOF],]);\n}\n\n🔗Making our Lexer an Iterator\nWhile our lexer produces the correct kinds of tokens, currently all tokens are created with the span 0..1.\nTo fix that, we'll have to keep track of where the lexer is currently positioned in the input string.\nWe'll take this opportunity to have the lexer take a reference to the input string.\nThis means that it will now need to have a lifetime, but also has advantages - it lets us resolve tokens to their text through the lexer, and we can make the lexer an iterator:\n// In lexer/mod.rs\n\npub struct Lexer&lt;'input&gt; {\n    input:    &amp;'input str,\n    position: u32,\n    eof:      bool,\n}\n\nimpl&lt;'input&gt; Lexer&lt;'input&gt; {\n    pub fn new(input: &amp;'input str) -&gt; Self {\n        Self { input, position: 0, eof: false }\n    }\n\n    pub fn tokenize(&amp;mut self) -&gt; Vec&lt;Token&gt; {\n        self.collect()\n    }\n\n    // ... unchanged\n}\n\nimpl&lt;'input&gt; Iterator for Lexer&lt;'input&gt; {\n    type Item = Token;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.position as usize &gt;= self.input.len() {\n            if self.eof {\n                return None;\n            }\n            self.eof = true;\n            Some(Token {\n                kind: T![EOF],\n                span: Span {\n                    start: self.position,\n                    end:   self.position,\n                },\n            })\n        } else {\n            Some(self.next_token(\n                &amp;self.input[self.position as usize..]\n            ))\n        }\n    }\n}\n\nAt this point, we should be able to adapt our tests to pass the input to the lexer and they should pass as before.\nNote that all of our Lexer methods will now take &amp;mut self, because we have to update our position.\nYou'll have to make the lexer variables mut in the tests so everything keeps working.\n// In tests/it.rs\n\n#[test]\nfn single_char_tokens() {\n    let input = \"+-(.):\";\n    let mut lexer = Lexer::new(input); // &lt;- new\n    let tokens = lexer.tokenize(); // &lt;- removed `input`\n    assert_tokens!(tokens, [T![+], T![-], \n        T!['('], T![.], T![')'], T![:], T![EOF],]);\n}\n\n#[test]\nfn unknown_input() {\n    let input = \"{$$$$$$$+\";\n    let mut lexer = Lexer::new(input); // &lt;- new\n    let tokens = lexer.tokenize(); // &lt;- removed `input`\n    assert_tokens!(tokens, [T!['{'], T![error], T![+], T![EOF],]);\n}\n\nLet's actually fix the spans now:\n// In lexer/mod.rs\n\n/// Returns `None` if the lexer cannot find a token at the start of `input`.\n    fn valid_token(&amp;mut self, input: &amp;str) -&gt; Option&lt;Token&gt; {\n        let next = input.chars().next().unwrap();\n        let (len, kind) = \n            if let Some(kind) = unambiguous_single_char(next) {\n                (1, kind)\n            } else {\n                return None;\n            };\n\n        // NEW!\n        let start = self.position;\n        self.position += len;\n        Some(Token {\n            kind,\n            span: Span {\n                start,\n                end: start + len,\n            },\n        })\n    }\n\n    /// Always \"succeeds\", because it creates an error `Token`.\n    fn invalid_token(&amp;mut self, input: &amp;str) -&gt; Token {\n        let start = self.position; // &lt;- NEW!\n        let len = input\n            .char_indices()\n            .find(|(pos, _)| {\n                self.valid_token(&amp;input[*pos..]).is_some()\n            })\n            .map(|(pos, _)| pos)\n            .unwrap_or_else(|| input.len());\n        debug_assert!(len &lt;= input.len());\n\n        // NEW!\n        // Because `valid_token` advances our position, \n        // we need to reset it to after the erroneous token.\n        let len = len as u32;\n        self.position = start + len;\n        Token {\n            kind: T![error],\n            span: Span {\n                start,\n                end: start + len,\n            },\n        }\n    }\n\nWe'll also add a small test for token spans:\n// In tests/it.rs\n\n#[test]\nfn token_spans() {\n    {\n        let input = \"+-(.):\";\n        let mut lexer = Lexer::new(input);\n        let tokens = lexer.tokenize();\n        let dot = tokens[3];\n        assert_eq!(dot.kind, T![.]);\n        assert_eq!(dot.span, (3..4).into())\n    }\n    {\n        let input = \"{$$$$$$$+\";\n        let mut lexer = Lexer::new(input);\n        let tokens = lexer.tokenize();\n        let error = tokens[1];\n        assert_eq!(error.kind, T![error]);\n        assert_eq!(error.span, (1..8).into())\n    }\n}\n\n🔗Whitespace\nWhitespace is special enough for us to handle on its own, mainly because there will probably be a lot of it and it is also a class which can never conflict with anything else - either a character is whitespace, or it is not.\nSuccessive whitespace characters are also grouped together into a single token:\n// In lexer/mod.rs\n\n/// Returns `None` if the lexer cannot find a token at the start of `input`.\nfn valid_token(&amp;mut self, input: &amp;str) -&gt; Option&lt;Token&gt; {\n    let next = input.chars().next().unwrap();\n    let (len, kind) = if next.is_whitespace() {\n        (\n            input\n                .char_indices()\n                .take_while(|(_, c)| c.is_whitespace())\n                .last()\n                .unwrap() // we know there is at least one whitespace character\n                .0 as u32\n                + 1,\n            T![ws],\n        )\n    } else if let Some(kind) = unambiguous_single_char(next) {\n        (1, kind)\n    } else {\n        return None;\n    };\n\n    // create the token, unchanged\n}\n\nWe can copy one of our basic tests and add some whitespace to see this works:\n// In tests/it.rs\n\n#[test]\nfn single_char_tokens_with_whitespace() {\n    let input = \"   + -  (.): \";\n    let mut lexer = Lexer::new(input);\n    let tokens = lexer.tokenize();\n    let leading_space = &amp;tokens[0];\n    assert_eq!(leading_space.kind, T![ws]);\n    assert_eq!(leading_space.len(), 3);\n\n    let space_after_minus = &amp;tokens[4];\n    assert_eq!(space_after_minus.kind, T![ws]);\n    assert_eq!(space_after_minus.len(), 2);\n\n    let trailing_space = &amp;tokens[9];\n    assert_eq!(trailing_space.kind, T![ws]);\n    assert_eq!(trailing_space.len(), 1);\n\n    let tokens: Vec&lt;_&gt; = tokens\n        .into_iter()\n        .filter(|t| t.kind != T![ws])\n        .collect();\n    assert_tokens!(\n        tokens,\n        [T![+], T![-], T!['('], T![.], T![')'], T![:], T![EOF],]\n    );\n}\n\n🔗Other Rules\nWe've seen before that for the remaining tokens we need a general mechanism to determine which class they belong to.\nWe'll say that a general lexer rule is a function which returns if and how many input characters it could match to the token kind it is for and start with the remaining one- and two-character tokens and the keywords:\n// In lexer/rules.rs\n\npub(crate) struct Rule {\n    pub kind:    TokenKind,\n    pub matches: fn(&amp;str) -&gt; Option&lt;u32&gt;,\n}\n\nfn match_single_char(input: &amp;str, c: char) -&gt; Option&lt;u32&gt; {\n    input.chars().next()\n        .and_then(|ch| if ch == c { Some(1) } else { None })\n}\n\nfn match_two_chars(\n    input: &amp;str, \n    first: char, \n    second: char\n) -&gt; Option&lt;u32&gt; {\n    if input.len() &gt;= 2 {\n        match_single_char(input, first)\n            .and_then(|_| {\n                match_single_char(&amp;input[1..], second).map(|_| 2)\n            })\n    } else {\n        None\n    }\n}\n\nfn match_keyword(input: &amp;str, keyword: &amp;str) -&gt; Option&lt;u32&gt; {\n    input.starts_with(keyword)\n        .then(|| keyword.len() as u32)\n}\n\npub(crate) fn get_rules() -&gt; Vec&lt;Rule&gt; {\n    vec![\n        Rule {\n            kind:    T![!],\n            matches: |input| match_single_char(input, '!'),\n        },\n        Rule {\n            kind:    T![=],\n            matches: |input| match_single_char(input, '='),\n        },\n        Rule {\n            kind:    T![/],\n            matches: |input| match_single_char(input, '/'),\n        },\n        Rule {\n            kind:    T![_],\n            matches: |input| match_single_char(input, '_'),\n        },\n        Rule {\n            kind:    T![&lt;],\n            matches: |input| match_single_char(input, '&lt;'),\n        },\n        Rule {\n            kind:    T![&gt;],\n            matches: |input| match_single_char(input, '&gt;'),\n        },\n        Rule {\n            kind:    T![==],\n            matches: |input| match_two_chars(input, '=', '='),\n        },\n        Rule {\n            kind:    T![!=],\n            matches: |input| match_two_chars(input, '!', '='),\n        },\n        Rule {\n            kind:    T![&amp;&amp;],\n            matches: |input| match_two_chars(input, '&amp;', '&amp;'),\n        },\n        Rule {\n            kind:    T![||],\n            matches: |input| match_two_chars(input, '|', '|'),\n        },\n        Rule {\n            kind:    T![&lt;=],\n            matches: |input| match_two_chars(input, '&lt;', '='),\n        },\n        Rule {\n            kind:    T![&gt;=],\n            matches: |input| match_two_chars(input, '&gt;', '='),\n        },\n        Rule {\n            kind:    T![let],\n            matches: |input| match_keyword(input, \"let\"),\n        },\n        Rule {\n            kind:    T![fn],\n            matches: |input| match_keyword(input, \"fn\"),\n        },\n        Rule {\n            kind:    T![struct],\n            matches: |input| match_keyword(input, \"struct\"),\n        },\n        Rule {\n            kind:    T![if],\n            matches: |input| match_keyword(input, \"if\"),\n        },\n        Rule {\n            kind:    T![else],\n            matches: |input| match_keyword(input, \"else\"),\n        },\n    ]\n}\n\nIn the lexer, we plug in the new rules where the input is neither whitespace nor clearly a single character:\n// In lexer/mod.rs\n\npub struct Lexer&lt;'input&gt; {\n    input:    &amp;'input str,\n    position: u32,\n    eof:      bool,\n    rules:    Vec&lt;Rule&gt;, // &lt;- NEW!\n}\n\n\nimpl&lt;'input&gt; Lexer&lt;'input&gt; {\n    pub fn new(input: &amp;'input str) -&gt; Self {\n        Self {\n            input,\n            position: 0,\n            eof: false,\n            rules: rules::get_rules(), // &lt;- NEW!\n        }\n    }\n\n    /// Returns `None` if the lexer cannot find a token at the start of `input`.\n    fn valid_token(&amp;mut self, input: &amp;str) -&gt; Option&lt;Token&gt; {\n        let next = input.chars().next().unwrap();\n        let (len, kind) = if next.is_whitespace() {\n            // snip\n        } else if let Some(kind) = unambiguous_single_char(next) {\n            (1, kind)\n        } else {\n            self.rules\n                .iter()\n                // `max_by_key` returns the last element if multiple\n                // rules match, but we want earlier rules to \"win\" \n                // against later ones\n                .rev()\n                .filter_map(|rule| {\n                    Some(((rule.matches)(input)?, rule.kind))\n                })\n                .max_by_key(|&amp;(len, _)| len)?\n        };\n\n        // create the token, unchanged\n    }\n\n    // ...remaining functions unchanged\n}\n\nIf the simpler cases don't trigger, we iterate over all our rules and, for each rule, check if it matches the input.\nWe then select the rule that matches the longest piece of the input, that is, the most input characters.\nThis choice is commonly known as the \"maximal munch\" principle and makes it so two successive = become ==3.\nMoreover, it is consistent with grouping a sequence of digits all together as an Int, or letters as an Identifier (which we'll do next).\nNote also that we decide to resolve conflicts between tokens of the same length by choosing the rule that was written first.\nWe will write the rules from least to most general, so things like identifiers will be plugged in at the back.\nSpeaking of identifiers, we'll make some quick tests for our new rules and then we'll finally handle them.\nHere are the new tests:\n// In tests/it.rs\n\n#[test]\nfn maybe_multiple_char_tokens() {\n    let input = \"&amp;&amp;=&lt;=_!=||\";\n    let mut lexer = Lexer::new(input);\n    let tokens = lexer.tokenize();\n    assert_tokens!(tokens, [\n        T![&amp;&amp;], T![=], T![&lt;=], T![_], T![!=], T![||], T![EOF],\n    ]);\n\n\n#[test]\nfn keywords() {\n    let input = \"if let = struct else fn\";\n    let mut lexer = Lexer::new(input);\n    let tokens: Vec&lt;_&gt; = lexer.tokenize().into_iter()\n        .filter(|t| t.kind != T![ws]).collect();\n    assert_tokens!(tokens, [\n        T![if], \n        T![let], \n        T![=], \n        T![struct], \n        T![else], \n        T![fn], \n        T![EOF],\n    ]);\n}\n\nLet's get to the big boys.\nFor this post, we will use regular expressions here.\nThis means we need to add the regex crate to the project.\nSince we'll need to put our regexes somewhere, we also add the lazy_static crate.\nWhile we're at it, we add unindent as a dev-dependency as well.\nunindent is a small utility to, well, unindent text, to help us write a full test for the lexer after we've added the missing rules.\nBecause users of our lexer don't run the tests, they don't need to have unindent, which is why it doesn't go into the regular dependencies:\n[dependencies]\nregex = \"1\"\nlazy_static = \"1\"\n\n[dev-dependencies]\nunindent = \"0.1\"\n\nWe add a matching function for regex-based rules which queries the regex (conveniently, Regex::find returns an Option) and the regexes themselves.\nWe then make new rules that use match_regex and extend our ruleset with them.\nI skipped T![int] integer literals with the regexes and instead gave them their own little rule which works the same way we handle whitespace (it's still important to have a rule for this though, because integers and floats can conflict):\n// In lexer/rules.rs\n\nfn match_regex(input: &amp;str, r: &amp;Regex) -&gt; Option&lt;u32&gt; {\n    r.find(input).map(|regex_match| regex_match.end() as u32)\n}\n\nlazy_static! {\n    static ref STRING_REGEX: Regex = \n        Regex::new(r#\"^\"((\\\\\"|\\\\\\\\)|[^\\\\\"])*\"\"#).unwrap();\n    static ref COMMENT_REGEX: Regex = \n        Regex::new(r#\"^//[^\\n]*\\n\"#).unwrap();\n    static ref FLOAT_REGEX: Regex = \n        Regex::new(r#\"^((\\d+(\\.\\d+)?)|(\\.\\d+))([Ee](\\+|-)?\\d+)?\"#).unwrap();\n    static ref IDENTIFIER_REGEX: Regex = \n        Regex::new(r##\"^([A-Za-z]|_)([A-Za-z]|_|\\d)*\"##).unwrap();\n}\n\npub(crate) fn get_rules() -&gt; Vec&lt;Rule&gt; {\n    vec![\n        // ...rules from before\n        Rule {\n            kind:    T![string],\n            matches: move |input| match_regex(input, &amp;STRING_REGEX),\n        },\n        Rule {\n            kind:    T![comment],\n            matches: move |input| match_regex(input, &amp;COMMENT_REGEX),\n        },\n        Rule {\n            kind:    T![int],\n            matches: |input| {\n                input\n                    .char_indices()\n                    .take_while(|(_, c)| c.is_ascii_digit())\n                    .last()\n                    .map(|(pos, _)| pos as u32 + 1)\n            },\n        },\n        Rule {\n            kind:    T![float],\n            matches: |input| match_regex(input, &amp;FLOAT_REGEX),\n        },\n        Rule {\n            kind:    T![ident],\n            matches: |input| match_regex(input, &amp;IDENTIFIER_REGEX),\n        },\n    ]\n}\n\nHave a look at the regex crate's documentation to learn how the regular expressions are specified.\nI write them in raw string literals, which go from r#\" to \"#.\nAll regular expressions are anchored with the starting ^, which forces them to match the input from the start and excludes matches anywhere else later in the input.\nThen, a string is a sequence of characters in quotation marks (\"), optionally including an escaped quotation mark (\\\") or backslash (\\\\).\nA line comment starts with // and ends at the end of the line.\nA floating point number is some digits, maybe followed by a period and more digits, or alternatively it may also start with the period.\nIt may be followed by E or e, an optional sign and more digits to allow scientific notation.\nAn identifier is any variable name, for which we require to start with a letter or underscore, and then also allow digits for the characters after the first.\nTime to try it out!\nWe'll add two tests, a function and a struct definition:\n// In tests/it.rs\n\n#[test]\nfn function() {\n    let input = r#\"\n        // tests stuff\n        fn test(var: Type, var2_: bool) {\n            let x = \"String content \\\" test\" + 7 / 27.3e-2^4;\n            let chars = x.chars();\n            if let Some(c) = chars.next() {\n                x = x + c;\n            } else if !var2_ {\n                x = x + \",\";\n            }\n        }\n    \"#;\n    let input = unindent(input);\n    let mut lexer = Lexer::new(input.as_str());\n    let tokens: Vec&lt;_&gt; = lexer.tokenize().into_iter()\n        .filter(|t| t.kind != T![ws]).collect();\n    assert_tokens!(tokens, [\n        // comment\n        T![comment], \n        // function signature\n        T![fn], T![ident], T!['('], \n            T![ident], T![:], T![ident], T![,], \n            T![ident], T![:], T![ident], \n        T![')'], T!['{'], \n            // `x` assignment\n            T![let], T![ident], T![=], T![string], T![+], T![int], \n                T![/], T![float], T![^], T![int], T![;], \n            // `chars` assignment\n            T![let], T![ident], T![=], T![ident], \n                T![.], T![ident], T!['('], T![')'], T![;],\n            // if\n            T![if], T![let], T![ident], T!['('], T![ident], T![')'], \n                T![=], T![ident], T![.], T![ident], T!['('],T![')'], \n            T!['{'], \n                // `x` re-assignment\n                T![ident], T![=], \n                    T![ident], T![+], T![ident], T![;],\n            // else if\n            T!['}'], T![else], T![if], T![!], T![ident], T!['{'], \n                // `x` re-assignment\n                T![ident], T![=], \n                    T![ident], T![+], T![string], T![;], \n            T!['}'], // end if\n        T!['}'], // end fn\n        T![EOF],\n    ]);\n}\n\n#[test]\nfn struct_def() {\n    let input = r#\"\n        struct Foo&lt;T&gt; {\n            bar: Bar&lt;T&gt;,\n        }\n    \"#;\n    let input = unindent(input);\n    let input = input.as_str();\n    let mut lexer = Lexer::new(input);\n    let tokens: Vec&lt;_&gt; = lexer\n        .tokenize()\n        .into_iter()\n        .filter(|t| t.kind != T![ws])\n        .collect();\n    assert_tokens!(tokens, [\n        // struct definition/type\n        T![struct], T![ident], T![&lt;], T![ident], T![&gt;], T!['{'], \n            // member `bar` of type `Bar&lt;T&gt;`\n            T![ident], T![:], \n                T![ident], T![&lt;], T![ident], T![&gt;], T![,], \n        T!['}'], // end struct\n        T![EOF],\n    ]);\n    let bar = tokens[6];\n    assert_eq!(bar.span, (20..23).into()); // unindented span\n}\n\nNote that the comment before the fn test is correctly recognized as a comment, while in the assignment to x there is a single / for division.\nThis is because the comment is longer than a single slash, so it wins against the single character rule.\nThe same happens for the floating point number in the same assignment.\nOur keywords are also recognized correctly.\nThey do match as identifiers as well, but their rules are declared earlier than the identifier rule, so our lexer gives them precedence.\n🔗Some Source Text\nWe'll extend that last text with a few checks for identifiers to illustrate how to get back at the input string from a token:\n#[test]\nfn struct_def() {\n    // `input`, `lexer` and `tokens`, unchanged\n\n    let bar = tokens[6];\n    assert_eq!(bar.span, (20..23).into()); \n    assert_eq!(bar.text(input), \"bar\"); // &lt;- NEW!\n\n    let foo = tokens[1];\n    assert_eq!(foo.text(input), \"Foo\"); // &lt;- NEW!\n}\n\nOne lexer, done.\n🔗The Parser\nOur next big task is to re-arrange the lexer tokens into a nice tree that represents our input program.\nWe'll need a little bit of setup, starting with defining the AST we want to parse into.\nAll of our parser-related stuff will go into a new parser module with submodules, like ast:\n// In parser/ast.rs\n\n#[derive(Debug, Clone, PartialEq)]\npub enum Expr {\n    Literal(Lit),\n    Ident(String),\n    FnCall { fn_name: String, args: Vec&lt;Expr&gt; },\n    PrefixOp { op: TokenKind, expr: Box&lt;Expr&gt; },\n    InfixOp { op: TokenKind, lhs: Box&lt;Expr&gt;, rhs: Box&lt;Expr&gt; },\n    PostfixOp { op: TokenKind, expr: Box&lt;Expr&gt; },\n}\n\n#[derive(Debug, Clone, PartialEq)]\npub enum Lit {\n    Int(usize),\n    Float(f64),\n    Str(String),\n}\n\nWe have 3 kinds of literal, corresponding to T![int], T![float] and T![string].\nIdentifiers store their name, and function call expressions store the name of the function and what was passed as its arguments.\nThe arguments are themselves expressions, because you can call functions like sin(x + max(y, bar.z)).\nExpressions with operators are categorized into three classes:\n\nPrefix operators are unary operators that come before an expression, like in -2.4 or !this_is_a_bool. \nPostfix operators are also unary operators, but those that come after an expression. For us, this will only be the faculty operator 4!.\nInfix operators are the binary operators like a + b or c ^ d, where a and c would be the left-hand sides lhs, and b and d are the right-hand sides rhs.\nThis is not the only way to structure your AST.\nSome people prefer having an explicit Expr variant for each operator, so you'd have Expr::Add, Expr::Sub, Expr::Not and so on.\nIf you use those then of course you don't have to store the kind of operator in the AST, but I'm going with the more generic approach here, both because I personally prefer it and because it means less copy-pasting and smaller code blocks for this article.\n\nNote that the AST discards some information: \nWhen calling a function bar(x, 2), I have to write not only the name and arguments, but also parentheses and commas.\nWhitespace is also nowhere to be found, and I can tell you already that we will not have any methods that handle comments (well, apart from figuring out how we don't have to deal with them).\nThis is a major reason why the AST is called the abstract syntax tree; we keep input data only if it matters to us.\nFor other application, like an IDE, those things that we throw away here may matter a great deal, e.g., to format a file or show documentation.\nIn such cases, other representations are often used, such as concrete syntax trees (CSTs) that retain a lot more information.\n🔗Parser Input\nI can tell you from personal experience that having to manually skip over whitespace and comments everywhere in a parser is not fun.\nWhen we made the lexer tests in the last section, we filtered out all such tokens from the lexer output before comparing them to what we expected, except where we specifically wanted to test the whitespace handling.\nIn principle, our parser will have a Lexer iterator inside and query it for new tokens when it needs them.\nThe Iterator::filter adapter that we used in the tests has the annoying property, however, that it is really hard to name, because its predicate (the function that decides what to filter out) is part of its type.\nWe will thus build our own small iterator around the lexer, which will filter the tokens for us:\n// In parser/mod.rs\n\npub struct TokenIter&lt;'input&gt; {\n    lexer: Lexer&lt;'input&gt;,\n}\n\nimpl&lt;'input&gt; TokenIter&lt;'input&gt; {\n    pub fn new(input: &amp;'input str) -&gt; Self {\n        Self { lexer: Lexer::new(input) }\n    }\n}\n\nimpl&lt;'input&gt; Iterator for TokenIter&lt;'input&gt; {\n    type Item = Token;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        loop {\n            let next_token = self.lexer.next()?;\n            if !matches!(next_token.kind, T![ws] | T![comment]) {\n                return Some(next_token);\n            } // else continue\n        }\n    }\n}\n\nI don't think we've used the matches! macro before.\nIt is basically just a short form of writing\nmatch next_token.kind {\n    T![ws] | T![comment] =&gt; true,\n    _ =&gt; false,\n}\n\nthough I admit !matches! always looks kinda funny.\nOur parser can then be built like this:\n// In parser/mod.rs\n\npub struct Parser&lt;'input, I&gt;\nwhere\n    I: Iterator&lt;Item = Token&gt;,\n{\n    input:  &amp;'input str,\n    tokens: Peekable&lt;I&gt;,\n}\n\nimpl&lt;'input&gt; Parser&lt;'input, TokenIter&lt;'input&gt;&gt; {\n    pub fn new(\n        input: &amp;'input str\n    ) -&gt; Parser&lt;'input, TokenIter&lt;'input&gt;&gt; {\n        Parser {\n            input,\n            tokens: TokenIter::new(input).peekable(),\n        }\n    }\n}\n\nThe downside of the \"lexer as iterator\" approach is shining through a bit here, since we now have to carry around the 'input lifetime and the where bound (and also we had to make TokenIter in the first place).\nHowever, we'll mostly be able to forget about it for the actual parsing methods.\nPeekable is an iterator adapter from the standard library, which fortunately can be named more easily than Filter.\nIt wraps an iterator and allows us to peek() inside.\nThis lets us look ahead one token to see what's coming, without removing the token from the iterator.\nWe will use this a lot.\nLet's start with the basic methods of our parser:\n\nimpl&lt;'input, I&gt; Parser&lt;'input, I&gt;\nwhere\n    I: Iterator&lt;Item = Token&gt;,\n{\n    /// Get the source text of a token.\n    pub fn text(&amp;self, token: Token) -&gt; &amp;'input str {\n        token.text(&amp;self.input)\n    }\n\n    /// Look-ahead one token and see what kind of token it is.\n    pub(crate) fn peek(&amp;mut self) -&gt; TokenKind {\n        self.tokens.peek().map(|token| token.kind).unwrap_or(T![EOF])\n    }\n\n    /// Check if the next token is some `kind` of token.\n    pub(crate) fn at(&amp;mut self, kind: TokenKind) -&gt; bool {\n        self.peek() == kind\n    }\n\n    /// Get the next token.\n    pub(crate) fn next(&amp;mut self) -&gt; Option&lt;Token&gt; {\n        self.tokens.next()\n    }\n\n    /// Move forward one token in the input and check \n    /// that we pass the kind of token we expect.\n    pub(crate) fn consume(&amp;mut self, expected: TokenKind) {\n        let token = self.next().expect(&amp;format!(\n            \"Expected to consume `{}`, but there was no next token\",\n            expected\n        ));\n        assert_eq!(\n            token.kind, expected,\n            \"Expected to consume `{}`, but found `{}`\",\n            expected, token.kind\n        );\n    }\n}\n\nTo start building our parse tree, the first step will be expressions.\nThey'll end up occupying quite a bit of space, so they also go in their own module:\n// In parser/expressions.rs\n\nimpl&lt;'input, I&gt; Parser&lt;'input, I&gt;\nwhere\n    I: Iterator&lt;Item = Token&gt;,\n{\n    pub fn parse_expression(&amp;mut self) -&gt; ast::Expr {\n        match self.peek() {\n            _ =&gt; todo!()   \n        }\n    }\n}\n\nAs you can see, we'll be using peek() to figure out what expression is coming our way.\nWe start with the most basic expression of them all: literals\nlit @ T![int] | lit @ T![float] | lit @ T![string] =&gt; {\n    let literal_text = {\n        // the calls on `self` need to be split, because `next` takes \n        // `&amp;mut self` if `peek` is not `T![EOF]`, then there must be \n        // a next token\n        let literal_token = self.next().unwrap();\n        self.text(literal_token)\n    };\n    let lit = match lit {\n        T![int] =&gt; ast::Lit::Int(\n            literal_text\n                .parse()\n                .expect(&amp;format!(\n                    \"invalid integer literal: `{}`\", \n                    literal_text)\n                ),\n        ),\n        T![float] =&gt; ast::Lit::Float(\n            literal_text\n                .parse()\n                .expect(&amp;format!(\n                    \"invalid floating point literal: `{}`\", \n                    literal_text)\n                ),\n        ),\n        T![string] =&gt; ast::Lit::Str(\n            // trim the quotation marks\n            literal_text[1..(literal_text.len() - 1)].to_string()\n        ),\n        _ =&gt; unreachable!(),\n    };\n    ast::Expr::Literal(lit)\n}\n\nI use two matches here so I can share the code for actions we have to take for all literals, which is resolving their text and creating an ast::Expr::Literal expression for them.\nThe lit @ T![int] syntax is something that you may not have come across before.\nIt gives a name to the kind that is matched, so that I can use it again in the second match.\nThe result is equivalent to calling let lit = self.peek() again at the start of the outer match.\nIn the inner match, we create the correct ast::Lit literal types depending on the type of the token.\nIt does feel a bit like cheating to use a function called parse() to implement our parser, but it's what the standard library gives us and I'm for sure not gonna write string-to-number conversion routines by hand for this post.\nEven if I wanted to, other people have already done that work for me - for your implementation, you might also want to have look at lexical or even lexical_core.\nNext on the list are identifiers, which are interesting because they might just be a reference to a variable bar, but they might also be the start of a call to the function bar(x, 2).\nOur friend peek() (or, in this case, at()) will help us solve this dilemma again:\nT![ident] =&gt; {\n    let name = {\n        let ident_token = self.next().unwrap();\n        self.text(ident_token).to_string() // &lt;- now we need a copy\n    };\n    if !self.at(T!['(']) {\n        // plain identifier\n        ast::Expr::Ident(name)\n    } else {\n        //  function call\n        let mut args = Vec::new();\n        self.consume(T!['(']);\n        while !self.at(T![')']) {\n            let arg = self.parse_expression();\n            args.push(arg);\n            if self.at(T![,]) {\n                self.consume(T![,]);\n            }\n        }\n        self.consume(T![')']);\n        ast::Expr::FnCall { fn_name: name, args }\n    }\n}\n\nIf the token immediately after the identifier is an opening parenthesis, the expression becomes a function call.\nOtherwise, it stays an sole identifier.\nRemember that we filtered out any whitespace so the parenthesis will actually be the token right after the ident.\nFor the calls we loop for as long as there are arguments (until the parentheses get closed) and parse the argument expressions recursively.\nThis is what allows us to write my_function(x + 4 * y, log(2*z)), because the recursion will be able to parse any, full expression again.\nIn between the arguments we expect commas and at the end we skip over the closing paren and make an ast::Expr::FnCall node for the input.\nGrouped expressions (expr) and prefix operators are fairly straightforward, because they also mostly call parse_expression recursively.\nWhat is interesting about grouped expressions is that they will not need an extra type of node.\nWe only use the parentheses as boundaries of the expressions while parsing, but then the grouped expression becomes the node for whatever is inside the parens:\nT!['('] =&gt; {\n    // There is no AST node for grouped expressions.\n    // Parentheses just influence the tree structure.\n    self.consume(T!['(']);\n    let expr = self.parse_expression();\n    self.consume(T![')']);\n    expr\n}\nop @ T![+] | op @ T![-] | op @ T![!] =&gt; {\n    self.consume(op);\n    let expr = self.parse_expression();\n    ast::Expr::PrefixOp {\n        op,\n        expr: Box::new(expr),\n    }\n}\n\nFull code of parse_expression so far:\npub fn parse_expression(&amp;mut self) -&gt; ast::Expr {\n    match self.peek() {\n        lit @ T![int] | lit @ T![float] | lit @ T![string] =&gt; {\n            let literal_text = {\n                // if `peek` is not `T![EOF]`, then there must be \n                // a next token\n                let literal_token = self.next().unwrap();\n                self.text(literal_token)\n            };\n            let lit = match lit {\n                T![int] =&gt; ast::Lit::Int(\n                    literal_text\n                        .parse()\n                        .expect(&amp;format!(\n                            \"invalid integer literal: `{}`\", \n                            literal_text)\n                        ),\n                ),\n                T![float] =&gt; ast::Lit::Float(\n                    literal_text\n                        .parse()\n                        .expect(&amp;format!(\n                            \"invalid floating point literal: `{}`\", \n                            literal_text)\n                        ),\n                ),\n                T![string] =&gt; ast::Lit::Str(\n                    literal_text[1..(literal_text.len() - 1)]\n                        .to_string()\n                ),\n                _ =&gt; unreachable!(),\n            };\n            ast::Expr::Literal(lit)\n        }\n        T![ident] =&gt; {\n            let name = {\n                let ident_token = self.next().unwrap();\n                self.text(ident_token).to_string()\n            };\n            if !self.at(T!['(']) {\n                // plain identifier\n                ast::Expr::Ident(name)\n            } else {\n                //  function call\n                let mut args = Vec::new();\n                self.consume(T!['(']);\n                while !self.at(T![')']) {\n                    let arg = self.parse_expression();\n                    args.push(arg);\n                    if self.at(T![,]) {\n                        self.consume(T![,]);\n                    }\n                }\n                self.consume(T![')']);\n                ast::Expr::FnCall { fn_name: name, args }\n            }\n        }\n        T!['('] =&gt; {\n            // There is no AST node for grouped expressions.\n            // Parentheses just influence the tree structure.\n            self.consume(T!['(']);\n            let expr = self.parse_expression();\n            self.consume(T![')']);\n            expr\n        }\n        op @ T![+] | op @ T![-] | op @ T![!] =&gt; {\n            self.consume(op);\n            let expr = self.parse_expression();\n            ast::Expr::PrefixOp {\n                op,\n                expr: Box::new(expr),\n            }\n        }\n        kind =&gt; {\n            panic!(\"Unknown start of expression: `{}`\", kind);\n        }\n    }\n}\n\nWhat we have now is enough to write our first test for our new parser:\n// In tests/it.rs\n\n#[test]\nfn parse_expression() {\n    fn parse(input: &amp;str) -&gt; ast::Expr {\n        let mut parser = Parser::new(input);\n        parser.parse_expression()\n    }\n\n    // Weird spaces are to test that whitespace gets filtered out\n    let expr = parse(\"42\");\n    assert_eq!(expr, ast::Expr::Literal(ast::Lit::Int(42)));\n    let expr = parse(\"  2.7768\");\n    assert_eq!(expr, ast::Expr::Literal(ast::Lit::Float(2.7768)));\n    let expr = parse(r#\"\"I am a String!\"\"#);\n    assert_eq!(expr, ast::Expr::Literal(\n        ast::Lit::Str(\"I am a String!\".to_string())\n    ));\n    let expr = parse(\"foo\");\n    assert_eq!(expr, ast::Expr::Ident(\"foo\".to_string()));\n    let expr = parse(\"bar (  x, 2)\");\n    assert_eq!(\n        expr,\n        ast::Expr::FnCall {\n            fn_name: \"bar\".to_string(),\n            args:    vec![\n                ast::Expr::Ident(\"x\".to_string()), \n                ast::Expr::Literal(ast::Lit::Int(2)),\n            ],\n        }\n    );\n    let expr = parse(\"!  is_visible\");\n    assert_eq!(\n        expr,\n        ast::Expr::PrefixOp {\n            op:   T![!],\n            expr: Box::new(\n                ast::Expr::Ident(\"is_visible\".to_string())\n            ),\n        }\n    );\n    let expr = parse(\"(-13)\");\n    assert_eq!(\n        expr,\n        ast::Expr::PrefixOp {\n            op:   T![-],\n            expr: Box::new(ast::Expr::Literal(ast::Lit::Int(13))),\n        }\n    );\n}\n\n🔗Binary Operators\nI'm gonna get a bit philosophical for this one, y'all ready?\nAhem.\nWhat really is a binary operator?\nSure, it's an operator that goes in between to operands.\nBut, from a parsing perspective, it's a token that extends an expression.\nImagine the input -x + 3 * y ^ 2.\nWith what we have now, we get as far as parsing -x as a unary operator on an identifier, because that's the biggest unit you can get without infix operators.\nSeeing that the next token is a + tells us that the expression we are parsing is actually longer than that, and that after the + there should be another expression; the right-hand side of the addition.\nIn our first attempt at parsing binary operators, we will try to follow this view by adding an \"operator loop\" to parse_expression.\nThe entire match we have built so far becomes a potential left-hand side lhs of a binary operator, and after we parse it we check if the following token is an operator.\nIf so, we continue parsing its right-hand side and build a corresponding ast::Expr::InfixOp node:\n// In parser/expressions.rs\n\npub fn parse_expression(&amp;mut self) -&gt; ast::Expr {\n    let mut lhs = match self.peek() {\n        // unchanged\n    };\n    loop {\n        let op = match self.peek() {\n            op @ T![+]\n            | op @ T![-]\n            | op @ T![*]\n            | op @ T![/]\n            | op @ T![^]\n            | op @ T![==]\n            | op @ T![!=]\n            | op @ T![&amp;&amp;]\n            | op @ T![||]\n            | op @ T![&lt;]\n            | op @ T![&lt;=]\n            | op @ T![&gt;]\n            | op @ T![&gt;=]\n            | op @ T![!] =&gt; op,\n            T![EOF] =&gt; break,\n            T![')'] | T!['}'] | T![,] | T![;] =&gt; break,\n            kind =&gt; panic!(\"Unknown operator: `{}`\", kind),\n        };\n\n        self.consume(op);\n        let rhs = self.parse_expression();\n        lhs = ast::Expr::InfixOp {\n            op,\n            lhs: Box::new(lhs),\n            rhs: Box::new(rhs),\n        };\n    }\n\n    lhs\n}\n\nIf we add a small test, we see that we can now parse longer, combined expressions.\nTo tests, we'll implement Display for our AST such that expressions are always put in parentheses:\n// In parser/ast.rs\n\nimpl fmt::Display for Expr {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter&lt;'_&gt;) -&gt; fmt::Result {\n        match self {\n            Expr::Literal(lit) =&gt; write!(f, \"{}\", lit),\n            Expr::Ident(name) =&gt; write!(f, \"{}\", name),\n            Expr::FnCall { fn_name, args } =&gt; {\n                write!(f, \"{}(\", fn_name)?;\n                for arg in args {\n                    write!(f, \"{},\", arg)?;\n                }\n                write!(f, \")\")\n            }\n            Expr::PrefixOp { op, expr } =&gt; \n                write!(f, \"({} {})\", op, expr),\n            Expr::InfixOp { op, lhs, rhs } =&gt; \n                write!(f, \"({} {} {})\", lhs, op, rhs),\n            Expr::PostfixOp { op, expr } =&gt; \n                write!(f, \"({} {})\", expr, op),\n        }\n    }\n}\n\nimpl fmt::Display for Lit {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter&lt;'_&gt;) -&gt; fmt::Result {\n        match self {\n            Lit::Int(i) =&gt; write!(f, \"{}\", i),\n            Lit::Float(fl) =&gt; write!(f, \"{}\", fl),\n            Lit::Str(s) =&gt; write!(f, r#\"\"{}\"\"#, s)\n        }\n    }\n}\n\nThis test now passes:\n// In tests/it.rs\n\n#[test]\nfn parse_binary_expressions() {\n    fn parse(input: &amp;str) -&gt; ast::Expr {\n        let mut parser = Parser::new(input);\n        parser.parse_expression()\n    }\n\n    let expr = parse(\"4 + 2 * 3\");\n    assert_eq!(expr.to_string(), \"(4 + (2 * 3))\");\n}\n\nHowever, if we add some more expressions, we'll see that not all of them get parsed as we would expect to following our intuitions about maths:\n#[test]\nfn parse_binary_expressions() {\n    fn parse(input: &amp;str) -&gt; ast::Expr {\n        let mut parser = Parser::new(input);\n        parser.parse_expression()\n    }\n\n    let expr = parse(\"4 + 2 * 3\");\n    assert_eq!(expr.to_string(), \"(4 + (2 * 3))\"); // passes\n\n    let expr = parse(\"4 * 2 + 3\");\n    assert_eq!(expr.to_string(), \"((4 * 2) + 3)\"); // fails\n\n    let expr = parse(\"4 - 2 - 3\");\n    assert_eq!(expr.to_string(), \"((4 - 2) - 3)\"); // fails\n\n    let expr = parse(\"4 ^ 2 ^ 3\");\n    assert_eq!(expr.to_string(), \"(4 ^ (2 ^ 3))\"); // passes\n}\n\nCurrently, we're extending the expression recursively unconditionally on seeing any operator.\nBecause the recursion happens after the operator, to parse the right-hand side, all our binary expressions are right-associative and ignore operator precedence rules like * being evaluated before +.\nThat said, this isn't all that surprising, giving that parse_expression currently has no way of knowing an operator's precedence.\nLet's fix that:\n// In parser/expressions.rs\n\ntrait Operator {\n    /// Prefix operators bind their operand to the right.\n    fn prefix_binding_power(&amp;self) -&gt; ((), u8);\n\n    /// Infix operators bind two operands, lhs and rhs.\n    fn infix_binding_power(&amp;self) -&gt; Option&lt;(u8, u8)&gt;;\n\n    /// Postfix operators bind their operand to the left.\n    fn postfix_binding_power(&amp;self) -&gt; Option&lt;(u8, ())&gt;;\n}\n\nimpl Operator for TokenKind {\n    fn prefix_binding_power(&amp;self) -&gt; ((), u8) {\n        match self {\n            T![+] | T![-] | T![!] =&gt; ((), 51),\n            // Prefixes are the only operators we have already seen\n            // when we call this, so we know the token must be\n            // one of the above\n            _ =&gt; unreachable!(\"Not a prefix operator: {:?}\", self),\n        }\n    }\n\n    fn infix_binding_power(&amp;self) -&gt; Option&lt;(u8, u8)&gt; {\n        let result = match self {\n            T![||] =&gt; (1, 2),\n            T![&amp;&amp;] =&gt; (3, 4),\n            T![==] | T![!=] =&gt; (5, 6),\n            T![&lt;] | T![&gt;] | T![&lt;=] | T![&gt;=] =&gt; (7, 8),\n            T![+] | T![-] =&gt; (9, 10),\n            T![*] | T![/] =&gt; (11, 12),\n            T![^] =&gt; (22, 21), // &lt;- This binds stronger to the left!\n            _ =&gt; return None,\n        };\n        Some(result)\n    }\n\n    fn postfix_binding_power(&amp;self) -&gt; Option&lt;(u8, ())&gt; {\n        let result = match self {\n            T![!] =&gt; (101, ()),\n            _ =&gt; return None,\n        };\n        Some(result)\n    }\n}\n\nFor all operators, we define how tightly they bind to the left and to the right.\nIf the operator is a pre- or postfix operator, one of the directions is ().\nThe general idea is that the higher the binding power of an operator in some direction, the more it will try to take the operand on that side for itself and take it a way from other operators.\nFor example, in\n    4  *   2   +  3\n//   11 12    9 10\n\nthe binding power of 12 that * has to the right wins against the lower 9 that + has to the left, so the 2 gets associated with * and we get (4 * 2) + 3.\nMost of the operators bind more tightly to the right than to the left.\nThis way we get\n    4  -   2   -  3\n//    9 10    9 10\n\nthe right way round as (4 - 2) - 3 as the 10 that - has to the right wins against the 9 it has to the left.\nFor right-associative operators like ^, we swap the higher binding power to the left:\n    4  ^   2   ^  3\n//   22 21   22 21\n\nis grouped as 4 ^ (2 ^ 3) as 22 wins against 21.\nHow can we implement this into our parse_expression?\nWe'll need to know the right-sided binding power of the operator that triggered a recursion which parses a new right-hand side.\nWhen we enter the operator loop, we check not only if the next token is an operator, but also its left-sided binding power.\nOnly if this binding power is at least as high as the current right-sided one do we recurse again, which associates the current expression with the new, following operator.\nOtherwise we stop and return, so the operator with the higher right-sided binding power gets the expression.\nThis is hard to wrap your head around the first time. Once you get it, it's great and you will never want to do anything else again to handle expression, but it needs to click first. \nSimple but Powerful Pratt Parsing by matklad, the man behind rust-analyzer, is a very good article on the topic if you'd like to get explained this again, in a different way.\nIn code, it looks like this:\n// In parser/expressions.rs\n\npub fn parse_expression(&amp;mut self, binding_power: u8) -&gt; ast::Expr {\n    let mut lhs = match self.peek() {\n        lit @ T![int] | lit @ T![float] | lit @ T![string] =&gt; {\n            // unchanged\n        }\n        T![ident] =&gt; {\n            let name = {\n                let ident_token = self.next().unwrap();\n                self.text(ident_token).to_string()\n            };\n            if !self.at(T!['(']) {\n                // plain identifier\n                ast::Expr::Ident(name)\n            } else {\n                //  function call\n                let mut args = Vec::new();\n                self.consume(T!['(']);\n                while !self.at(T![')']) {\n                    let arg = self.parse_expression(0); // &lt;- NEW!\n                    args.push(arg);\n                    if self.at(T![,]) {\n                        self.consume(T![,]);\n                    }\n                }\n                self.consume(T![')']);\n                ast::Expr::FnCall { fn_name: name, args }\n            }\n        }\n        T!['('] =&gt; {\n            // There is no AST node for grouped expressions.\n            // Parentheses just influence the tree structure.\n            self.consume(T!['(']);\n            let expr = self.parse_expression(0); // &lt;- NEW!\n            self.consume(T![')']);\n            expr\n        }\n        op @ T![+] | op @ T![-] | op @ T![!] =&gt; {\n            self.consume(op);\n            let ((), right_binding_power) = \n                op.prefix_binding_power(); \n            // NEW!\n            let expr = self.parse_expression(right_binding_power); \n            ast::Expr::PrefixOp {\n                op,\n                expr: Box::new(expr),\n            }\n        }\n        kind =&gt; {\n            panic!(\"Unknown start of expression: `{}`\", kind);\n        }\n    };\n    loop {\n        let op = // unchanged;\n\n        if let Some((left_binding_power, right_binding_power)) = \n            op.infix_binding_power() { // &lt;- NEW!\n\n            if left_binding_power &lt; binding_power {\n                // previous operator has higher binding power than \n                // new one --&gt; end of expression\n                break; \n            }\n\n            self.consume(op);\n            let rhs = self.parse_expression(right_binding_power);\n            lhs = ast::Expr::InfixOp {\n                op,\n                lhs: Box::new(lhs),\n                rhs: Box::new(rhs),\n            };\n            // parsed an operator --&gt; go round the loop again\n            continue; \n        }\n        break; // Not an operator --&gt; end of expression\n    }\n\n    lhs\n}\n\nRecursive calls for both prefix and infix operators get passed the right-sided binding power of the current operator.\nThe important stopping point is the if left_binding_power &lt; binding_power { break; } inside the operator loop.\nIf op's left-sided binding power does not at least match the required binding power of the current invocation, it does not get parsed in the loop.\nIt will instead get parsed some number of returns up the recursion stack, by an operator loop with sufficiently high binding power.\nFunction call arguments and grouped expressions in parentheses reset the required binding power to 0, since they take precedence before any chain of operators.\nFor the interface of our parser, we add a small wrapper that will also call parse_expression with an initial binding power of 0:\npub fn expression(&amp;mut self) -&gt; ast::Expr {\n    self.parse_expression(0)\n}\n\nWe need to swap that in in our expression parsing tests:\n// In tests/it.rs, expression tests\n\nfn parse(input: &amp;str) -&gt; ast::Expr {\n    let mut parser = Parser::new(input);\n    parser.expression()\n}\n\nThe test that previously failed should now pass.\nWe'll add a few more complex expressions and test that they are also parsed correctly:\n// In tests/it.rs\n\n#[test]\nfn parse_binary_expressions() {\n    // ...unchanged\n\n    let expr = parse(\n        r#\"45.7 + 3 + 5 * 4^8^9 / 6 &gt; 4 &amp;&amp; test - 7 / 4 == \"Hallo\"\"#\n    );\n    assert_eq!(\n        expr.to_string(),\n        r#\"((((45.7 + 3) + ((5 * (4 ^ (8 ^ 9))) / 6)) &gt; 4) &amp;&amp; ((test - (7 / 4)) == \"Hallo\"))\"#\n    );\n\n    let expr = parse(\"2.0 / ((3.0 + 4.0) * (5.0 - 6.0)) * 7.0\");\n    assert_eq!(expr.to_string(), \"((2 / ((3 + 4) * (5 - 6))) * 7)\");\n\n    let expr = parse(\"min ( test + 4 , sin(2*PI ))\");\n    assert_eq!(expr.to_string(), \"min((test + 4),sin((2 * PI),),)\");\n}\n\nPostfix operators are now an easy addition:\n// In parser/expresions.rs\n\npub fn parse_expression(&amp;mut self, binding_power: u8) -&gt; ast::Expr {\n    let mut lhs = match self.peek() {\n        // unchanged\n    };\n    loop {\n        let op = // unchanged;\n\n        // NEW!\n        if let Some((left_binding_power, ())) = \n            op.postfix_binding_power() \n        { \n            if left_binding_power &lt; binding_power {\n                // previous operator has higher binding power than \n                // new one --&gt; end of expression\n                break;\n            }\n\n            self.consume(op);\n            // no recursive call here, because we have already\n            // parsed our operand `lhs`\n            lhs = ast::Expr::PostfixOp {\n                op,\n                expr: Box::new(lhs),\n            };\n            // parsed an operator --&gt; go round the loop again\n            continue;\n        }\n\n        if let Some((left_binding_power, right_binding_power)) = \n            op.infix_binding_power() {\n            // unchanged\n        }\n\n        break; // Not an operator --&gt; end of expression\n    }\n\n    lhs\n}\n\nAnd to check it works:\n// In tests/it.rs\n\n#[test]\nfn parse_postfix_op() {\n    fn parse(input: &amp;str) -&gt; ast::Expr {\n        let mut parser = Parser::new(input);\n        parser.expression()\n    }\n\n    let expr = parse(\"4 + -2! * 3\");\n    assert_eq!(expr.to_string(), \"(4 + ((- (2 !)) * 3))\");\n}\n\nThis will be the end of expressions for us.\nIf you want, try adding additional operators on your own.\nSome language constructs that one might not necessarily think of as operators fit very cleanly into our framework.\nFor example, try adding . as an operator to model field accesses like foo.bar.\nFor a greater challenge, array indexing can be handled as a combination of postfix operator [ and grouped expressions.\nThere's all kinds of expressions left for you to do, but we now have to move on to...\n🔗Statements\nAs a reward for our hard work on expressions, we are now allowed to parse anything that indludes an expression.\nThe next level up from expressions are statements, of which we will consider variable definitions with let and re-assignments without let, as well as if statements (we'll also need a representation of explicit {} scopes):\n// In parser/ast.rs\n\n#[derive(Debug, Clone, PartialEq)]\npub enum Stmt {\n    Let {\n        var_name: String,\n        value:    Box&lt;Expr&gt;,\n    },\n    Assignment {\n        var_name: String,\n        value:    Box&lt;Expr&gt;,\n    },\n    IfStmt {\n        condition: Box&lt;Expr&gt;,\n        body:      Vec&lt;Stmt&gt;,\n        else_stmt: Option&lt;Box&lt;Stmt&gt;&gt;,\n    },\n    Block {\n        stmts: Vec&lt;Stmt&gt;,\n    },\n}\n\nWe'll make a new module called hierarchy for statements and beyond and start the same way as for expressions:\n// In parser/hierarchy.rs\n\nimpl&lt;'input, I&gt; Parser&lt;'input, I&gt;\nwhere\n    I: Iterator&lt;Item = Token&gt;,\n{\n    pub fn statement(&amp;mut self) -&gt; ast::Stmt {\n        match self.peek() {\n            _ =&gt; todo!(),\n        }\n    }\n}\n\nThe declaration and the let differ only by the let keyword:\nT![let] =&gt; {\n    self.consume(T![let]);\n    let ident = self.next().expect(\"Expected identifier after `let`\");\n    assert_eq!(\n        ident.kind,\n        T![ident],\n        \"Expected identifier after `let`, but found `{}`\",\n        ident.kind\n    );\n    let name = self.text(ident).to_string();\n    self.consume(T![=]);\n    let value = self.expression();\n    self.consume(T![;]);\n    ast::Stmt::Let {\n        var_name: name,\n        value:    Box::new(value),\n    }\n}\nT![ident] =&gt; {\n    let ident = self.next().unwrap();\n    let name = self.text(ident).to_string();\n    self.consume(T![=]);\n    let value = self.expression();\n    self.consume(T![;]);\n    ast::Stmt::Assignment {\n        var_name: name,\n        value:    Box::new(value),\n    }\n}\n\nNote how we now just call self.expression() to parse the value assigned to the variable.\nIt will do all the expression parsing work for us and return us a nice ast::Expr to use in our ast::Stmt.\nThe if case is a bit more involved, because we need to handle the condition, the statements inside the if and also possible a else.\nWe can make our lives a bit easier by re-using the block scope statement for the body:\nT![if] =&gt; {\n    self.consume(T![if]);\n    self.consume(T!['(']);\n    let condition = self.expression();\n    self.consume(T![')']);\n\n    assert!(self.at(T!['{']), \"Expected a block after `if` statement\");\n    let body = self.statement();\n    let body = match body {\n        ast::Stmt::Block { stmts } =&gt; stmts,\n        _ =&gt; unreachable!(),\n    };\n\n    let else_stmt = if self.at(T![else]) {\n        self.consume(T![else]);\n        assert!(\n            self.at(T![if]) || self.at(T!['{']),\n            \"Expected a block or an `if` after `else` statement\"\n        );\n        Some(Box::new(self.statement()))\n    } else {\n        None\n    };\n\n    ast::Stmt::IfStmt {\n        condition: Box::new(condition),\n        body,\n        else_stmt,\n    }\n}\nT!['{'] =&gt; {\n    self.consume(T!['{']);\n    let mut stmts = Vec::new();\n    while !self.at(T!['}']) {\n        let stmt = self.statement();\n        stmts.push(stmt);\n    }\n    self.consume(T!['}']);\n    ast::Stmt::Block { stmts }\n}\n\nThe statement test will be our longest test so far:\n// In tests/it.rs\n\n#[test]\nfn parse_statements() {\n    fn parse(input: &amp;str) -&gt; ast::Stmt {\n        let mut parser = Parser::new(input);\n        parser.statement()\n    }\n\n    let stmt = parse(\n        unindent(\n            r#\"\n        {\n            let x = 7 + sin(y);\n            {\n                x = 3;\n                if (bar &lt; 3) {\n                    x = x + 1;\n                    y = 3 * x;\n                } else if (bar &lt; 2) {\n                    let i = 2!;\n                    x = x + i;\n                } else {\n                    x = 1;\n                }\n            }\n        }\n    \"#,\n        )\n        .as_str(),\n    );\n\n    let stmts = match stmt {\n        ast::Stmt::Block { stmts } =&gt; stmts,\n        _ =&gt; unreachable!(),\n    };\n    assert_eq!(stmts.len(), 2);\n\n    let let_stmt = &amp;stmts[0];\n    match let_stmt {\n        ast::Stmt::Let { var_name, .. } =&gt; assert_eq!(var_name, \"x\"),\n        _ =&gt; unreachable!(),\n    }\n\n    let stmts = match &amp;stmts[1] {\n        ast::Stmt::Block { stmts } =&gt; stmts,\n        _ =&gt; unreachable!(),\n    };\n    assert_eq!(stmts.len(), 2);\n\n    let assignment_stmt = &amp;stmts[0];\n    match assignment_stmt {\n        ast::Stmt::Assignment { var_name, .. } =&gt; {\n            assert_eq!(var_name, \"x\");\n        }\n        _ =&gt; unreachable!(),\n    }\n\n    let if_stmt = &amp;stmts[1];\n    match if_stmt {\n        ast::Stmt::IfStmt {\n            condition,\n            body,\n            else_stmt,\n        } =&gt; {\n            assert!(matches!(\n                &amp;**condition,\n                ast::Expr::InfixOp {\n                    op:  T![&lt;],\n                    lhs: _lhs,\n                    rhs: _rhs,\n                }\n            ));\n            assert_eq!(body.len(), 2);\n            let x_assignment = &amp;body[0];\n            match x_assignment {\n                ast::Stmt::Assignment { var_name, .. } =&gt; \n                    assert_eq!(var_name, \"x\"),\n                _ =&gt; unreachable!(),\n            }\n            let y_assignment = &amp;body[1];\n            match y_assignment {\n                ast::Stmt::Assignment { var_name, .. } =&gt; \n                    assert_eq!(var_name, \"y\"),\n                _ =&gt; unreachable!(),\n            }\n\n            let else_stmt = match else_stmt {\n                Some(stmt) =&gt; &amp;**stmt,\n                None =&gt; unreachable!(),\n            };\n\n            match else_stmt {\n                ast::Stmt::IfStmt {\n                    condition,\n                    body,\n                    else_stmt,\n                } =&gt; {\n                    assert!(matches!(\n                        &amp;**condition,\n                        ast::Expr::InfixOp {\n                            op:  T![&lt;],\n                            lhs: _lhs,\n                            rhs: _rhs,\n                        }\n                    ));\n                    assert_eq!(body.len(), 2);\n                    let let_i = &amp;body[0];\n                    match let_i {\n                        ast::Stmt::Let { var_name, .. } =&gt; \n                            assert_eq!(var_name, \"i\"),\n                        _ =&gt; unreachable!(),\n                    }\n                    let x_assignment = &amp;body[1];\n                    match x_assignment {\n                        ast::Stmt::Assignment { var_name, .. } =&gt; \n                            assert_eq!(var_name, \"x\"),\n                        _ =&gt; unreachable!(),\n                    }\n\n                    let else_stmt = match else_stmt {\n                        Some(stmt) =&gt; &amp;**stmt,\n                        None =&gt; unreachable!(),\n                    };\n\n                    let stmts = match else_stmt {\n                        ast::Stmt::Block { stmts } =&gt; stmts,\n                        _ =&gt; unreachable!(),\n                    };\n                    assert_eq!(stmts.len(), 1);\n\n                    let x_assignment = &amp;stmts[0];\n                    match x_assignment {\n                        ast::Stmt::Assignment { var_name, .. } =&gt; \n                            assert_eq!(var_name, \"x\"),\n                        _ =&gt; unreachable!(),\n                    }\n                }\n                _ =&gt; unreachable!(),\n            };\n        }\n        _ =&gt; unreachable!(),\n    }\n}\n\n🔗Items\nLet's move up another level to items containing statements.\nWe'll do struct and function definitions, for which we'll also need a notion of what a type looks like in our language.\nAs before, our reward for doing statements is that we're now allowed to use self.statement() to parse the function body.\nTime to play that same song again!\n// In parser/ast.rs\n\n#[derive(Debug, Clone, PartialEq)]\npub enum Item {\n    Struct {\n        name:    Type,\n        members: Vec&lt;(String, Type)&gt;,\n    },\n    Function {\n        name:       String,\n        parameters: Vec&lt;(String, Type)&gt;,\n        body:       Vec&lt;Stmt&gt;,\n    },\n}\n\n#[derive(Debug, Clone, PartialEq, Eq)]\npub struct Type {\n    pub name:     String,\n    pub generics: Vec&lt;Type&gt;,\n}\n\nAs you can see, a Type is really just an identifier plus a list of generic parameters.\nWe use that for both function parameters and struct members, and also for the struct definition itself, to allow defining structs like Foo&lt;T, U&gt;.\nParsing types uses a recursive loop over the generic parameters (which are themselves types, like in Bar&lt;Baz&lt;T&gt;&gt;):\n// In parser/hierarchy.rs\n\npub fn type_(&amp;mut self) -&gt; ast::Type {\n    let ident = self.next()\n        .expect(\"Tried to parse type, but there were no more tokens\");\n    assert_eq!(\n        ident.kind,\n        T![ident],\n        \"Expected identifier at start of type, but found `{}`\",\n        ident.kind\n    );\n    let name = self.text(ident).to_string();\n\n    let mut generics = Vec::new();\n\n    if self.at(T![&lt;]) {\n        self.consume(T![&lt;]);\n        while !self.at(T![&gt;]) {\n            // Generic parameters are also types\n            let generic = self.type_();\n            generics.push(generic);\n            if self.at(T![,]) {\n                self.consume(T![,]);\n            }\n        }\n        self.consume(T![&gt;]);\n    }\n\n    ast::Type { name, generics }\n}\n\nWe'll implement struct definitions first.\nThey are very similar - instead of generic parameters we loop over members, which are identifiers followed by : and their type:\npub fn item(&amp;mut self) -&gt; ast::Item {\n    match self.peek() {\n        T![fn] =&gt; todo!(),\n        T![struct] =&gt; {\n            self.consume(T![struct]);\n            let mut members = Vec::new();\n            let name = self.type_();\n            self.consume(T!['{']);\n            while !self.at(T!['}']) {\n                let member_ident = self\n                    .next()\n                    .expect(\"Tried to parse struct member, \n                        but there were no more tokens\");\n                assert_eq!(\n                    member_ident.kind,\n                    T![ident],\n                    \"Expected identifier as struct member, but found `{}`\",\n                    member_ident.kind\n                );\n                let member_name = \n                    self.text(member_ident).to_string();\n                self.consume(T![:]);\n                let member_type = self.type_();\n                members.push((member_name, member_type));\n                if self.at(T![,]) {\n                    self.consume(T![,]);\n                }\n            }\n            self.consume(T!['}']);\n            ast::Item::Struct { name, members }\n        }\n        kind =&gt; panic!(\"Unknown start of item: `{}`\", kind),\n    }\n}\n\nWe can test types and struct definitions already:\n// In tests/it.rs\n\n#[test]\nfn parse_struct() {\n    fn parse(input: &amp;str) -&gt; ast::Item {\n        let mut parser = Parser::new(input);\n        parser.item()\n    }\n\n    let item = parse(\n        unindent(\n            r#\"\n        struct Foo&lt;T, U&gt; {\n            x: String,\n            bar: Bar&lt;Baz&lt;T&gt;, U&gt;\n        }\n    \"#,\n        )\n        .as_str(),\n    );\n\n    match item {\n        ast::Item::Struct { name, members } =&gt; {\n            assert_eq!(\n                name,\n                ast::Type {\n                    name:     \"Foo\".to_string(),\n                    generics: vec![\n                        ast::Type {\n                            name:     \"T\".to_string(),\n                            generics: vec![],\n                        },\n                        ast::Type {\n                            name:     \"U\".to_string(),\n                            generics: vec![],\n                        }\n                    ],\n                }\n            );\n            assert_eq!(members.len(), 2);\n            let (bar, bar_type) = &amp;members[1];\n            assert_eq!(bar, \"bar\");\n            assert_eq!(\n                bar_type,\n                &amp;ast::Type {\n                    name:     \"Bar\".to_string(),\n                    generics: vec![\n                        ast::Type {\n                            name:     \"Baz\".to_string(),\n                            generics: vec![ast::Type {\n                                name:     \"T\".to_string(),\n                                generics: vec![],\n                            }],\n                        },\n                        ast::Type {\n                            name:     \"U\".to_string(),\n                            generics: vec![],\n                        }\n                    ],\n                }\n            );\n        }\n        _ =&gt; unreachable!(),\n    };\n}\n\nThe function case should start to look familiar to you by now; it's a loop over parameters!\nAdditionally, we use the same trick as for if to parse the function body:\n// In parser/hierarchy.rs, `Parser::item`\n\nT![fn] =&gt; {\n    self.consume(T![fn]);\n    let mut parameters = Vec::new();\n\n    let ident = self\n        .next()\n        .expect(\"Tried to parse function name, but there were no more tokens\");\n    assert_eq!(\n        ident.kind,\n        T![ident],\n        \"Expected identifier as function name, but found `{}`\",\n        ident.kind\n    );\n    let name = self.text(ident).to_string();\n\n    self.consume(T!['(']);\n    while !self.at(T![')']) {\n        let parameter_ident = self\n            .next()\n            .expect(\"Tried to parse function parameter, \n                but there were no more tokens\");\n        assert_eq!(\n            parameter_ident.kind,\n            T![ident],\n            \"Expected identifier as function parameter, but found `{}`\",\n            parameter_ident.kind\n        );\n        let parameter_name = self.text(parameter_ident).to_string();\n        self.consume(T![:]);\n        let parameter_type = self.type_();\n        parameters.push((parameter_name, parameter_type));\n        if self.at(T![,]) {\n            self.consume(T![,]);\n        }\n    }\n    self.consume(T![')']);\n\n    assert!(self.at(T!['{']), \"Expected a block after function header\");\n    let body = match self.statement() {\n        ast::Stmt::Block { stmts } =&gt; stmts,\n        _ =&gt; unreachable!(),\n    };\n\n    ast::Item::Function { name, parameters, body }\n}\n\nWe'll add a test for functions as well:\n// In tests/it.rs\n\n#[test]\nfn parse_function() {\n    fn parse(input: &amp;str) -&gt; ast::Item {\n        let mut parser = Parser::new(input);\n        parser.item()\n    }\n\n    let item = parse(\n        unindent(\n            r#\"\n        fn wow_we_did_it(x: String, bar: Bar&lt;Baz&lt;T&gt;, U&gt;) {\n            let x = 7 + sin(y);\n            {\n                x = 3;\n                if (bar &lt; 3) {\n                    x = x + 1;\n                    y = 3 * x;\n                } else if (bar &lt; 2) {\n                    let i = 2!;\n                    x = x + i;\n                } else {\n                    x = 1;\n                }\n            }\n        }\n    \"#,\n        )\n        .as_str(),\n    );\n\n    match item {\n        ast::Item::Function { name, parameters, body } =&gt; {\n            assert_eq!(name, \"wow_we_did_it\");\n            assert_eq!(parameters.len(), 2);\n            let (bar, bar_type) = &amp;parameters[1];\n            assert_eq!(bar, \"bar\");\n            assert_eq!(\n                bar_type,\n                &amp;ast::Type {\n                    name:     \"Bar\".to_string(),\n                    generics: vec![\n                        ast::Type {\n                            name:     \"Baz\".to_string(),\n                            generics: vec![ast::Type {\n                                name:     \"T\".to_string(),\n                                generics: vec![],\n                            }],\n                        },\n                        ast::Type {\n                            name:     \"U\".to_string(),\n                            generics: vec![],\n                        }\n                    ],\n                }\n            );\n            assert_eq!(body.len(), 2);\n        }\n        _ =&gt; unreachable!(),\n    };\n}\n\n🔗Files\nWe're running the victory lap now!\nWe'll make a parser method to parse an entire file, as a sequence of items:\n// In parser/hierarchy.rs\n\npub fn file(&amp;mut self) -&gt; Vec&lt;ast::Item&gt; {\n    let mut items = Vec::new();\n    while !self.at(T![EOF]) {\n        let item = self.item();\n        items.push(item);\n    }\n    items\n}\n\nAnd a last, glorious test:\n// In tests/it.rs\n\n#[test]\nfn parse_file() {\n    fn parse(input: &amp;str) -&gt; Vec&lt;ast::Item&gt; {\n        let mut parser = Parser::new(input);\n        parser.file()\n    }\n\n    let items = parse(\n        unindent(\n            r#\"\n        fn wow_we_did_it(x: String, bar: Bar&lt;Baz&lt;T&gt;, U&gt;) {\n            let x = 7 + sin(y);\n            {\n                x = 3;\n                if (bar &lt; 3) {\n                    x = x + 1;\n                    y = 3 * x;\n                } else if (bar &lt; 2) {\n                    let i = 2!;\n                    x = x + i;\n                } else {\n                    x = 1;\n                }\n            }\n        }\n\n        struct Foo&lt;T, U&gt; {\n            x: String,\n            bar: Bar&lt;Baz&lt;T&gt;, U&gt;\n        }\n    \"#,\n        )\n        .as_str(),\n    );\n\n    let function = &amp;items[0];\n    match function {\n        ast::Item::Function { name, parameters, body } =&gt; {\n            assert_eq!(name, \"wow_we_did_it\");\n            assert_eq!(parameters.len(), 2);\n            assert_eq!(body.len(), 2);\n        }\n        _ =&gt; unreachable!(),\n    };\n\n    let struct_ = &amp;items[1];\n    match struct_ {\n        ast::Item::Struct { name, members } =&gt; {\n            assert_eq!(\n                name,\n                &amp;ast::Type {\n                    name:     \"Foo\".to_string(),\n                    generics: vec![\n                        ast::Type {\n                            name:     \"T\".to_string(),\n                            generics: vec![],\n                        },\n                        ast::Type {\n                            name:     \"U\".to_string(),\n                            generics: vec![],\n                        }\n                    ],\n                }\n            );\n            assert_eq!(members.len(), 2);\n        }\n        _ =&gt; unreachable!(),\n    };\n}\n\n🔗A Retrospective High-Level View: Descending\nWe have built up parser from small components; basic building blocks with which built higher and higher.\nFrom individual characters we made tokens.\nWe parsed these tokens into atoms of expressions, then into bigger, complex expressions, then statements, then items, then files.\nNow we have reached the top, and it's time to look back down and see how high we have built and what we have achieved.\nAt the beginning of this post, I described the hierarchy of a program as files containing items containing statements and so forth.\nIt was much easier for us to implement our parser the other way round, because that way we were able to use the smaller things to build the bigger things.\nBut if we now follow a run of our parser, we can see it tracing the hierarchy levels from the top to the bottom.\nWhat we have built is what is called a recursive-descent parser.\nIn such a parser, each thing in your language is implemented as its own function, which is called from all the other places in the language where that thing could be.\nYou can see this in the way we call statement() and type_() from item(), and expression() from statement() (I deviated a bit from the strict pattern by not making individual struct() and function_declaration() functions and instead inlining them into item(), same with statement()).\nThe only real time we break away from this paradigm is to parse expressions, where we use Pratt parsing as a more tailored algorithm for expressions with precedence and associativity.\nRecursive-descent parsers are widely used everywhere, for both parsers generated by parser generators and hand-written parsers for production languages (including Rust).\nThere are corresponding bottom-up parsing techniques, but you're less likely to see them implemented by hand.\nGoing top-down is just a lot more straightforward to implement.\n🔗Bonus: What if we did use a generator?\nBefore we get ahead of ourselves, I will not switch our implementation to a parser generator now.\nFor one, there is no one crate that would be the generator to use.\nA whole bunch of parser generators exists, and if you're interested in trying one out I will once again refer you to this list.\nBut also, any parser generator comes with a set of trade-offs from what language grammars you can have over what it outputs to whether you can use a custom lexer with it and, if so, what that lexer has to spit out.\nParser generators can be a great way to get you started prototyping your language, but you will always get the most control with a hand-written parser, at the cost of having to implement and maintain it.\nHopefully, this article can help with the latter.\nGenerating a lexer is a different story. \nLexers are a lot more \"boring\", in the sense that you are less likely to do anything special in the lexer that is particular to your language.\nAn exception may be whitespace-sensitive languages like Python or Haskell, which rely on indentation as part of understanding a program written in them.\nEven for those, it is usually possible to wrap a generated lexer and post-process its tokens to get what you want.\nA big advantage of lexer generators is that they can optimize your token classes a lot.\nInstead of running all lexer rules individually for each token (which we to when we iterate over all lexer Rules and call their matches method), a generator will compute efficient look-up structures at compile time that essentially try all rules in parallel, at a fraction of the cost.\nThis can give sizeable improvements in performance.\nWhy does that matter?\nThat may seem like dumb question, but as many people before me have pointed out, parsing is usually only a tiny part of compiler in terms of the work it has to do.\nA compiler has many other tasks like type checking, monormorphization, optimization and code generation, all of which are probably more effort than parsing the input file.\nSo indeed, the absolute parsing speed less relevant inside a compiler, though that may be different in other applications like IDE-tooling.\nWhat does matter to some extent is the throughput of your parser.\nThroughput refers to the number of bytes, or lines, that the parser can process per second.\nAssuming all files have to go through your parser, this is a limit for how fast you can continuously process input.\nAnyways, let's see where we stand in terms of lexing and parsing speed.\nWe'll bring in the criterion library and register a benchmark with cargo:\n[dev-dependencies]\nunindent = \"0.1\" # old\ncriterion = \"0.3.4\"\n\n[[bench]]\nname = \"main\"\nharness = false\n\nIn the benchmark, we'll run our lexer on a function and a struct definition.\nThis is not a guide to criterion, so I'll not explain this in too much detail.\nThe important things are we need to have some input, we need to tell criterion how long that input is so it can calculate the throughput, and then we need to run our lexer on the input under criterion's scrutiny:\n// In benches/main.rs\n\nuse parsing_basics::lexer::Lexer;\nuse std::time::Duration;\nuse unindent::unindent;\n\nuse criterion::{criterion_group, criterion_main, BenchmarkId, Criterion, Throughput};\n\npub fn lex_function(c: &amp;mut Criterion) {\n    let input = r#\"\n        // tests stuff\n        fn test(var: Type, var2_: bool) {\n            let x = \"String content \\\" test\" + 7 / 27.3e-2^4;\n            let chars = x.chars();\n            if let Some(c) = chars.next() {\n                x = x + c;\n            } else if !var2_ {\n                x = x + \",\";\n            }\n        }\n    \"#;\n    let input = unindent(input);\n    bench_lexer(c, \"function\", input.as_str());\n}\n\npub fn lex_struct(c: &amp;mut Criterion) {\n    let input = r#\"\n        struct Foo&lt;T&gt; {\n            bar: Bar&lt;T&gt;,\n        }\n    \"#;\n    let input = unindent(input);\n    bench_lexer(c, \"struct\", input.as_str());\n}\n\nfn bench_lexer(c: &amp;mut Criterion, name: &amp;str, input: &amp;str) {\n    // Lexing: measured in bytes\n    let mut group = c.benchmark_group(\"lexer\");\n    group.measurement_time(Duration::from_millis(7500));\n\n    // To measure throughput, we need to tell `criterion`\n    // how big our input is.\n    group.throughput(\n        Throughput::Bytes(input.as_bytes().len() as u64)\n    );\n    group.bench_with_input( name, input, |b, input| {\n        b.iter_batched(\n            || Lexer::new(input),         // &lt;- Our lexer is made HERE\n            |mut lexer| lexer.tokenize(), // &lt;- and runs HERE\n            BatchSize::SmallInput,\n        )\n    });\n    group.finish();\n}\n\ncriterion_group!(benches, lex_function, lex_struct);\ncriterion_main!(benches);\n\nYour mileage may vary, but on my machine I get:\nlexer/function    time:   [9.5872 us 9.6829 us 9.7927 us]\n                  thrpt:  [23.081 MiB/s 23.342 MiB/s 23.575 MiB/s]\n\nlexer/struct      time:   [2.4278 us 2.4652 us 2.5161 us]\n                  thrpt:  [13.266 MiB/s 13.540 MiB/s 13.749 MiB/s]\n\nThis already shows use something interesting - while the smaller struct definition lexes faster in absolute time, the throughput criterion shows for it is lower!\nObviously, our lexer isn't doing anything differently between the two inputs.\nBut something, be it the distribution more whitespace or more unique single-character tokens or more rule-based tokens or something else, gives the struct definition a worse profile than the function definition.\nLet's bench the parser as well:\n// In benches/main.rs\n\npub fn parse_file(c: &amp;mut Criterion) {\n    let input = r#\"\n        fn wow_we_did_it(x: String, bar: Bar&lt;Baz&lt;T&gt;, U&gt;) {\n            let x = 7 + sin(y);\n            {\n                x = 3;\n                if (bar &lt; 3) {\n                    x = x + 1;\n                    y = 3 * x;\n                } else if (bar &lt; 2) {\n                    let i = 2!;\n                    x = x + i;\n                } else {\n                    x = 1;\n                }\n            }\n        }\n\n        struct Foo&lt;T, U&gt; {\n            x: String,\n            bar: Bar&lt;Baz&lt;T&gt;, U&gt;\n        }\n    \"#;\n    let input = unindent(input);\n    bench_parser(c, \"file\", input.as_str());\n}\n\nfn bench_parser(c: &amp;mut Criterion, name: &amp;str, input: &amp;str) {\n    let mut group = c.benchmark_group(\"parser\");\n    group.measurement_time(Duration::from_secs(10));\n\n    group.throughput(\n        Throughput::Bytes(input.as_bytes().len() as u64)\n    );\n    group.bench_with_input(name, input, |b, input| {\n        b.iter_with_setup(\n            || Parser::new(input),\n            |mut parser| {\n                let _tree = parser.file();\n            },\n        )\n    });\n    group.finish();\n}\n\n// Edited\ncriterion_group!(benches, lex_function, lex_struct, parse_file); \n\nAnd here the result:\nparser/file       time:   [30.932 us 32.062 us 33.348 us]\n                  thrpt:  [10.209 MiB/s 10.619 MiB/s 11.007 MiB/s]\n\nYou can see that the parser takes more time overall because it does additional work (building the parse tree, figuring out what to parse next), but runs at about the throughput of the slower of the two lexer results (a bit less, due to the extra work).\nWe don't know for sure, but unless we've hit the exact performance of our parser with that of the lexer, it seems like our parser could do more if the lexer was lexing tokens more quickly.\nThe aforementioned lexer rule optimizations are nothing I would do by hand.\nIf we bring in rayon and try to \"manually\" run our rules in parallel using concurrency, this does the opposite of helping:\nlexer/function    time:   [518.46 us 520.06 us 522.20 us]\n                  thrpt:  [443.21 KiB/s 445.04 KiB/s 446.41 KiB/s]\n           change:\n                  time:   [+5183.5% +5251.9% +5312.1%] \n                          (p = 0.00 &lt; 0.05)\n                  thrpt:  [-98.152% -98.132% -98.107%]\n                  Performance has regressed.\n\nlexer/struct      time:   [134.49 us 135.01 us 135.82 us]\n                  thrpt:  [251.66 KiB/s 253.16 KiB/s 254.14 KiB/s]\n           change:\n                  time:   [+5153.5% +5251.2% +5342.9%] \n                          (p = 0.00 &lt; 0.05)\n                  thrpt:  [-98.163% -98.131% -98.097%]\n                  Performance has regressed.\n\nThat does not look good!\nThreads have considerable overhead, so for something as small as our lexing this is not the way.\nLet's instead try an optimizing lexer generator.\nUnlike the entire zoo of parser generators, there is a clear winner for pure lexing:\nI think I have not met a single person not using logos for this.\nWe'll bring it in as a dependency\n[dependencies]\nregex = \"1\"\nlazy_static = \"1\"\nlogos = \"0.12\" # &lt;- NEW!\n\nand set up a new lexer submodule to define a logos lexer:\n// In lexer/generated.rs\n\nuse super::TokenKind;\nuse crate::T;\nuse logos::Logos;\n\n#[derive(Logos, Debug, PartialEq, Eq)]\npub(super) enum LogosToken {\n    #[token(\".\")]\n    Dot,\n    #[token(\":\")]\n    Colon,\n    #[token(\",\")]\n    Comma,\n    #[token(\";\")]\n    Semi,\n    #[token(\"+\")]\n    Plus,\n    #[token(\"-\")]\n    Minus,\n    #[token(\"*\")]\n    Times,\n    #[token(\"/\")]\n    Slash,\n    #[token(\"^\")]\n    Pow,\n    #[token(\"=\")]\n    Eq,\n    #[token(\"!\")]\n    Bang,\n    #[token(\"&amp;&amp;\")]\n    And,\n    #[token(\"||\")]\n    Or,\n    #[token(\"==\")]\n    Eqq,\n    #[token(\"!=\")]\n    Neq,\n    #[token(\"&lt;=\")]\n    Leq,\n    #[token(\"&gt;=\")]\n    Geq,\n    #[token(\"_\")]\n    Under,\n    // Brackets\n    #[token(\"&lt;\")]\n    LAngle,\n    #[token(\"&gt;\")]\n    RAngle,\n    #[token(\"(\")]\n    LParen,\n    #[token(\")\")]\n    RParen,\n    #[token(\"[\")]\n    LSquare,\n    #[token(\"]\")]\n    RSquare,\n    #[token(\"{\")]\n    LBrace,\n    #[token(\"}\")]\n    RBrace,\n    // Constructs\n    #[regex(r#\"\"((\\\\\"|\\\\\\\\)|[^\\\\\"])*\"\"#)]\n    String,\n    #[regex(r#\"//[^\\n]*\\n\"#)]\n    LineComment,\n    #[regex(r#\"\\d+\"#, priority = 2)]\n    Int,\n    #[regex(r#\"((\\d+(\\.\\d+)?)|(\\.\\d+))([Ee](\\+|-)?\\d+)?\"#)]\n    Float,\n    #[regex(r#\"[A-Za-z]([A-Za-z]|_|\\d)*\"#)]\n    Ident,\n\n    // Keywords\n    #[token(\"let\")]\n    KwLet,\n    #[token(\"if\")]\n    KwIf,\n    #[token(\"else\")]\n    KwElse,\n    #[token(\"fn\")]\n    KwFn,\n    #[token(\"struct\")]\n    KwStruct,\n\n    // Misc\n    #[regex(r\"[ \\t\\r\\n\\f]+\")]\n    WS,\n    #[error]\n    Error,\n}\n\nimpl LogosToken {\n    #[rustfmt::skip]\n    pub fn kind(&amp;self) -&gt; TokenKind {\n        use LogosToken::*;\n        match self {\n            Dot          =&gt; T![.],\n            Colon        =&gt; T![:],\n            Comma        =&gt; T![,],\n            Semi         =&gt; T![;],\n            Plus         =&gt; T![+],\n            Minus        =&gt; T![-],\n            Times        =&gt; T![*],\n            Slash        =&gt; T![/],\n            Pow          =&gt; T![^],\n            Eq           =&gt; T![=],\n            Bang         =&gt; T![!],\n            And          =&gt; T![&amp;&amp;],\n            Or           =&gt; T![||],\n            Eqq          =&gt; T![==],\n            Neq          =&gt; T![!=],\n            Leq          =&gt; T![&lt;=],\n            Geq          =&gt; T![&gt;=],\n            Under        =&gt; T![_],\n            LAngle       =&gt; T![&lt;],\n            RAngle       =&gt; T![&gt;],\n            LParen       =&gt; T!['('],\n            RParen       =&gt; T![')'],\n            LSquare      =&gt; T!['['],\n            RSquare      =&gt; T![']'],\n            LBrace       =&gt; T!['{'],\n            RBrace       =&gt; T!['}'],\n            String       =&gt; T![string],\n            LineComment  =&gt; T![comment],\n            Int          =&gt; T![int],\n            Float        =&gt; T![float],\n            Ident        =&gt; T![ident],\n            KwLet        =&gt; T![let],\n            KwIf         =&gt; T![if],\n            KwElse       =&gt; T![else],\n            KwFn         =&gt; T![fn],\n            KwStruct     =&gt; T![struct],\n            WS           =&gt; T![ws],\n            Error        =&gt; T![error],\n        }\n    }\n}\n\nIn the main lexer module, we rename our old lexer to CustomLexer and implement a small LogosLexer that wraps the lexer generated by logos and maps its tokens to our tokens (so we don't have to change everything else):\n// In lexer/mod.rs\n\npub struct LogosLexer&lt;'input&gt; {\n    generated: logos::SpannedIter&lt;'input, LogosToken&gt;,\n    eof:       bool,\n}\n\nimpl&lt;'input&gt; LogosLexer&lt;'input&gt; {\n    pub fn new(input: &amp;'input str) -&gt; Self {\n        Self {\n            generated: LogosToken::lexer(input).spanned(),\n            eof:       false,\n        }\n    }\n\n    pub fn tokenize(&amp;mut self) -&gt; Vec&lt;Token&gt; {\n        self.collect()\n    }\n}\n\nimpl&lt;'input&gt; Iterator for LogosLexer&lt;'input&gt; {\n    type Item = Token;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        match self.generated.next() {\n            Some((token, span)) =&gt; Some(Token {\n                kind: token.kind(),\n                span: span.into(),\n            }),\n            None if self.eof =&gt; None,\n            None =&gt; {\n                self.eof = true;\n                Some(Token {\n                    kind: T![EOF],\n                    span: (0..0).into(),\n                })\n            }\n        }\n    }\n}\n\nThe spanned() function that we call on the LogosToken::lexer generated for us by logos turns the generated lexer (which is also an iterator, like ours) into an iterator that yields pairs of (token_kind, span).\nBecause we have already defined a method to get the TokenKind of a LogosToken, these pairs are easy to convert to our Tokens.\nThe rest of the iterator implementation is similar to the CustomLexer one: running our rules is now replaced with calling the generated lexer, we stick an extra EOF token at the end, done.4\nWe can now quickly toggle between either lexer by defining the newly freed type name Lexer as an alias for the lexer we currently want:\n// In lexer/mod.rs\n\npub type Lexer&lt;'input&gt; = LogosLexer&lt;'input&gt;;\n// pub type Lexer&lt;'input&gt; = CustomLexer&lt;'input&gt;;\n\nThis should get us back to working.\nThe unknown_input and the token_spans test will fail, because logos does not aggregate consecutive unknown tokens, but everything else should work.\nTime to see if using logos makes a difference.\nLet's run the benchmark again, with the alias set as above:\nlexer/function          time:   [1.7565 us 1.7922 us 1.8295 us]\n                        thrpt:  [123.54 MiB/s 126.11 MiB/s 128.67 MiB/s]\n                 change:\n                        time:   [-82.441% -81.851% -81.304%] \n                                (p = 0.00 &lt; 0.05)\n                        thrpt:  [+434.87% +451.00% +469.50%]\n                        Performance has improved.\n\nlexer/struct            time:   [601.18 ns 609.49 ns 618.23 ns]\n                        thrpt:  [53.990 MiB/s 54.765 MiB/s 55.522 MiB/s]\n                 change:\n                        time:   [-76.353% -75.657% -74.984%] \n                                (p = 0.00 &lt; 0.05)\n                        thrpt:  [+299.74% +310.80% +322.89%]\n                        Performance has improved.\n\nparser/file             time:   [15.714 us 15.944 us 16.230 us]\n                        thrpt:  [20.977 MiB/s 21.354 MiB/s 21.667 MiB/s]\n                 change:\n                        time:   [-44.596% -41.849% -38.840%] \n                                (p = 0.00 &lt; 0.05)\n                        thrpt:  [+63.505% +71.965% +80.493%]\n\nThat's a 3x to 4.5x improvement for the lexer!\nInterestingly, function definitions still have about twice as much throughput as struct definitions.\nOur parser also got a nice boost, though the improvement is noticeably smaller.\nI did not aim for efficiency in this post, but rather understandability, and it's showing a bit.\nWe still see, however, the parse time being almost cut in half, even though we didn't make a single change to the parser.\nThis means that indeed the lexer was slowing us down previously, and is not anymore when using the lexer generated by logos.\nBecause you can do whatever you can think of in the LogosLexer wrapper that we defined, logos is a very viable choice to use under the hood of your hand-written parser implementation.\n🔗Terms and Conditions\nThere are a lot of parsing techniques, parser generators and just language-related concepts out there, and if you're now continuing on your own language adventures you'll surely come across many of them.\nIf you're looking for something specific, or maybe just so you've heard these names before and have a rough idea what they mean, here's a small list of things you might encounter:\n\n\nThe most general description of a language is a grammar. \nBecause \"literally any grammar\" is quite a lot, and definitely includes languages that are really hard to handle algorithmically, the first subset of languages we often restrict ourselves to is the class of the context-free grammars (CFGs). \nThese consist of non-terminal symbols that represent things in your language like Expr or Type, with rules how to transform them into sequences of other non-terminals or terminals. \nA terminal defines the concrete syntax of something, like an identifier or a semicolon ;. \nGrammar rules for CFGs are usually written down in some version of EBNF, but you'll probably be able to read most notations that follow a Thing -&gt; Some Combination \"of\" OtherThings+ \";\" notation.\nMany notations include some features from regular expressions to be more concise.\nOur struct definitions, for example, would look like StructDefn -&gt; \"struct\" Type \"{\" (Member \",\")* Member? \"}\".\n\n\nMoving to parsers, you will probably see LL(k) and LR(k) parsers or parser generators.\nLL parsers work very much in a similar way to our hand-written parser, but use a more general mechanism to determine which language element needs to be parsed next (compared to us hard-coding this for, e.g., function and struct declarations).\nLR parsers are a kind of bottom-up parser and work very differently.\nThey have a stack onto which they push terminal symbols, and when they've seen enough terminals to put together a full grammar rule they apply the rule \"in reverse\", pop all the terminals and replace them with the non-terminal on the left-hand side of the rule.\nFor both LL(k) and LR(k) parsers, the k is the number of tokens they are allowed to peek.\nIn our case, k is 1 - we only ever look at the very next token after the current.\nLanguages that can be parsed with LL(k) and LR(k) are a subset of the languages that you can express with CFGs, so your grammar must be unambiguous with k tokens of look-ahead when you want to use one of these parsers.\nLL(k) is a subset of LR(k), but only if the k is the same.\nIn practice, k is often 1 for generators as well.\n\n\nWhile LL parsers are mostly used as-is, for LR parsers people have developed several \"restricted\" versions that allow more efficient parsers, but can handle less languages than full LR.\nThe first level are LALR(k) parsers.\nSLR(k) parsers accept an even smaller set of languages.\n\n\nParsing expression grammars, or PEGs, are a different formalism that look a lot like CFGs, but add some requirements on how to parse grammars that would otherwise be ambiguous.\nThey have some fun quirks, are otherwise fine to use, but are about as good or bad at parsing expressions than other parser generators. There's some Rust ones on the list if you wanna try one out.\n\n\n🔗A Note on Error Handling\nAs we have written it now, our parser will panic when it encounters something it doesn't understand.\nThis is something all of us do from time to time, and there's no need to be ashamed about it.\nLearning something new is hard, and if you've made it through this entire post as a beginner, then you have pushed the boundaries of your comfort zone more than enough for a day, so give yourselves some well-earned rest and maybe have some fun playing around with what we have made.\nTo wrap this back around to parsing; a \"real\" parser of course can't just crash on error.\nIf the parser is for a compiler, for which invalid input programs are useless, it may stop parsing, but it shouldn't just die.\nConsidering the user experience of using our parser is also important to consider.\nWe are all spoiled by Rust's tooling, which we will not be able to \"just\" / quickly imitate.\nBut some kind of user-facing errors are a must for any parser, and you should always strive to give the best feedback you can when something fails.\nFor our parser, this post is already very long and I don't want to shove an even more overwhelming amount of information down you people's throats.\nIf this is received well, adapting our parser to handle errors could be a nice topic for a follow-up article.\nUntil then, try not to panic when you're hitting a wall on your language development journey.\nIf you do get stuck somewhere, remember that there is always someone around in the community that can and will be happy to help you.\nAnd instead of banging your head against that wall, maybe go outside, look at some real trees, and ponder why they are upside down.\n\n1\nIn Rust, this is somewhat confusing, because most expressions can also be statements. For example, you can break a value from a loop. ↩︎\n\n2\nWe will not add binary left- and right-shift operators (&lt;&lt; and &gt;&gt;) in this post, but if we did they'd be another source of ambiguity here. ↩︎\n\n3\nBe careful for which character sequences you introduce combined lexer tokens. Equality operators are usually fine, but for some character combinations munching them maximally may clash with other viable implementations. See the \"Drawbacks\" section of the Wikipedia article for some examples. ↩︎\n\n4\nI just stuck in (0..0) as the span of the EOF token, mostly because we don't actually use that span anywhere and I couldn't be bothered. Since we have access to all previous spans, it is also not difficult to track the end of the last span and then go from there. Take that as an exercise for the reader, if you want. ↩︎\n\n","id":"https://domenicquirl.github.io/blog/parsing-basics/","title":"Where to Start Hand-Writing a Parser (in Rust)"},"https://domenicquirl.github.io/blog/serde-handler/":{"body":"Aka \"I Just Want a Nice Request API\" or a story about why it's sometimes difficult to have your cake and eat it too.\n\nWe all need APIs.\nThey're everywhere and what would we do if there wasn't an interface to our favourite library, the ability to separate concerns and, most importantly, a way to get a cow to tell us a joke in the terminal via  curl?\nAnd recently, I was working on a crate wrapping a communication protocol that we use at work.\nI'd gotten everything set up nicely, implemented our own message flow on top and the only thing missing that I wanted to provide with the library was a nice abstraction for request-response endpoints to handle their requests.\nSee, while the protocol defines a Message datatype, it's not very nice to work with what basically amounts to a bag of bytes when implementing the API of a particular service.\nIt is inconvenient and cumbersome to write out the same code for checking a Message's format at the protocol level, deserializing the Message into something more useful that the service understands, handling it and then serializing the response and constructing a protocol-conformant response in every service that wants to use the crate.\nNot only is this repetitive and error prone, it forces the user of the library to think at a lower level conceptually than they would want to: instead of thinking about their service and its API, they have to think about the transport mechanism and message frames.\nHence, I set out to provide a nice interface that would allow a consumer of the library to define their API on a logical level.\nLittle did I know that what started with this simple, straightforward ambition would become a longer journey through serde and its lifetimes, axum routers, type erasure and being slapped in the face by compiler errors1\nIn this post, I'll take a step back at the end of this implementation zig-zag and retrace my steps, trying to show where and why things can become complicated, what the compiler may be trying to tell you, and how you can have your cake and eat it to.\n🔗About This Post\nThis post is an (or, well, several) attempt(s) at writing a convenient request-response API. \nIt discusses some of the intricacies involved in the quest for low overhead request processing, in particular why zero-copy deserialization of requests makes things more difficult. \nTo deal with Rust's lack of collections over generic types (like a Vec of handlers that have different types), we will erase not just types but probably some of our brain cells as well as we try to figure out which type can be referred to from where and why they hell the compiler thinks it's ambiguous again?!?\nWhile this post was triggered by my attempt to implement message routing for a particular format, it is not about a particular message format. \nI want the post to focus on the complexity of implementing handlers independently of the protocol in use.\nIt is also not really an explanation of how axum is able to magically pass complex types to your web handlers. \nWe'll briefly come across where this happens in axum, but we'll be more concerned about how axum can accept and manage all these methods with different parameters as routes than how those parameters end up in the correct place at runtime. \nIf you do want to read up some more on axum's \"magic handlers\", check out this post by Bernard Kolobara for an explanation and @alexpusch's rust-magic-function-params example for a simplified version of the traits involved in making this happen.\n\n🔗Blog Repository\nThe example code in this article is publicly available at https://github.com/domenicquirl/blog/tree/master/serde-handler.\nThe library crate there contains a submodule for each attempt and a specific attempt can be compiled with cargo check --features &lt;attempt&gt;, where &lt;attempt&gt; is given below for each variation.\nFor attempts where the library code compiles, there will also be an example that either demonstrates the code is working or shows issues that arise when trying to use it.\nTo run an example, run cargo run --example &lt;attempt&gt; --features &lt;attempt&gt;.2\n\n🔗The Setup\nTo avoid getting side-tracked by the underlying protocol, let's just say we have a few services, some generic Requester type for sending protocol requests to these services from clients, and a complimentary Responder type for receiving and answering requests from a Requester (conveniently, this also means I can cheat and not actually use any protocol for the examples).\nOur basic interface thus looks like this:\npub struct Requester;\npub struct Responder;\n\nimpl Requester {\n    pub fn send_request(\n        &amp;self, \n        request: Message, \n        to_service: &amp;str\n    ) -&gt; Result&lt;()&gt;;\n    pub fn recv_response(&amp;self) -&gt; Result&lt;Message&gt;;\n}\n\nimpl Responder {\n    pub fn next_request(&amp;self) -&gt; Result&lt;Message&gt;;\n    pub fn send_response(&amp;self, message: Message) -&gt; Result&lt;()&gt;;\n}\n\nWe can send requests and receive responses in the underlying Message format from the protocol on one side, and receive those requests and send responses on the other.\nRight now, both sides of the communication effectively do the same thing - except that the Requester has to specify whom to request from -, but we will add to their functionality over the course of this post.\nNext, we want to \"automate\" the conversions to and from Message to whatever to_service actually expects the request to look like and what it produces as a response.\nLet's start by tying together those two types (the request and the response) with a trait:\npub trait Api { \n    /// The request body.\n    type Request;\n\n    /// The data returned to answer a `Request`.\n    type Reply;\n}\n\nFor us, Request is always going to be some form of the implementing type.\nSo, for example, we could have a struct FooRequest representing a request to the foo_service.\nIf the foo_service returns a String as the reply to a FooRequest, we would represent that as\nimpl Api for FooRequest {\n    type Request = FooRequest;\n    type Reply = String;\n}\n\nThis already allows us to write a much nicer interface for our Requester.\nFor the purpose of this post and the examples, we'll use serde_json to serialize and deserialize our Rust request and response types to and from bytes:3\nimpl Requester {\n    pub fn request&lt;A: Api&gt;(&amp;self, request: A::Request, for_service: &amp;str) -&gt; Result&lt;A::Reply&gt;\n    where\n        A::Request: serde::Serialize,\n        A::Reply: serde::DeserializeOwned,\n    {\n        let data = serde_json::to_vec_pretty(&amp;request)\n            .map_err(|e| format!(\"Serialize error: {e}\"))?;\n        let request = Message::from(data);\n        self.send_request(request, for_service)\n            .map_err(|e| format!(\"Failed to send request: {e}\"))?;\n        let response = self\n            .recv_response()\n            .map_err(|e| format!(\"Error receiving response: {e}\"))?;\n        serde_json::from_slice(&amp;response.data())\n            .map_err(|e| format!(\"Deserialize error: {e}\"))\n    }\n}\n\nAs a bonus, we can utilize the fact that we are now dealing with FooRequests instead of Messages, which we know is the request type of service foo_service, to automatically figure out that the request needs to be routed to foo_service in the Requester:\npub trait Api { \n    /// The service whose API is extended with this implementation.\n    ///\n    /// `Request`s of the implementing type will be sent to this service.\n    const SERVICE: &amp;'static str;\n\n    /// The request body.\n    type Request;\n\n    /// The data returned to answer a `Request`.\n    type Reply;\n}\n\nimpl Requester {\n    pub fn request&lt;A: Api&gt;(&amp;self, request: A::Request) -&gt; Result&lt;A::Reply&gt;\n    where\n        A::Request: serde::Serialize,\n        A::Reply: serde::DeserializeOwned,\n    {\n        let data = serde_json::to_vec_pretty(&amp;request)\n            .map_err(|e| format!(\"Serialize error: {e}\"))?;\n        let request = Message::from(data);\n        // Use `A::SERVICE` to route to the correct receipient\n        //                         vvvvvvvvvv\n        self.send_request(request, A::SERVICE)\n            .map_err(|e| format!(\"Failed to send request: {e}\"))?;\n        let response = self\n            .recv_response()\n            .map_err(|e| format!(\"Error receiving response: {e}\"))?;\n        serde_json::from_slice(&amp;response.data())\n            .map_err(|e| format!(\"Deserialize error: {e}\"))\n    }\n}\n\nLook ma, no for_service anymore!\nHowever, we're missing a counterpart on the Responder side.\nWe can implement a similar workflow to the Requester by running the same steps in reverse, in a loop so the Responder fetches and responds to one request after the other.\nInstead of the name of the service that takes the request (which, on the service's side, is just the Requester itself), our endpoint takes the logical message handler.\nThat is, you can pass a function that takes an Api::Request and returns an Api::Reply and the Responder will continuously feed it with new requests that it has already decoded and take care of serializing and wrapping the Reply as well:4\nimpl Responder {\n    /// Perpetually waits for incoming requests on `self` and \n    /// handles them with the given `handler`, sending back the \n    /// computed reply.\n    pub fn serve_forever&lt;A: Api, H&gt;(self, mut handler: H) -&gt; Result&lt;()&gt;\n    where\n        H: FnMut(A::Request) -&gt; A::Reply,\n        A::Request: serde::DeserializeOwned,\n        A::Reply: serde::Serialize,\n    {\n        loop {\n            let request = self.next_request()?;\n            let request: A::Request = \n                serde_json::from_slice(&amp;request.data())\n                    .map_err(|e| format!(\"Deserialize error: {e}\"))?;\n            let reply = handler(request);\n            let data = serde_json::to_vec_pretty(&amp;reply)\n                .map_err(|e| format!(\"Serialize error: {e}\"))?;\n            let response = Message::from(data);\n            self.send_response(response)?;\n        }\n    }\n}\n\nThis code compiles, which you can verify by cargo checking the code in the repo with the start feature, and this post could simply end here.\nHowever.\n🔗The Problem: Zero-Copy Deserialization\nAs it is written above, on the service side our Responder API forces the request data to be copied into the logical A::Request type.\nWhen we say let request: A::Request = serde_json::from_slice(x), serde_json will recursively construct whatever is inside A::Request and the request type itself from the JSON object represented by the bytes in x by copying those bytes into a new, owned Rust type.\nThis can be, for example, a u32 or a String, but not a &amp;u32 or a &amp;str, since those are references, not owned data.\nWe can see the requirement that we can deserialize into an owned Request in the where bounds of serve_forever, where we ask for A::Request: serde::DeserializeOwned.\n🔗Aside: serde Lifetimes\nMost of the time, we all probably primarily use serde by deriving Serialize and / or Deserialize for our types so they work with whatever other library we want to use that implements or uses a data format (such as serde_json for JSON or a webserver crate that uses serde_json internally to help you build a JSON Web API).\nIf that is the case for you too, you might not have come across DeserializeOwned before.\nBut the derive macro for the Deserialize trait actually hides the fact that the trait has a lifetime: the actual definition of Deserialize is trait Deserialize&lt;'de&gt;: Sized.5\nThe serde documentation contains its own section about what this lifetime means and what it is for.\nFor our purposes, the most important feature that the 'de lifetime enables is zero-copy deserialization.\n\"Zero-copy\" refers to the fact that, as opposed to our current serve_forever implementation, a request can be deserialized into a type that holds a reference into the request instead of copying everything over into the struct.\nConsider a service which provides an API to convert some text to uppercase.\nWith our current code, the request type looks like this:\n#[derive(serde::Deserialize)]\nstruct UppercaseRequest {\n    input: String\n}\n\nWhere input is an owned String.\nserde, however, also supports deriving Deserialize for a struct like this:\n#[derive(serde::Deserialize)]\nstruct UppercaseRequest&lt;'input&gt; {\n    input: &amp;'input str,\n}\n\nWhere input is a reference to the text stored in the request JSON: \n{ \n    \"input\": \"Foo\" \n    //        ^^^\n    //         |\n    //         -- input from UppercaseRequest\n}\n\nThe serde derive will make UppercaseRequest&lt;'input&gt; (with the lifetime) implement Deserialize&lt;'input&gt;, which means it's possible to deserialize some data that lives at least as long as some lifetime 'a into an UppercaseRequest&lt;'a&gt; of the same lifetime (provided that the data is a string, of course).\nFor structs without a lifetime (like the first UppercaseRequest where input is a String), Deserialize&lt;'de&gt; will be implemented for any lifetime 'de, because all data in the struct is owned and you can use the Rust type independently of the input buffer of the request once deserialized.\nCoincidentally, this is exactly what our current DeserializeOwned bound requires of the request type: it is equivalent to the bound A::Request: for&lt;'de&gt; Deserialize&lt;'de&gt;, which is the Rust syntax for \"no matter the lifetime 'de of the input, this type implements Deserialize with that lifetime (which means it can be deserialized from that input)\".\nBut copying every single request is a lot of work, so could we support zero-copy deserialization in our API as well?\n🔗Let's Try to be Zero-Copy!\nWe'll need to change the bound on serve_forever away from DeserializeOwned to Deserialize&lt;'de&gt; with a lifetime.\nBut... what lifetime? Where does it come from?\nThe request is deserialized inside serve_forever so we can pass it to the handler, so the lifetime of the input buffer and the lifetime of the Rust request object are both some subset of the current function.\nThat's not something we can really explicitly refer to,6 so maybe this means serve_forever just has to be generic over 'de and the compiler will figure out what lifetime that represents?\n/// Perpetually waits for incoming requests on `self` and \n/// handles them with the given `handler`, sending back the \n/// computed reply.\npub fn serve_forever&lt;'de, A: Api, H&gt;(self, mut handler: H) -&gt; Result&lt;()&gt;\nwhere\n    H: FnMut(A::Request) -&gt; A::Reply,\n    A::Request: Deserialize&lt;'de&gt;,\n    A::Reply: Serialize,\n{\n    loop {\n        let request = self.next_request()?;\n        let request: A::Request = \n            serde_json::from_slice(&amp;request.data())\n                .map_err(|e| format!(\"Deserialize error: {e}\"))?;\n        let reply = handler(request);\n        let data = serde_json::to_vec_pretty(&amp;reply)\n            .map_err(|e| format!(\"Serialize error: {e}\"))?;\n        let response = Message::from(data);\n        self.send_response(response)?;\n    }\n}\n\nIf we try to compile this (which you can try with --features zero_copy1 in the repo), we get an error:\nerror[E0597]: `data` does not live long enough\n  --&gt; src\\zero_copy1.rs:60:40\n   |\n51 |     pub fn serve_forever&lt;'de, A: Api, H&gt;(self, mut handler: H) -&gt; Result&lt;()&gt;\n   |                          --- lifetime `'de` defined here\n...\n58 |             let data = self.next_request()?.data();\n   |                 ---- binding `data` declared here\n59 |             let data = serde_json::from_slice(&amp;data)\n   |                 ------------------------------^^^^^-\n   |                 |                             |\n   |                 |                             borrowed value \n   |                 |                             does not \n   |                 |                             live long enough\n   |                 argument requires that `data` is borrowed \n   |                 for `'de`\n...\n66 |         }\n   |         - `data` dropped here while still borrowed\n\nSeems like the compiler is not happy about us leaving the 'de lifetime up in the air.\nAs there is nowhere else that takes a lifetime, we might try to use the for&lt;'de&gt; syntax from above to summon one out of thin air inside the where bound for Deserialize&lt;'de&gt; instead of the function generic parameters, but as we've learned this just means DeserializedOwned, which we had before.\nSo while it compiles, the zero_copy2 example in the repo shows that we can't actually invoke serve_forever with that bound for our borrowing UppercaseRequest:\nerror: implementation of `Deserialize` is not general enough\n  --&gt; examples\\zero_copy2.rs:28:14\n   |\n28 |             .serve_forever::&lt;UppercaseRequest, _&gt;(|request| \n   |              ^^^^^^^^^^^^^ implementation of `Deserialize` is not \n   |                            general enough\n   |\n   = note: `UppercaseRequest&lt;'_&gt;` must implement `Deserialize&lt;'0&gt;`, \n           for any lifetime `'0`...\n   = note: ...but `UppercaseRequest&lt;'_&gt;` actually implements \n           `Deserialize&lt;'1&gt;`, for some specific lifetime `'1`\n\nDon't be confused by the lifetime names '0 and '1 that the compiler uses.\nThe important information is that we \"must implement Deserialize for any lifetime\" (because we said so by requesting for&lt;'de&gt; Deserialize&lt;'de&gt;, just that the compiler names 'de as '0 instead), but UppercaseRequest contains a lifetime (the input reference) and so we can only Deserialize for this \"specific lifetime\" (which the compiler calls '1).\n🔗Going Higher-Order\nThis doesn't work.\nWe won't get any further without a way to tie the Deserialize lifetime 'de to the (potential) lifetime in our request type, so we need a way to pass 'de through to UppercaseRequest.\nOne way to do this would be to make the Api trait generic over a lifetime as well, like Deserialize is:\n// Now with lifetime!\n//            vvv\npub trait Api&lt;'de&gt; {\n    /// The service whose API is extended with this implementation.\n    ///\n    /// `Request`s of the implementing type will be sent to this \n    /// service.\n    const SERVICE: &amp;'static str;\n\n    /// The request body.\n    type Request: Serialize + Deserialize&lt;'de&gt;;\n    //                                    ^^^\n    //       can now mention the same lifetime\n\n    /// The data returned to answer a `Request`.\n    type Reply: Serialize + DeserializeOwned;\n}\n\nNote that we've also moved the Serialize and Deserialize bounds from the respective functions into the trait definition so both 'des are in the same place.\nBut, since we have them now, let's use generic associated types (GATs) instead!\nWith GATs, we can move the lifetime for the requests onto the Request associated type itself: \npub trait Api {\n    /// The service whose API is extended with this implementation.\n    ///\n    /// `Request`s of the implementing type will be sent to this \n    /// service.\n    const SERVICE: &amp;'static str;\n\n    /// The request body.\n    type Request&lt;'de&gt;: Serialize + Deserialize&lt;'de&gt;;\n\n    /// The data returned to answer a `Request`.\n    type Reply: Serialize + DeserializeOwned;\n}\n\nWith either version, there is now a lifetime associated with Api that is passed on to the Deserialize bound on the Request type.\nTherefore, we now have access to 'de when implementing Api for our UppercaseRequest and can pass it on to our type:\nimpl Api for UppercaseRequest&lt;'_&gt; {\n    type Request&lt;'de&gt; = UppercaseRequest&lt;'de&gt;;\n    type Reply = String;\n\n    const SERVICE: &amp;'static str = TEXT_SERVICE;\n}\n\nWhich, combined with the trait definition, means that we have established a \"lifetime chain\" UppercaseRequest&lt;'_&gt;::Request&lt;'de&gt; = UppercaseRequest&lt;'de&gt;: Deserialize&lt;'de&gt;.\nWhen updating serve_forever, we have to concern ourselves with the type of the handler parameter:\nSo far, this has been H: FnMut(A::Request) -&gt; A::Reply - a function from requests to replies.\nThis is still what we want, but now A::Request is actually A::Request&lt;'de&gt;, so we've got the inverse problem as before: now we can name a lifetime, but that also means we have to pass one and need to figure out which is correct.\nThe simplest possible solution would be to once again defer to the compiler and write H: FnMut(A::Request&lt;'_&gt;) -&gt; A::Reply.\nSurprisingly, this time it actually works!\nTo the compiler, '_ means \"any lifetime\" (as opposed to \"some specific lifetime '1\"), so the above is equivalent to H: for&lt;'de&gt; FnMut(A::Request&lt;'de&gt;) -&gt; A::Reply: no matter 'de, if I have a request with that lifetime then I can pass it to the handler and it will compute a Reply.\nThis time, this is what we want and everything works and you can send as many UppercaseRequests as your heart desires by running the zero_copy3 example and entering evil lowercase text on the terminal that must be converted to uppercase glory.\n🔗Giving Our Bound A Name\nFor our single serve_forever function, it's fine to write out the rather convoluted bound for H and be done with it.\nIf there were multiple functions that accepted such a type, it's probably better to define a name for it in one place so you can refer to just the name wherever you might need it.\nWe'll define two new traits, HandlerOn&lt;'req&gt; and Handler, that represent handlers that can handle a request with a specific lifetime 'req and requests for any lifetime, respectively:\n/// A function that can handle [`A::Request&lt;'de&gt;`](Api::Request) \n/// for `'de == 'req`.\npub trait HandlerOn&lt;'req, A: Api&gt;: \n    FnMut(A::Request&lt;'req&gt;) -&gt; A::Reply {}\nimpl&lt;'req, A: Api, F&gt; HandlerOn&lt;'req, A&gt; for F \n    where F: FnMut(A::Request&lt;'req&gt;) -&gt; A::Reply {}\n\n/// A function that can handle [`A::Request&lt;'de&gt;`](Api::Request) \n/// for any `'de`.\npub trait Handler&lt;A: Api&gt;: for&lt;'req&gt; HandlerOn&lt;'req, A&gt; {}\nimpl&lt;A: Api, F: for&lt;'req&gt; HandlerOn&lt;'req, A&gt;&gt; Handler&lt;A&gt; for F {}\n\nThe definition of serve_forever now becomes just\npub fn serve_forever&lt;A: Api, H: Handler&lt;A&gt;&gt;(self, mut handler: H) -&gt; Result&lt;()&gt;;\n\nTo verify that this indeed still runs as before, run example zero_copy4 in the repository.\nYou can read more on this entire construction in this URLO thread if you want to.\n🔗The Other Problem: Many Different Requests\nWe've succeeded in writing an API for both clients and services that allows them to implement an API purely by working with a logical Rust request and response data structure.\nSo that's it! Time to head home.\nUnless, of course, you want your services to serve more than a single kind of requests.\nCurrently, you can call serve_forever on a Responder and, well, serve one implementation of Api... forever. \nBut what if we want our text service to be able to both convert text to uppercase as well as to lowercase? \nAnd maybe later we'll add an API for trimming whitespace, too!\nserve_forever can only handle (with the given handler) one particular A: Api, though, so what do?\nFor this example, all requests go from text to text, so we could work around the issue by defining an\nenum TextRequest&lt;'a&gt; {\n    UppercaseRequest(&amp;'a str),\n    LowercaseRequest(&amp;'a str),\n    TrimRequest(&amp;'a str),\n}\n\nimplementing Api for it and providing a handler that takes a TextRequest and returns a String.\nBut what if we have one API for strings and one for numbers? \nOr, perhaps more realistically, if all our APIs take some data structure specific to this API as their input that we would like to represent as Rust structs, and also return similarly different data?\nInstead of falling back on two big enum Request and enum Responses where we can't even guarantee that the correct Response variant is sent for a given Request, let's try to come up with a library API that supports multiple types of requests.\nPerhaps we can look at some other frameworks for inspiration?\nSurely, we can't be the first developers to ever want to route different requests to different handlers... wait, isn't that what like every single web framework does?\nLet's look at axum as an example. \nOn a high level, it provides a Router type that you can use to build up different web endpoints for different URLs and HTTP methods like so (taking from their documentation):\nlet app = Router::new()\n    .route(\"/\", get(root))\n    .route(\"/foo\", get(get_foo).post(post_foo))\n    .route(\"/foo/bar\", get(foo_bar));\n\nwhere get_foo etc. are async fns.\nThe Router::route method takes a MethodRouter as its second argument, which is basically a static HashMap that can hold one handler per HTTP method (GET, POST, etc.).\nThis makes sense for a web framework, but we'll only consider one handler per route for this post.\nTo start with, in addition to the SERVICE name we'll also give each Api its own unique name to differentiate the APIs implemented by a service:\npub trait Api {\n    /// The service whose API is extended with this implementation.\n    ///\n    /// `Request`s of the implementing type will be sent to this \n    /// service.\n    const SERVICE: &amp;'static str;\n\n    /// The unique name of the API that identifies the kind of \n    /// `Request` to the `SERVICE`.\n    const NAME: &amp;'static str;\n\n    /// The request body.\n    type Request&lt;'de&gt;: Serialize + Deserialize&lt;'de&gt;;\n\n    /// The data returned to answer a `Request`.\n    type Reply: Serialize + DeserializeOwned;\n}\n\nWe'll send the name as part of the underlying protocol Message.7\nNext, we want to have our own router type that maps the API names of a service to their correct handlers.\npub struct ApiRouter {\n    handlers: HashMap&lt;&amp;'static str, dyn Handler&lt;A&gt;&gt;,\n}\n\nWe can then provide APIs to get an ApiRouter, add new handlers and run our serve_forever loop, except now we extract the API name from the request and look up the corresponding handler to invoke.\nimpl ApiRouter {\n    /// Create a new `Router`.\n    ///\n    /// Unless you add additional routes via [`register_handler`], \n    /// this will respond with `InvalidRequest` to all requests.\n    pub fn new() -&gt; Self {\n        Self { handlers: HashMap::new() }\n    }\n\n    /// Add a new handler for API requests of type `A`.\n    ///\n    /// This will make the router route all requests of type `A` to \n    /// the given `handler` if the request data can be successfully \n    /// deserialized into [`A::Request`]. The `handler` may be a \n    /// function name or a closure.\n    pub fn register_handler&lt;A: Api, H: Handler&lt;A&gt;&gt;(\n        mut self, \n        handler: H\n    ) -&gt; Self\n    where\n        H: 'static,\n    {\n        self.handlers.insert(A::NAME, handler);\n        self\n    }\n\n    /// Perpetually waits for incoming requests on `socket` and \n    /// handles them with the handler registered for their route, \n    /// sending back the computed reply.\n    pub fn serve_on(mut self, socket: Responder) -&gt; Result&lt;()&gt; {\n        loop {\n            let Message { api_name, data } = socket.next_request()?;\n\n            let handler = self\n                .handlers\n                .get_mut(api_name.as_str())\n                .ok_or_else(|| {\n                    format!(\"No handler for '{api_name}'\")\n                })?;\n            let reply = (handler.0)(&amp;data)?;\n            let response = Message {\n                api_name,\n                data: reply,\n            };\n            socket.send_response(response)?;\n        }\n    }\n}\n\nExcept. \nThis doesn't compile.\nWe're storing dyn Handlers in the router so we don't have to differentiate between the different types of different handler functions, but Handler is still generic over A, so the compiler (rightfully) complains:\nerror[E0412]: cannot find type `A` in this scope\n  --&gt; src\\multiple_handlers1.rs:27:49\n   |\n27 |     handlers: HashMap&lt;&amp;'static str, dyn Handler&lt;A&gt;&gt;,\n   |                                                 ^ not found in \n   |                                                   this scope\n   |\nhelp: you might be missing a type parameter\n   |\n26 | pub struct ApiRouter&lt;A&gt; {\n   |                     +++\n\nIt tries to help us by suggesting we make the router generic as well, but we don't want that:\nthen a service could only have an ApiRouter&lt;SomeRequest&gt; for a fixed request type SomeRequest - exactly what we're trying to fix right now!\nHow can we get rid of Handler's generic parameter... maybe we can move the A inside the trait, as an associated type?8\nThat would look like this:\n/// A function that can handle [`A::Request&lt;'de&gt;`](Api::Request) \n/// for `'de == 'req`.\npub trait HandlerOn&lt;'req&gt;: \n    FnMut(Self::Api::Request&lt;'req&gt;) -&gt; Self::Api::Reply\n{\n    type Api: Api;\n}\nimpl&lt;'req, A: Api, F&gt; HandlerOn&lt;'req&gt; for F \n    where F: FnMut(A::Request&lt;'req&gt;) -&gt; A::Reply \n{\n    type Api = A;\n}\n\n/// A function that can handle [`A::Request&lt;'de&gt;`](Api::Request) \n/// for any `'de`.\npub trait Handler: for&lt;'req&gt; HandlerOn&lt;'req&gt; {}\nimpl&lt;F: for&lt;'req&gt; HandlerOn&lt;'req&gt;&gt; Handler for F {}\n\nWe're saying we want the handler to be a function that takes request of the Api associated type, which is the A: Api in the first impl.\nThe compiler isn't very happy (feature multiple_handlers3):\nerror[E0223]: ambiguous associated type\n  --&gt; src\\multiple_handlers2.rs:77:34\n   |\n77 | pub trait HandlerOn&lt;'req&gt;: FnMut(Self::Api::Request&lt;'req&gt;) \n   |     -&gt; Self::Api::Reply {\n   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: if there were a trait named `Example` with associated type \n      `Request` implemented for `&lt;Self as HandlerOn&lt;'req&gt;&gt;::Api`, \n      you could use the fully-qualified path\n   |\n77 | pub trait HandlerOn&lt;'req&gt;: FnMut(&lt;&lt;Self as HandlerOn&lt;'req&gt;&gt;::Api as Example&gt;::Request) -&gt; Self::Api::Reply {\n   |                 \n\nBecause both Self and Self::Api may implement multiple traits, and any (or all) of these traits could have associated types named Api or Request, the compiler wants us to be specific and say that we mean the Api associated type from HandlerOn and the Request associated type from Api (which it doesn't know, so it gives us an arbitrary Example trait).\nFine, let's write what it says even though it is positively hideous (multiple_handlers2):\npub trait HandlerOn&lt;'req&gt;:\n    FnMut(&lt;Self::Api as Api&gt;::Request&lt;'req&gt;) -&gt; &lt;Self::Api as Api&gt;::Reply\n{\n    type Api: Api;\n}\n\nThat doesn't help, for multiple reasons.\nFirst of all, it is also ambiguous, just in a different way.\nImagine we have the following two Api implementations:\nstruct Api1;\nstruct Api2;\n\nimpl Api for Api1 {\n    type Request&lt;'de&gt; = String;\n    type Reply = String;\n}\n\nimpl Api for Api2 {\n    type Request&lt;'de&gt; = String;\n    type Reply = String;\n}\n\n// Should this implement `Handler&lt;Api = Api1&gt;` \n// or `Handler&lt;Api = Api2&gt;`?\nfn handler(request: String) -&gt; String { /* ... */ }\n\nHere, handler fits the description of FnMut(A::Request) -&gt; A::Reply for both Api1 and Api2, as their Request and Reply types are the same.\nBut if we change Handler and HandlerOn to use an associated type, we are forced to choose one single value for the implementation of HandlerOn for the fn handler.\nWe don't, which the compiler reports as\nerror[E0207]: the type parameter `A` is not constrained by the impl trait, \n              self type, or predicates\n  --&gt; src\\multiple_handlers2.rs:82:12\n   |\n82 | impl&lt;'req, A: Api, F&gt; HandlerOn&lt;'req&gt; for F \n   |            ^ unconstrained type parameter\n\nWe do mention A in the bounds of the implementation (where F: FnMut(A::Request&lt;'req&gt;) -&gt; A::Reply), but - as we've shown above - that's not enough to be able to uniquely infer what type A actually represents. \nIf you rustc --explain E0207 the error, the compiler will tell you the exact rules for what counts as \"constraining\" a generic parameter:\n\nAny type or const parameter of an `impl` must meet at least one of the\nfollowing criteria:\n\nit appears in the implementing type of the impl, e.g. impl&lt;T&gt; Foo&lt;T&gt;\nfor a trait impl, it appears in the implemented trait, e.g.\nimpl&lt;T&gt; SomeTrait&lt;T&gt; for Foo\nit is bound as an associated type, e.g. impl&lt;T, U&gt; SomeTrait for T where T: AnotherTrait&lt;AssocType=U&gt;\n\nAny unconstrained lifetime parameter of an impl is not supported if the\nlifetime parameter is used by an associated type.\n\nSo while we mention A in a where bound, we don't constrain anything to A itself, only to its Request and Reply types.\nThere's another problem as well: because we need these types to write the where bound, we need to go through the implementing type Self to get them.\nWe want a function that takes the Request type for the API it is a handler for (otherwise it wouldn't make sense), which is Self::Api::Request (same for Reply).\nHowever, this makes the Handler and HandlerOn traits no longer object safe, which means we cannot have a dyn Handler, which we wanted to store in our router (multiple_handlers4):\nerror[E0038]: the trait `Handler` cannot be made into an object\n  --&gt; src\\multiple_handlers4.rs:27:41\n   |\n27 |     handlers: HashMap&lt;&amp;'static str, Box&lt;dyn Handler&gt;&gt;,\n   |                                         ^^^^^^^^^^^ \n   |              `Handler` cannot be made into an object\n   |\nnote: for a trait to be \"object safe\" it needs to allow building a \n      vtable to allow the call to be resolvable dynamically; for more \n      information visit &lt;https://doc.rust-lang.org/reference/items/traits.html#object-safety&gt;\n  --&gt; src\\multiple_handlers4.rs:78:5\n   |\n78 | /     FnMut(\n79 | |     &lt;&lt;Self as HandlerOn&lt;'req&gt;&gt;::Api as Api&gt;::Request&lt;'req&gt;,\n80 | | ) -&gt; &lt;&lt;Self as HandlerOn&lt;'req&gt;&gt;::Api as Api&gt;::Reply\n   | |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   | |______|____________________________________________|\n   |        |...because it uses `Self` as a type parameter\n   |        |\n   |        ...because it uses `Self` as a type parameter\n...\n89 |   pub trait Handler: for&lt;'req&gt; HandlerOn&lt;'req&gt; {}\n   |             ------- this trait cannot be made into an object...\n\nEven if we could somehow magic the trait to still support having a dyn Handler, it wouldn't help because...\nerror[E0191]: the value of the associated type `Api` (from trait `HandlerOn`) \n              must be specified\n  --&gt; src\\multiple_handlers3.rs:27:45\n   |\n27 |     handlers: HashMap&lt;&amp;'static str, Box&lt;dyn Handler&gt;&gt;,\n   |                                             ^^^^^^^ \n   | help: specify the associated type: `Handler&lt;Api = Type&gt;`\n...\n78 |     type Api: Api;\n   |     ------------- `Api` defined here\n\nThat's right! \nAssociated types don't even solve our problem in the first place, because even when there is only one Api per Handler Rust requires us to name both.\nIt won't be enough to move the Api generic to somewhere else, we'll need to erase it completely.\n🔗Calling Upon The Dark Arts\nThe chances to figure this out on our own, on the fly, are fairly low.\nLet's instead turn back to our original inspiration for building the router, the axum web framework.\nThey're doing it, so they've got to know a way to achieve what we want.\nThe relationship between axum's diverse set of routing and handler types is quite complex, and reading the codebase is additionally complicated by its deep integration with the tower service framework.\nDue to the latter, conversions often involve an extra step to go through some type that implements a tower trait and you need to close the loop through the tower implementation back into axum code.\nIf you think a class diagram will help you to follow along, you can find one for at least the axum side of things in this reply on URLO.\nWhen you call .route on an axum::Router, the first thing that happens is actually that you will be delegated to PathRouter.\nThis is because axum routers additionally support several variations of fallback routes, so PathRouter is what implements the \"regular\" routing based on the URL paths (or API names, for us).\nThe PathRouter doesn't do anything special when you add a new route, it just figures out whether it already knows that route and either updates or inserts an Endpoint for the new route.\nLet's look at the MethodRouter that is added instead, since it seems to be the actual request handler and thus correspond most to our Handler trait.\nWhen we call axum::method_routing::get(our_handler), we end up in a macro that calls an axum function called on.\nThis constructs a new MethodRouter and delegates to it's on method which then delegates further to the internal fn on_endpoint.\nBut before that, a transformation happens: the actual our_handler function passed to get is converted into a type whose name includes \"boxed\" twice:\nself.on_endpoint(\n    filter,\n    MethodEndpoint::BoxedHandler(\n        // our `our_handler` function vvvvvv\n        BoxedIntoRoute::from_handler(handler)\n    ),\n)\n\non_endpoint itself then just stores the converted handler inside the MethodRouter.\nWhat exactly are those \"boxed\" types? \nWell, axum has an entire module of them and the constructor that is used here, BoxedIntoRoute::from_handler, as a very interesting signature:\npub(crate) struct BoxedIntoRoute&lt;S, B, E&gt;(\n    Box&lt;dyn ErasedIntoRoute&lt;S, B, E&gt;&gt;\n);\n\nimpl&lt;S, B&gt; BoxedIntoRoute&lt;S, B, Infallible&gt;\nwhere\n    S: Clone + Send + Sync + 'static,\n    B: Send + 'static,\n{\n    pub(crate) fn from_handler&lt;H, T&gt;(handler: H) -&gt; Self\n    where\n        H: Handler&lt;T, S, B&gt;,\n        T: 'static,\n        B: HttpBody,\n    {\n        Self(Box::new(MakeErasedHandler {\n            handler,\n            into_route: |handler, state| {\n                Route::new(Handler::with_state(handler, state))\n            }\n        }))\n    }\n}\n\nThere's a lot of generic parameters going on, but what's interesting for us is that, somehow, this function takes a Handler of type H (Handler in axum is what is implemented for async functions that can handle web requests like our_handler, so it's what actually corresponds to our own Handler) and returns a BoxedIntoRoute where H does not appear at all!\nAnd, again somehow, the trait ErasedIntoRoute (which also doesn't mention H) has a fn into_route that returns a Route&lt;B, E&gt; which also doesn't mention H but must end up calling the correct handler.\nThe technique that is used here is quite clever:\nThe actual type, MakeErasedHandler, is generic over H.\nIn fact, the handler is stored right there inside the struct! \nThe definition of MakeErasedHandler is\npub(crate) struct MakeErasedHandler&lt;H, S, B&gt; {\n    pub(crate) handler: H,\n    pub(crate) into_route: fn(H, S) -&gt; Route&lt;B&gt;,\n}\n\nHowever, by also storing the implementation of into_route as a function inside the struct, by pre-constructing this implementation in from_handler above, when the dyn ErasedIntoRoute is used later the code doesn't need to know about the type of H anymore.\nWe still need to find out where and how the call to the handler actually happens, though, so let's keep looking.\nWhen we check the implementation of Route::new, we are greeted by another \"boxed\" type:\npub struct Route&lt;B = Body, E = Infallible&gt;(\n    BoxCloneService&lt;Request&lt;B&gt;, Response, E&gt;\n);\n\nimpl&lt;B, E&gt; Route&lt;B, E&gt; {\n    pub(crate) fn new&lt;T&gt;(svc: T) -&gt; Self\n    where\n        T: Service&lt;Request&lt;B&gt;, Error = E&gt; + Clone + Send + 'static,\n        T::Response: IntoResponse + 'static,\n        T::Future: Send + 'static,\n    {\n        Self(BoxCloneService::new(\n            svc.map_response(IntoResponse::into_response),\n        ))\n    }\n}\n\nThis time, BoxCloneService comes not from axum but from tower, but they're using the same trick (just with one more layer of indirection):\nthe service is turned into a trait object so the T type disappears, and while they're at it T::Future is turned into a type-erased futures_util::future::BoxFuture as well, which is just a new name for Box&lt;dyn Future&gt;.\n🔗Back to Our Own Problems Handlers\nWhat we have learned (hopefully maybe) from all this type chasing is that we can erase generic type parameters by turning things into trait objects.\nThe thing is, we were already trying to do that, and failing!\nI'll spare you further increasingly desperate code snippets and their corresponding compiler errors, but believe me that it's simply not enough to turn our concrete Handler into a dyn Handler.\nNot as long as our handlers want to refer to a specific Request and Reply type.\nWe've missed the piece of code in axum that turns an async function with specific argument and return types (Rust types!) into a more handler for HTTP requests that returns HTTP responses.\nThat's because it isn't in any of the code files we've looked at so far.\nIt also doesn't appear in the class diagram that I linked above (or, well, only indirectly).\nBut it is how axum defines the interface for their handlers:\npub trait Handler&lt;T, S, B = Body&gt;: Clone + Send + Sized + 'static {\n    type Future: Future&lt;Output = Response&gt; + Send + 'static;\n\n    // Required method\n    fn call(self, req: Request&lt;B&gt;, state: S) -&gt; Self::Future;\n\n    // Cut: some provided methods\n}\n\nThe req: Request&lt;B&gt; here comes straight from the http crate, and the Response that is the Output of the returned Future is from http as well, axum just supplies a default for their type parameters.\nIf we look at how axum implements Handler for basically any async function (be warned, it's a macro), we'll see something that by now should seem familiar:\nimpl&lt;/* bunch of parameters */&gt; Handler&lt;/* the same, really */&gt; for F\nwhere\n    // `F` is a function\n    F: FnOnce(/* generics */) -&gt; Fut + Clone + Send + 'static,\n    // that returns a future\n    Fut: Future&lt;Output = Res&gt; + Send,\n    // whose result can be turned into an HTTP response\n    Res: IntoResponse,\n    // and whose inputs can be extracted from a request\n    /* generics */: FromRequest&lt;S, B, M&gt; + Send,\n{\n    type Future = Pin&lt;Box&lt;dyn Future&lt;Output = Response&gt; + Send&gt;&gt;;\n\n    fn call(self, req: Request&lt;B&gt;, state: S) -&gt; Self::Future {\n        Box::pin(async move {\n            // extract arguments to `F` from `req`\n            let (mut parts, body) = req.into_parts();\n            let state = &amp;state;\n\n            $(\n                let $ty = \n                    match $ty::from_request_parts(&amp;mut parts, state)\n                        .await \n                    {\n                        Ok(value) =&gt; value,\n                        Err(rejection) =&gt; {\n                            return rejection.into_response();\n                        }\n                    };\n            )*\n\n            let req = Request::from_parts(parts, body);\n\n            let $last = match $last::from_request(req, state).await {\n                Ok(value) =&gt; value,\n                Err(rejection) =&gt; return rejection.into_response(),\n            };\n\n            // call `F` is with the extracted arguments\n            let res = self($($ty,)* $last,).await;\n\n            // convert the result back into a `Response`\n            res.into_response()\n        })\n    }\n}\n\nCalling the handler with an HTTP request constructs a Future - a separate function - which\n\nextracts any arguments to the handler from the request,\ncalls the handler with those arguments, and\nconverts its response into an HTTP response.\n\nAnd the type of Future is Pin&lt;Box&lt;dyn Future&lt;Output = Response&gt;&gt; - a Future trait object that hides the type of F because it is wrapped in \"some future\" and returns a generic HTTP response.\nThe important insight here is when we need to do all of the type erasure and wrapping into closures / async functions: \nit needs to happen when the original type / function is still accessible to us.\nIt's not really about the trait object so much and more about the fact that, in the same place, we're able to\n\ntake a generic request\nconvert it to Rust types because we have access to the argument types of the function and their FromRequest implementations\ncall the actual function\nconvert the result back because we have access to the return type and its IntoResponse implementation\n\nI want to emphasize that, of these, only the function itself is a value.\nThe reason we can convert the arguments and the result is not because they are already in scope - they are not, they are extracted from the request and computed by the handler.\nInstead, what makes things work is that, at compile time, we can refer to the argument and result types and tell the compiler that \"we want to call their conversion methods please\".\n🔗So Let's Do It!\nWhat does this mean for us?\nWell, here's all we need to get us a type-erased handler that still converts everything correctly:\ntype BoxedRequestHandler = Box&lt;dyn FnMut(&amp;[u8]) -&gt; Result&lt;Vec&lt;u8&gt;&gt;&gt;;\nstruct BoxedHandler(BoxedRequestHandler);\n\nimpl BoxedHandler {\n    fn from_handler&lt;A: Api, H: Handler&lt;A&gt;&gt;(mut handler: H) -&gt; Self\n    where\n        H: 'static,\n    {\n        let handler = move |request_data: &amp;[u8]| -&gt; Result&lt;Vec&lt;u8&gt;&gt; {\n            let request: A::Request&lt;'_&gt; = \n                serde_json::from_slice(request_data)\n                    .map_err(|e| format!(\"Deserialize error: {e}\"))?;\n            let reply = handler(request);\n            let reply = serde_json::to_vec_pretty(&amp;reply)\n                .map_err(|e| format!(\"Serialize error: {e}\"))?;\n            Ok(reply)\n        };\n        Self(Box::new(handler))\n    }\n}\n\nLet's break it down again:\nBoxedHandler is a handler not for any specific API type(s), but that converts from bytes to bytes (&amp;[u8] in, Vec&lt;u8&gt; out).\nWe can construct a BoxedHandler for a concrete A: Api because from_handler knows what A is (since it's a generic parameter).\nThis means we can refer to the type A from within the constructed closure, which means we can convert to and from the correct request and response types.\nIn a way, we are taking the knowledge about A with us into the future, from when the BoxedHander is built to when we call the contained function, by having the compiler insert a call to the correct trait implementation when it generates the closure.\nYeah.\nLet that sink in.\nThe only other change we need to make is to register_handler, which needs to turn the given function into a BoxedHandler to store it:\npub struct ApiRouter {\n    handlers: HashMap&lt;&amp;'static str, BoxedHandler&gt;,\n}\n\nimpl ApiRouter {\n    /// Add a new handler for API requests of type `A`.\n    ///\n    /// This will make the router route all requests of type `A` to \n    /// the given `handler` if the request data can be successfully \n    /// deserialized into [`A::Request`](Api::Request). The `handler` \n    /// may be a function name or a closure.\n    pub fn register_handler&lt;A: Api, H: Handler&lt;A&gt;&gt;(\n        mut self, \n        handler: H\n    ) -&gt; Self\n    where\n        H: 'static,\n    {\n        self.handlers\n            .insert(A::NAME, BoxedHandler::from_handler(handler));\n        self\n    }\n}\n\nYou can try our router out by running the working example in the repository, where you will finally be able to have your one-liners converted to uppercase and lowercase and be trimmed by the same service.\nTime to rest and enjoy our success.\n🔗Bonus: More Errors I've Been Avoiding\nIf you've made it this far, congratulations!\nI hope your brain is still mostly intact and your head hasn't exploded.\nThere's one more version of the implementation in the repository, though, that demonstrates an error that one might run into if not copying and pasting the exact code from the this post / the working solution: missing_closure_type.\nIn the above code for constructing a BoxedHandler, I wrote out the type of the request_data parameter of the generic handler:\nlet handler = move |request_data: &amp;[u8]| -&gt; Result&lt;Vec&lt;u8&gt;&gt;\n\nThis may seem arbitrary or like it's only done to be more explicit in the example, but it's not.\nHere's what happens if you leave it to the compiler to infer the type of request_data:\nerror[E0308]: mismatched types\n   --&gt; src\\missing_closure_type.rs:119:14\n    |\n119 |         Self(Box::new(handler))\n    |              ^^^^^^^^^^^^^^^^^ \n    |              one type is more general than the other\n    |\n    = note: expected trait `for&lt;'a&gt; FnMut&lt;(&amp;'a [u8],)&gt;`\n               found trait `FnMut&lt;(&amp;[u8],)&gt;`\nnote: this closure does not fulfill the lifetime requirements\n   --&gt; src\\missing_closure_type.rs:111:23\n    |\n111 |         let handler = move |request_data| -&gt; Result&lt;Vec&lt;u8&gt;&gt; {\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: consider specifying the type of the closure parameters\n    |\n111 |         let handler = |request_data: &amp;_| {\n    |                       ~~~~~~~~~~~~~~~~~~\n\nerror: implementation of `FnOnce` is not general enough\n   --&gt; src\\missing_closure_type.rs:119:14\n    |\n119 |         Self(Box::new(handler))\n    |              ^^^^^^^^^^^^^^^^^ implementation of `FnOnce` \n    |                                is not general enough\n    |\n    = note: closure with signature \n            `fn(&amp;'2 [u8]) -&gt; std::result::Result&lt;Vec&lt;u8&gt;, std::string::String&gt;` \n            must implement `FnOnce&lt;(&amp;'1 [u8],)&gt;`, for any lifetime `'1`...\n    = note: ...but it actually implements `FnOnce&lt;(&amp;'2 [u8],)&gt;`, \n            for some specific lifetime `'2`\n\nIf you use an IDE with rust-analyzer, it will infer request_data to be of type &amp;[u8].\nEven the compiler infers handler to be of a type that implements FnMut&lt;(&amp;[u8],)&gt;.\nBut, apparently, the compiler also picks some concrete lifetime for the reference instead of \"any lifetime\", i.e., for&lt;'a&gt; FnMut&lt;(&amp;'a [u8],)&gt;.\nWe've seen this error already when we were working with Deserialize&lt;'de&gt;, we know what it means.\nBut I neither know why the compiler infers one over the other here, nor how I would explicitly specify that I want one or the other (aside from having a nameable lifetime in scope that the reference should use).\nIf you know more, please get in touch.\n\n1\nWhile I think some of the errors were some of the more cryptic ones I have seen so far, they still state fairly clearly what the problem is - if you know what they are talking about at all. Lifetimes and higher-ranked bounds are a tricky area to begin with, so I don't particularly fault the compiler and refrained from attributing them with things like \"confusing\", or \"weird\", or the above \"cryptic\" and I am not trying to summon Esteban.↩︎\n\n2\nIt's unfortunate that the feature has to be specified even though we can (and I have) set the required-features for an example in Cargo.toml. You'll currently get an error from cargo that tells you to add the correct --feature flag if you try running the example without it, so clearly cargo knows what's up. But this is one of these issues that are a lot more difficult to actually change than it seems on the surface - if you're curious, you can check out the cargo issue for this at cargo#4663. ↩︎\n\n3\nIn the example code, I've used a slightly different signature for request: there, it is written as fn request&lt;A: Api&lt;Request = A&gt;&gt; and takes the request as an A instead of an A::Request. Constraining the implementation of Api to be implemented on the request type itself is less flexible, but allows calling request without specifying A with a turbofish (as requester.request::&lt;FooRequest&gt;(req)) because the compiler is able to infer the generic parameter from the argument type. But it's also a bit ugly and requires bounding Api itself by Serialize, so I'm leaving it as a footnote. ↩︎\n\n4\nI'm presupposing that the logical handler is \"infallible\", which just means that if there is an error with or while processing the request, this will be communicated to the requester via the Reply as opposed to having the handler fail (by allowing it to return a Result&lt;Reply, E&gt; with some error). Since the protocol format and also (de-)serialization are handled by our API, any remaining error can only be a logical one. When implementing Api, this can be represented by making Reply be a Result&lt;T&gt;, using an enum FooReply as the Reply type that contains an InvalidRequest variant, or similar. ↩︎\n\n5\nThis is not the case for Serialize. When you serialize a type to some format, you probably intend to send the resulting bytes somewhere else, e.g. over the network to make a web request. It would be of little use to be able to borrow from the Rust type from within the serialized bytes, and besides you cannot serialize to a single byte buffer or string of which only a subsection is a reference to the original type and the rest is owned bytes, so serde doesn't support it. ↩︎\n\n6\nNo, label-break-value doesn't count here. ↩︎\n\n7\nIf the underlying protocol supports it, the API (as well as the service) could also be identified by a numeric ID or some other, more compact identifier. I'll stick to string names here, though, since it makes the examples more readable. ↩︎\n\n8\nNote that there is no way to do this with the original bound of H: for&lt;'de&gt; FnMut(A::Request&lt;'de&gt;) -&gt; A::Reply. There is simply no place in the syntax where we could even state an associated type. This might already give you an idea of how well this is going to turn out... ↩︎\n\n","id":"https://domenicquirl.github.io/blog/serde-handler/","title":"Being Generic over Zero-Copy Request Handlers"}},"docInfo":{"https://domenicquirl.github.io/":{"body":29,"title":0},"https://domenicquirl.github.io/blog/":{"body":0,"title":2},"https://domenicquirl.github.io/blog/langjam2021/":{"body":1706,"title":4},"https://domenicquirl.github.io/blog/parsing-basics/":{"body":8517,"title":5},"https://domenicquirl.github.io/blog/serde-handler/":{"body":4209,"title":7}},"length":5},"lang":"English"};